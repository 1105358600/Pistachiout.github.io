<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pistachiout的博客</title>
  
  <subtitle>每天多学一点知识,就少写一行代码</subtitle>
  <link href="https://pistachiout.github.io/atom.xml" rel="self"/>
  
  <link href="https://pistachiout.github.io/"/>
  <updated>2023-02-15T03:03:01.059Z</updated>
  <id>https://pistachiout.github.io/</id>
  
  <author>
    <name>Pistachiout</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/%E5%B0%8F%E5%9E%8B%E9%A1%B9%E7%9B%AE/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E-%E7%BD%97%E7%90%AA%E6%BA%90-M202276666/"/>
    <id>https://pistachiout.github.io/wiki/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/%E5%B0%8F%E5%9E%8B%E9%A1%B9%E7%9B%AE/%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E8%AF%B4%E6%98%8E-%E7%BD%97%E7%90%AA%E6%BA%90-M202276666/</id>
    <published>2023-02-15T03:03:01.059Z</published>
    <updated>2023-02-15T03:03:01.059Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、需求分析"><a href="#一、需求分析" class="headerlink" title="一、需求分析"></a>一、需求分析</h1><p>​设计一个简单的考试系统，可进行C++与Java的考试，考生姓名、考生学号、C++题目、Java题目、C++答案，Java答案分别存入..&#x2F;txt文件数据&#x2F;路径下的StudentsName、StudentsNum、QuestionC，QuestionJ、AnswerC、AnswerJtxt文件中，进入系统后输入学号验证并进入考试，系统将自动给选择题和填空题进行对错判断并给分，最后求出选择与填空题的考试总分并存入..&#x2F;txt文件数据&#x2F;Score.txt，而简答题与编程题则写入..&#x2F;txt文件数据&#x2F;路径下的shortAnswerC.txt&#x2F;shortAnswerJ.txt与programmingC.txt &#x2F;programming.txtJ文件供老师打分。</p><h1 id="二、逻辑流程"><a href="#二、逻辑流程" class="headerlink" title="二、逻辑流程"></a>二、逻辑流程</h1><hr><p>​                                                                     <img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps1.jpg" alt="img"> </p><p>图1：考试系统流程图</p><h1 id="三、考试类设计"><a href="#三、考试类设计" class="headerlink" title="三、考试类设计"></a>三、考试类设计</h1><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps2.jpg" alt="img"> </p><p>图2：考试系统类图</p><h2 id="①-学生类Student"><a href="#①-学生类Student" class="headerlink" title="①　学生类Student"></a>①　学生类Student</h2><p>学生类包括学生姓名与学号，学号用于登录系统并认证身份，学生姓名则用于记录选择题与填空题分数以及简答编程的答案。方法包括InitStudent（）初始化考生与Register（）登录考试。</p><h2 id="②-问题基类QandA"><a href="#②-问题基类QandA" class="headerlink" title="②　问题基类QandA"></a>②　问题基类QandA</h2><p>问题基类，属性包括问题，答案与对应的分数，而方法则包括：</p><ol><li>虚函数InitQandA（）用来初始化考题，答案以及分数，本系统只是模拟，故对于每道题初始默认为10分的分值，</li><li>choice（），fillIn（），shortAnswer（），programming（）等函数表示对于考题中的选择题，填空题等题型进行处理函数，其中shortAnswer（），programming（）为虚函数。</li><li>虚函数Exam（）,采用了模板方法模式，由于对于Java与C++考试时shortAnswer（），programming（）函数有细微的差别，但算法大致的逻辑一样，故将某些步骤推迟到子类，有助于算法的扩展。</li></ol><h2 id="③-C-考试类QandAC"><a href="#③-C-考试类QandAC" class="headerlink" title="③　C++考试类QandAC"></a>③　C++考试类QandAC</h2><p>C++考试类，若选择C++考试则执行该类的方法</p><ol><li>InitQandA（）用来初始化C++考题，答案以及分数，</li><li>choice（），fillIn（），shortAnswer（），programming（）等函数表示对于C++考题中的选择题，填空题等题型进行处理函数，并写入.&#x2F;txt文件数据&#x2F;路径下的Score.txt、shortAnswerC.txt与programmingC.txt文件。</li><li>Exam（）将 choice（），fillIn（），shortAnswer（），programming（）统一调用，完成C++考试，programming（）在输入为“end”时表示代码编写结束。</li></ol><h2 id="④-Java考试类QandAJ"><a href="#④-Java考试类QandAJ" class="headerlink" title="④　Java考试类QandAJ"></a>④　<strong>Java考试类QandAJ</strong></h2><p>Java考试类，若选择Java考试则执行该类的方法</p><p>1.InitQandA（）用来初始化Java考题，答案以及分数，2.choice（），fillIn（），shortAnswer（），programming（）等函数表示对于Java考题中的选择题，填空题等题型进行处理函数，并写入.&#x2F;txt文件数据&#x2F;路径下的Score.txt、shortAnswerJ.txt与programmingJ.txt文件。</p><p>3.Exam（）将 choice（），fillIn（），shortAnswer（），programming（）统一调用，完成Java考试，programming（）在输入为“end”时表示代码编写结束。</p><h1 id="四、考试截图"><a href="#四、考试截图" class="headerlink" title="四、考试截图"></a>四、<strong>考试截图</strong></h1><h2 id="①-用户登录-为方便老师测试，学号可输入为1"><a href="#①-用户登录-为方便老师测试，学号可输入为1" class="headerlink" title="①　用户登录 为方便老师测试，学号可输入为1"></a>①　用户登录 为方便老师测试，学号可输入为1</h2><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps18.jpg" alt="img"> </p><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps19.jpg" alt="img"> </p><h2 id="②-选择考试课目C"><a href="#②-选择考试课目C" class="headerlink" title="②　选择考试课目C++"></a>②　<strong>选择考试课目C++</strong></h2><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps20.jpg" alt="img">** **</p><h2 id="③-选择考试课目为Java"><a href="#③-选择考试课目为Java" class="headerlink" title="③　选择考试课目为Java"></a>③　选择考试课目为Java</h2><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps21.jpg" alt="img">** **</p><h2 id="④-选择题"><a href="#④-选择题" class="headerlink" title="④　选择题"></a>④　<strong>选择题</strong></h2><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps22.jpg" alt="img"> </p><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps23.jpg" alt="img"> </p><h2 id="⑤-填空题作答"><a href="#⑤-填空题作答" class="headerlink" title="⑤　填空题作答"></a>⑤　<strong>填空题作答</strong></h2><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps24.jpg" alt="img"> </p><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps25.jpg" alt="img"> </p><h2 id="⑥-简答题作答"><a href="#⑥-简答题作答" class="headerlink" title="⑥　简答题作答"></a>⑥　<strong>简答题作答</strong></h2><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps26.jpg" alt="img">** **</p><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps27.jpg" alt="img"> </p><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps28.jpg" alt="img"> </p><h2 id="⑦-编程题作答"><a href="#⑦-编程题作答" class="headerlink" title="⑦　编程题作答"></a>⑦　<strong>编程题作答</strong></h2><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps29.jpg" alt="img">** **</p><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps30.jpg" alt="img"> </p><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps31.jpg" alt="img"> </p><h2 id="⑧-分数统计"><a href="#⑧-分数统计" class="headerlink" title="⑧　分数统计"></a>⑧　<strong>分数统计</strong></h2><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps32.jpg" alt="img">** **</p><h2 id="⑨-考试结束"><a href="#⑨-考试结束" class="headerlink" title="⑨　考试结束"></a>⑨　<strong>考试结束</strong></h2><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps33.jpg" alt="img">** **</p><h2 id="⑩-简答题答案文件检查"><a href="#⑩-简答题答案文件检查" class="headerlink" title="⑩　简答题答案文件检查"></a>⑩　<strong>简答题答案文件检查</strong></h2><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps34.jpg" alt="img">** **</p><h2 id="⑪-编程题文件检查作答"><a href="#⑪-编程题文件检查作答" class="headerlink" title="⑪　编程题文件检查作答"></a>⑪　<strong>编程题文件检查作答</strong></h2><p><img src="file:///C:\Users\HF\AppData\Local\Temp\ksohtml16416\wps35.jpg" alt="img">** **</p><h1 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h1><p>本次实验我对于系统的功能性需求已基本全部实现，如选择判断自动判分，且分数与简答编程答案计入txt文件供后续老师判分。但由于我此前的学习没有深入C++以及QT可视化等方面的知识，对于非功能性需求没有特别突出的地方，如可视化方面、数据持久化方面没有亮点，但也尽量用到了自己学习过的知识，如在设计时进行类图设计，并考虑到了设计模式如模板方法的使用，并在代码注释方面也应有尽有。此外对于编程题也有改进的空间，虽然本系统中可以进行换行，但会消耗考生做题的时间。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、需求分析&quot;&gt;&lt;a href=&quot;#一、需求分析&quot; class=&quot;headerlink&quot; title=&quot;一、需求分析&quot;&gt;&lt;/a&gt;一、需求分析&lt;/h1&gt;&lt;p&gt;​	设计一个简单的考试系统，可进行C++与Java的考试，考生姓名、考生学号、C++题目、Java题目、C+</summary>
      
    
    
    
    <category term="软件项目" scheme="https://pistachiout.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="小型项目" scheme="https://pistachiout.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/%E5%B0%8F%E5%9E%8B%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E5%BA%93/LeetCode1179.%20%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E9%83%A8%E9%97%A8%E8%A1%A8%EF%BC%8C%E4%BD%BF%E7%94%A8group%20by%E4%B8%8Ecase%E8%81%9A%E5%90%88%E5%A4%84%E7%90%86/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E5%BA%93/LeetCode1179.%20%E9%87%8D%E6%96%B0%E6%A0%BC%E5%BC%8F%E5%8C%96%E9%83%A8%E9%97%A8%E8%A1%A8%EF%BC%8C%E4%BD%BF%E7%94%A8group%20by%E4%B8%8Ecase%E8%81%9A%E5%90%88%E5%A4%84%E7%90%86/</id>
    <published>2023-02-15T02:24:24.922Z</published>
    <updated>2023-02-15T02:24:25.543Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/e1d676d033c14a81876a7a3c75cf1399.png" alt="在这里插入图片描述"></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>聚合函数本质上就是常见编程语言里的reduce，也就是把一组数据处理成一个单一数据，所以可以这样写：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> id, <span class="built_in">sum</span>(revenue) <span class="keyword">as</span> total</span><br><span class="line"><span class="keyword">from</span> Department</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> id</span><br></pre></td></tr></table></figure><p>来表示一个部门的总收入。</p><p>这个操作在javascript中类似于这样：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">departments.<span class="title function_">reduce</span>(total, <span class="function"><span class="params">department</span> =&gt;</span> total + department.<span class="property">revenue</span>)</span><br></pre></td></tr></table></figure><p>max等其它聚合函数同理，都可以找到用reduce表示的等价形式。</p><p>那么代码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">month</span> <span class="keyword">when</span> <span class="string">&#x27;Jan&#x27;</span> <span class="keyword">then</span> revenue <span class="keyword">end</span>) <span class="keyword">as</span> Jan_Revenue,</span><br></pre></td></tr></table></figure><p>的意思就是说把所有的revenue聚合处理，处理的方法是，如果month的值是Jan，那么结果就是revenue，否则忽略。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> id,</span><br><span class="line">    <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">month</span> <span class="keyword">when</span> <span class="string">&#x27;Jan&#x27;</span> <span class="keyword">then</span> revenue <span class="keyword">end</span>) <span class="keyword">as</span> Jan_Revenue,</span><br><span class="line">    <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">month</span> <span class="keyword">when</span> <span class="string">&#x27;Feb&#x27;</span> <span class="keyword">then</span> revenue <span class="keyword">end</span>) <span class="keyword">as</span> Feb_Revenue,</span><br><span class="line">    <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">month</span> <span class="keyword">when</span> <span class="string">&#x27;Mar&#x27;</span> <span class="keyword">then</span> revenue <span class="keyword">end</span>) <span class="keyword">as</span> Mar_Revenue,</span><br><span class="line">    <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">month</span> <span class="keyword">when</span> <span class="string">&#x27;Apr&#x27;</span> <span class="keyword">then</span> revenue <span class="keyword">end</span>) <span class="keyword">as</span> Apr_Revenue,</span><br><span class="line">    <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">month</span> <span class="keyword">when</span> <span class="string">&#x27;May&#x27;</span> <span class="keyword">then</span> revenue <span class="keyword">end</span>) <span class="keyword">as</span> May_Revenue,</span><br><span class="line">    <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">month</span> <span class="keyword">when</span> <span class="string">&#x27;Jun&#x27;</span> <span class="keyword">then</span> revenue <span class="keyword">end</span>) <span class="keyword">as</span> Jun_Revenue,</span><br><span class="line">    <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">month</span> <span class="keyword">when</span> <span class="string">&#x27;Jul&#x27;</span> <span class="keyword">then</span> revenue <span class="keyword">end</span>) <span class="keyword">as</span> Jul_Revenue,</span><br><span class="line">    <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">month</span> <span class="keyword">when</span> <span class="string">&#x27;Aug&#x27;</span> <span class="keyword">then</span> revenue <span class="keyword">end</span>) <span class="keyword">as</span> Aug_Revenue,</span><br><span class="line">    <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">month</span> <span class="keyword">when</span> <span class="string">&#x27;Sep&#x27;</span> <span class="keyword">then</span> revenue <span class="keyword">end</span>) <span class="keyword">as</span> Sep_Revenue,</span><br><span class="line">    <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">month</span> <span class="keyword">when</span> <span class="string">&#x27;Oct&#x27;</span> <span class="keyword">then</span> revenue <span class="keyword">end</span>) <span class="keyword">as</span> Oct_Revenue,</span><br><span class="line">    <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">month</span> <span class="keyword">when</span> <span class="string">&#x27;Nov&#x27;</span> <span class="keyword">then</span> revenue <span class="keyword">end</span>) <span class="keyword">as</span> Nov_Revenue,</span><br><span class="line">    <span class="built_in">sum</span>(<span class="keyword">case</span> <span class="keyword">month</span> <span class="keyword">when</span> <span class="string">&#x27;Dec&#x27;</span> <span class="keyword">then</span> revenue <span class="keyword">end</span>) <span class="keyword">as</span> Dec_Revenue</span><br><span class="line"><span class="keyword">from</span> Department</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> id</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/e1d676d033c14a81876a7a3c75cf1399.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;解题思路&quot;&gt;&lt;a href=&quot;#解题思路&quot; class=&quot;hea</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="数据库" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/dp%E8%A7%A3%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/dp%E8%A7%A3%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E5%AD%90%E4%B8%B2/</id>
    <published>2023-02-15T02:23:35.306Z</published>
    <updated>2023-02-15T02:23:35.910Z</updated>
    
    <content type="html"><![CDATA[<h3 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h3><p>动态规划<br>对于一个子串而言，如果它是回文串，并且长度大于 22，那么将它首尾的两个字母去除之后，它仍然是个回文串。例如对于字符串“ababa”，如果我们已经知道 “bab” 是回文串，那么 “ababa” 一定是回文串，这是因为它的首尾两个字母都是“a”。</p><p>根据这样的思路，我们就可以用动态规划的方法解决本题。我们用 P(i,j) 表示 s[i:j]是否为回文串：</p><p>那么我们就可以写出动态规划的状态转移方程：<br>P(i, j) &#x3D; P(i+1, j-1)∧(Si&#x3D;&#x3D;Sj)</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">longestPalindrome</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> s.length();</span><br><span class="line">        <span class="keyword">if</span> (len &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> s;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">maxLen</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">begin</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// dp[i][j] 表示 s[i..j] 是否是回文串</span></span><br><span class="line">        <span class="type">boolean</span>[][] dp = <span class="keyword">new</span> <span class="title class_">boolean</span>[len][len];</span><br><span class="line">        <span class="comment">// 初始化：所有长度为 1 的子串都是回文串</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            dp[i][i] = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">char</span>[] charArray = s.toCharArray();</span><br><span class="line">        <span class="comment">// 递推开始</span></span><br><span class="line">        <span class="comment">// 先枚举子串长度</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">L</span> <span class="operator">=</span> <span class="number">2</span>; L &lt;= len; L++) &#123;</span><br><span class="line">            <span class="comment">// 枚举左边界，左边界的上限设置可以宽松一些</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">                <span class="comment">// 由 L 和 i 可以确定右边界，即 j - i + 1 = L 得</span></span><br><span class="line">                <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> L + i - <span class="number">1</span>;</span><br><span class="line">                <span class="comment">// 如果右边界越界，就可以退出当前循环</span></span><br><span class="line">                <span class="keyword">if</span> (j &gt;= len) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (charArray[i] != charArray[j]) &#123;</span><br><span class="line">                    dp[i][j] = <span class="literal">false</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">if</span> (j - i &lt; <span class="number">3</span>) &#123;</span><br><span class="line">                        dp[i][j] = <span class="literal">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        dp[i][j] = dp[i + <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 只要 dp[i][L] == true 成立，就表示子串 s[i..L] 是回文，此时记录回文长度和起始位置</span></span><br><span class="line">                <span class="keyword">if</span> (dp[i][j] &amp;&amp; j - i + <span class="number">1</span> &gt; maxLen) &#123;</span><br><span class="line">                    maxLen = j - i + <span class="number">1</span>;</span><br><span class="line">                    begin = i;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s.substring(begin, begin + maxLen);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;解题思路&quot;&gt;&lt;a href=&quot;#解题思路&quot; class=&quot;headerlink&quot; title=&quot;解题思路&quot;&gt;&lt;/a&gt;解题思路&lt;/h3&gt;&lt;p&gt;动态规划&lt;br&gt;对于一个子串而言，如果它是回文串，并且长度大于 22，那么将它首尾的两个字母去除之后，它仍然是个回文串。例如</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="算法笔记" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Ubuntu%E7%BC%96%E5%88%B6%E6%A8%A1%E6%8B%9F%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%AD%90%E7%B3%BB%E7%BB%9F%EF%BC%8C%E7%94%B1%E8%BF%9B%E7%A8%8B%E5%BB%BA%E7%AB%8B%E6%A8%A1%E5%9D%97%E3%80%81%E8%BF%9B%E7%A8%8B%E6%92%A4%E6%B6%88%E6%A8%A1%E5%9D%97%E3%80%81%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%A1%A8%E7%BB%84%E6%88%90%EF%BC%8C%E5%B9%B6%E5%8C%85%E6%8B%AC%E8%BF%9B%E7%A8%8B%E5%88%87%E6%8D%A2%E5%92%8C%E8%B0%83%E5%BA%A6%E6%A8%A1%E5%9D%97/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/Ubuntu%E7%BC%96%E5%88%B6%E6%A8%A1%E6%8B%9F%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E8%BF%9B%E7%A8%8B%E7%AE%A1%E7%90%86%E5%AD%90%E7%B3%BB%E7%BB%9F%EF%BC%8C%E7%94%B1%E8%BF%9B%E7%A8%8B%E5%BB%BA%E7%AB%8B%E6%A8%A1%E5%9D%97%E3%80%81%E8%BF%9B%E7%A8%8B%E6%92%A4%E6%B6%88%E6%A8%A1%E5%9D%97%E3%80%81%E8%BF%9B%E7%A8%8B%E6%8E%A7%E5%88%B6%E8%A1%A8%E7%BB%84%E6%88%90%EF%BC%8C%E5%B9%B6%E5%8C%85%E6%8B%AC%E8%BF%9B%E7%A8%8B%E5%88%87%E6%8D%A2%E5%92%8C%E8%B0%83%E5%BA%A6%E6%A8%A1%E5%9D%97/</id>
    <published>2023-02-15T02:22:05.059Z</published>
    <updated>2023-02-15T02:22:05.688Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、进程管理子系统"><a href="#一、进程管理子系统" class="headerlink" title="一、进程管理子系统"></a>一、进程管理子系统</h1><h2 id="在Ubuntu下编制一个程序，模拟实现一个简单的进程管理子系统，它由进程建立模块、进程撤消模块、进程控制表组成，并包括进程切换和调度模块。"><a href="#在Ubuntu下编制一个程序，模拟实现一个简单的进程管理子系统，它由进程建立模块、进程撤消模块、进程控制表组成，并包括进程切换和调度模块。" class="headerlink" title="在Ubuntu下编制一个程序，模拟实现一个简单的进程管理子系统，它由进程建立模块、进程撤消模块、进程控制表组成，并包括进程切换和调度模块。"></a>在Ubuntu下编制一个程序，模拟实现一个简单的进程管理子系统，它由进程建立模块、进程撤消模块、进程控制表组成，并包括进程切换和调度模块。</h2><ol><li>【设计要求1】<br>该子系统接收新进程建立请求的方式是循环显示“请输入新命令行”，然后根据用户键入内容启动相应进程，其后不等待子进程结束，马上显示下一个“请输入新命令行”如此循环往复。<br>当建立进程时，相应读写进程控制表，然后借助底层环境OS中象fork和exec这样的函数将新进程投入运行（这与底层环境的实际OS不同，实际OS将新进程投入运行时要布置现场，最后时程序技术器寄存器）。进程撤消时，利用底层OS的wait( )从子进程回到本子系统，相应修改PCB。<br>比较该子系统与实际系统中的相应功能的异同与差距，尤其在现场保存与恢复方面的比较。</li><li>【设计要求2】<br>在上题的基础上，进一步模拟实现进程切换。希望能实现时间片满或接到sleep调用（或信号时）进行进程切换（选择其一即可）。<br>若要实现时间片，假设时间片为1秒钟，设定底层环境OS每个1秒向该系统发一个信号，本子系统将本子系统的进程切换和调度模块设定为该信号的处理程序。或者每当接到子进程发出的的sleep调用（或信号）时进行进程切换，这里子进程发出的sleep调用（或信号）代表实际系统中可能发生的sleep( )调用、等待某一时间发生等情况，进程调度采用简单的FIFO算法。</li><li>【设计要求3】<br>编制一个进程调度算法模块。进程调度是处理机管理的核心内容。本设计要求用编写和调试一个简单的进程调度程序。通过设计本项目可以加深理解有关进程控制块、进程队列的概念，并体会和了解最高优先数优先的调度算法（即把处理机分配给优先数最高的进程）和先来先服务算法的具体实施办法。<br>(1) 进程调度算法：采用最高优先数优先的调度算法（即把处理机分配给优先数最高的进程）和先来先服务算法。<br> (2) 每个进程有一个进程控制块（PCB）表示。进程控制块可以包含如下信息：进程名、优先数、到达时间、需要运行时间、已用CPU时间、进程状态等等。<br>(3) 进程的优先数及需要的运行时间可以事先人为地指定（也可以由随机数产生）。进程的到达时间为进程输入的时间。进程的运行时间以时间片为单位进行计算。<br>(4) 每个进程的状态可以是就绪W（Wait）、运行R（Run）、或完成F（Finish）三种状态之一。<br>(5) 就绪进程获得CPU后都只能运行一个时间片。用已占用CPU时间加1来表示。如果运行一个时间片后，进程的已占用CPU时间已达到所需要的运行时间，则撤消该进程，如果运行一个时间片后进程的已占用CPU时间还未达所需要的运行时间，也就是进程还需要继续运行，此时应将进程的优先数减1（即降低一级），然后把它插入就绪队列等待CPU。<br>(6) 每进行一次调度程序都打印一次运行进程、就绪队列、以及各个进程的PCB，以便进行检查。<br>(7) 重复以上过程，直到所要进程都完成为止。</li></ol><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//进程类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">pcb</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//构造函数</span></span><br><span class="line"><span class="built_in">pcb</span>(<span class="type">char</span> Name[<span class="number">20</span>], <span class="type">int</span> Rank, <span class="type">int</span> Needtime)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">strcpy</span>(name, Name);</span><br><span class="line">state = <span class="string">&quot;Wait&quot;</span>;</span><br><span class="line">rank = Rank;</span><br><span class="line">needtime = Needtime;</span><br><span class="line">runtime = <span class="number">0</span>;</span><br><span class="line">next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];</span><br><span class="line">string state;</span><br><span class="line"><span class="type">int</span> rank;</span><br><span class="line"><span class="type">int</span> needtime;</span><br><span class="line"><span class="type">int</span> runtime;</span><br><span class="line">pcb* next;</span><br><span class="line">&#125;;</span><br><span class="line">pcb *ready = <span class="literal">NULL</span>, *now = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//输出进程</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">output</span><span class="params">(pcb *point)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;.............................................................................&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n 进程名称 \t 进程状态 \t   优先级 \t  所需时间 \t  已运行时间&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;|   &quot;</span> &lt;&lt; point-&gt;name ;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;      |       &quot;</span> &lt;&lt; point-&gt;state ;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;      |        &quot;</span> &lt;&lt; point-&gt;rank ;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;      |        &quot;</span> &lt;&lt; point-&gt;needtime;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;      |        &quot;</span> &lt;&lt; point-&gt;runtime  &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;.............................................................................&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//进程依次排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sort</span><span class="params">(pcb *point)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (ready == <span class="literal">NULL</span>)<span class="comment">//若链表为空</span></span><br><span class="line">&#123;</span><br><span class="line">ready = point;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">pcb *point1 = ready, *point2 = ready-&gt;next;</span><br><span class="line"><span class="keyword">if</span> (point-&gt;rank &gt; point1-&gt;rank)<span class="comment">//若为优先等级最高，放在队首</span></span><br><span class="line">&#123;</span><br><span class="line">point-&gt;next = ready;</span><br><span class="line">ready = point;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (point2 != <span class="literal">NULL</span>)<span class="comment">//遍历链表，直到找到合适位置</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (point-&gt;rank &gt; point2-&gt;rank)</span><br><span class="line">&#123;</span><br><span class="line">point1-&gt;next = point;</span><br><span class="line">point-&gt;next = point2;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">point1 = point2;</span><br><span class="line">point2 = point2-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (point2 == <span class="literal">NULL</span>)<span class="comment">//若为优先等级最低，放在队尾</span></span><br><span class="line">&#123;</span><br><span class="line">point1-&gt;next = point;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//进程结束函数，打印已完成进程，释放内存</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">finish</span><span class="params">(pcb *point)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">point-&gt;state = <span class="string">&quot;Finish&quot;</span>;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;******************************** 进程&quot;</span> &lt;&lt; point-&gt;name &lt;&lt; <span class="string">&quot;已经完成 ********************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n 进程名称 \t 进程状态 \t   优先级 \t  所需时间 \t  已运行时间&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;|   &quot;</span> &lt;&lt; point-&gt;name ;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;      |       &quot;</span> &lt;&lt; point-&gt;state ;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;    |       &quot;</span> &lt;&lt; point-&gt;rank ;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;      |        &quot;</span> &lt;&lt; point-&gt;needtime;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;       |        &quot;</span> &lt;&lt; point-&gt;runtime  &lt;&lt; endl;</span><br><span class="line"><span class="built_in">delete</span>(point);</span><br><span class="line">point = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//运行一个单位时间</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">running</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">now = ready;</span><br><span class="line">ready = ready-&gt;next;</span><br><span class="line">now-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">now-&gt;state = <span class="string">&quot;Run&quot;</span>;</span><br><span class="line">now-&gt;rank--;</span><br><span class="line">now-&gt;runtime++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (now-&gt;needtime == now-&gt;runtime)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//若当前进程执行完毕</span></span><br><span class="line"><span class="built_in">finish</span>(now);</span><br><span class="line">now = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//若当前进程没有执行完毕</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***************************  当前正在运行的进程是 *************************** &quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">output</span>(now);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打印就绪队列</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;***************************  当前就绪队列状态为 *************************** &quot;</span> &lt;&lt; endl;</span><br><span class="line">pcb *point = ready;</span><br><span class="line"><span class="keyword">while</span> (point != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">output</span>(point);</span><br><span class="line">point = point-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//把没执行完的进程重新放入队列</span></span><br><span class="line"><span class="keyword">if</span> (now != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">now-&gt;state = <span class="string">&quot;Wait&quot;</span>;</span><br><span class="line"><span class="built_in">sort</span>(now);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//freopen(&quot;in.txt&quot;, &quot;r&quot;, stdin);</span></span><br><span class="line"><span class="type">int</span> t;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;**** 输入进程数目：&quot;</span>;</span><br><span class="line">cin &gt;&gt; t;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="comment">//进程信息输入</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= t; i++)</span><br><span class="line">&#123;</span><br><span class="line">pcb *temp;</span><br><span class="line"><span class="type">char</span> name[<span class="number">20</span>];<span class="type">int</span> rank;<span class="type">int</span> needtime;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;**** 请输入第&quot;</span> &lt;&lt; i &lt;&lt; <span class="string">&quot;个进程的信息 ****&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入该进程的名字：&quot;</span>;</span><br><span class="line">cin &gt;&gt; name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入该进程的优先等级:&quot;</span>;</span><br><span class="line">cin &gt;&gt; rank;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;请输入该进程需要的运行时间:&quot;</span>;</span><br><span class="line">cin &gt;&gt; needtime;</span><br><span class="line">temp = <span class="keyword">new</span> <span class="built_in">pcb</span>(name, rank, needtime);</span><br><span class="line"><span class="built_in">sort</span>(temp);</span><br><span class="line">temp = <span class="literal">NULL</span>;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//打印执行前的就绪队列</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************************** 执行前就绪队列排序 *****************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">pcb *point = ready;</span><br><span class="line"><span class="keyword">while</span> (point != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">output</span>(point);</span><br><span class="line">point = point-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************************** 程序准备正式开始执行 *****************************&quot;</span> &lt;&lt; endl;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//程序开始执行</span></span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line"><span class="keyword">while</span> (now != <span class="literal">NULL</span> || ready != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//一次运行一个单位时间</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n\n 按任一键继续......&quot;</span> &lt;&lt; endl;</span><br><span class="line">ch = <span class="built_in">getchar</span>();</span><br><span class="line"><span class="built_in">running</span>();</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//所有进程完成</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;*************************** 所有进程均已执行完成 ***************************&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="二、进程管理子系统截图"><a href="#二、进程管理子系统截图" class="headerlink" title="二、进程管理子系统截图"></a>二、进程管理子系统截图</h2><p><img src="https://img-blog.csdnimg.cn/20210531231507881.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20210531231230583.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210531231254819.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210531231258747.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210531231303604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210531231307143.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20210531231333261.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210531231344130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210531231347522.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210531231350452.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210531231536537.png" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、进程管理子系统&quot;&gt;&lt;a href=&quot;#一、进程管理子系统&quot; class=&quot;headerlink&quot; title=&quot;一、进程管理子系统&quot;&gt;&lt;/a&gt;一、进程管理子系统&lt;/h1&gt;&lt;h2 id=&quot;在Ubuntu下编制一个程序，模拟实现一个简单的进程管理子系统，它由进程建</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="操作系统" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/P%E3%80%81V%E6%93%8D%E4%BD%9C%E4%B8%8Ec++%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E7%88%B8%E7%88%B8%E6%94%BE%E8%8B%B9%E6%9E%9C%EF%BC%8C%E5%A6%88%E5%A6%88%E6%94%BE%E6%A1%94%E5%AD%90%EF%BC%8C%E4%B8%A4%E4%B8%AA%E5%84%BF%E5%AD%90%E4%B8%93%E5%90%83%E7%9B%98%E5%AD%90%E4%B8%AD%E6%A1%94%E5%AD%90%EF%BC%8C%E4%B8%A4%E4%B8%AA%E5%A5%B3%E5%84%BF%E4%B8%93%E5%90%83%E7%9B%98%E5%AD%90%E4%B8%AD%E8%8B%B9%E6%9E%9C%E9%97%AE%E9%A2%98/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/P%E3%80%81V%E6%93%8D%E4%BD%9C%E4%B8%8Ec++%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E7%88%B8%E7%88%B8%E6%94%BE%E8%8B%B9%E6%9E%9C%EF%BC%8C%E5%A6%88%E5%A6%88%E6%94%BE%E6%A1%94%E5%AD%90%EF%BC%8C%E4%B8%A4%E4%B8%AA%E5%84%BF%E5%AD%90%E4%B8%93%E5%90%83%E7%9B%98%E5%AD%90%E4%B8%AD%E6%A1%94%E5%AD%90%EF%BC%8C%E4%B8%A4%E4%B8%AA%E5%A5%B3%E5%84%BF%E4%B8%93%E5%90%83%E7%9B%98%E5%AD%90%E4%B8%AD%E8%8B%B9%E6%9E%9C%E9%97%AE%E9%A2%98/</id>
    <published>2023-02-15T02:21:56.276Z</published>
    <updated>2023-02-15T02:21:56.879Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二、吃水果综合设计"><a href="#二、吃水果综合设计" class="headerlink" title="二、吃水果综合设计"></a>二、吃水果综合设计</h1><h2 id="桌子上有一只盘子，最多可容纳两个水果，每次只能放入或取出一个水果。爸爸专向盘子放苹果（apple），妈妈专向盘子中放桔子（orange）；两个儿子专等吃盘子中的桔子，两个女儿专等吃盘子中的苹果。请用P、V操作来实现爸爸、妈妈、儿子、女儿之间的同步与互斥关系。"><a href="#桌子上有一只盘子，最多可容纳两个水果，每次只能放入或取出一个水果。爸爸专向盘子放苹果（apple），妈妈专向盘子中放桔子（orange）；两个儿子专等吃盘子中的桔子，两个女儿专等吃盘子中的苹果。请用P、V操作来实现爸爸、妈妈、儿子、女儿之间的同步与互斥关系。" class="headerlink" title="桌子上有一只盘子，最多可容纳两个水果，每次只能放入或取出一个水果。爸爸专向盘子放苹果（apple），妈妈专向盘子中放桔子（orange）；两个儿子专等吃盘子中的桔子，两个女儿专等吃盘子中的苹果。请用P、V操作来实现爸爸、妈妈、儿子、女儿之间的同步与互斥关系。"></a>桌子上有一只盘子，最多可容纳两个水果，每次只能放入或取出一个水果。爸爸专向盘子放苹果（apple），妈妈专向盘子中放桔子（orange）；两个儿子专等吃盘子中的桔子，两个女儿专等吃盘子中的苹果。请用P、V操作来实现爸爸、妈妈、儿子、女儿之间的同步与互斥关系。</h2><p>【设计要求】<br>了解信号量机制，了解并掌握进程同步和互斥机制，熟悉信号量的操作函数，利用信号量实现对共享资源的控制。编程模拟实现这一问题的程序控制，分析处理过程。</p><h2 id="1-1-pv操作代码"><a href="#1-1-pv操作代码" class="headerlink" title="1. 1.pv操作代码"></a>1. 1.pv操作代码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">semaphore empty=2,mutex=1,apple=0,orange=0; </span><br><span class="line"></span><br><span class="line">void <span class="function"><span class="title">father</span></span>()&#123;</span><br><span class="line">     <span class="keyword">do</span>&#123;</span><br><span class="line">           P(empty);    //等待盘子为空</span><br><span class="line">           P(metux);    //等待获取对盘子的操作</span><br><span class="line">            爸爸向盘中放一个苹果;</span><br><span class="line">           V(mutex);   //释放对盘子的操作</span><br><span class="line">           V(apple);   //通知女儿可以来盘子中取苹果</span><br><span class="line">    &#125;<span class="keyword">while</span>(TRUE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void <span class="function"><span class="title">mather</span></span>()&#123;            </span><br><span class="line">     <span class="keyword">do</span>&#123;</span><br><span class="line">           P(empty);//等待盘子为空</span><br><span class="line">           P(metux);//等待获取对盘子的操作</span><br><span class="line">            妈妈向盘中放一个桔子;</span><br><span class="line">           V(mutex);//释放对盘子的操作</span><br><span class="line">           V(orange);//通知儿子可以来盘子中取橘子</span><br><span class="line">    &#125;<span class="keyword">while</span>(TRUE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void <span class="function"><span class="title">son1</span></span>()&#123;                        </span><br><span class="line">     <span class="keyword">do</span>&#123;</span><br><span class="line">           P(orange);       //判断盘子中是否有桔子</span><br><span class="line">           P(metux);        //等待获取对盘子的操作</span><br><span class="line">            儿子1取出盘中的桔子;</span><br><span class="line">           V(mutex);      //释放对盘子的操作</span><br><span class="line">           V(empty);      //盘子空了，可以继续放水果了</span><br><span class="line">    &#125;<span class="keyword">while</span>(TRUE);</span><br><span class="line">&#125;</span><br><span class="line">void <span class="function"><span class="title">son2</span></span>()&#123;                        </span><br><span class="line">     <span class="keyword">do</span>&#123;</span><br><span class="line">           P(orange);       //判断盘子中是否有桔子</span><br><span class="line">           P(metux);        //等待获取对盘子的操作</span><br><span class="line">            儿子2取出盘中的桔子;</span><br><span class="line">           V(mutex);      //释放对盘子的操作</span><br><span class="line">           V(empty);      //盘子空了，可以继续放水果了</span><br><span class="line">    &#125;<span class="keyword">while</span>(TRUE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">void <span class="function"><span class="title">daugther1</span></span>()&#123; </span><br><span class="line">     <span class="keyword">do</span>&#123;</span><br><span class="line">           P(apple);       //判断盘子中是否有苹果</span><br><span class="line">           P(metux);        //等待获取对盘子的操作</span><br><span class="line">            女儿1取出盘中的苹果;</span><br><span class="line">           V(mutex);      //释放对盘子的操作</span><br><span class="line">           V(empty);      //盘子空了，可以继续放水果了</span><br><span class="line">    &#125;<span class="keyword">while</span>(TRUE);</span><br><span class="line">&#125;</span><br><span class="line">void <span class="function"><span class="title">daugther2</span></span>()&#123; </span><br><span class="line">     <span class="keyword">do</span>&#123;</span><br><span class="line">           P(apple);       //判断盘子中是否有苹果</span><br><span class="line">           P(metux);        //等待获取对盘子的操作</span><br><span class="line">            女儿2取出盘中的苹果;</span><br><span class="line">           V(mutex);      //释放对盘子的操作</span><br><span class="line">           V(empty);      //盘子空了，可以继续放水果了</span><br><span class="line">    &#125;<span class="keyword">while</span>(TRUE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void <span class="function"><span class="title">main</span></span>() &#123;                 //四个并发进程的同步执行</span><br><span class="line">cobegin</span><br><span class="line">   father(); mather(); son();son();daugther();daugther();</span><br><span class="line">coend</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="2-c-程序代码"><a href="#2-c-程序代码" class="headerlink" title="2.c++程序代码"></a>2.c++程序代码</h1><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;semaphore.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;errno.h&gt;</span></span></span><br><span class="line">  <span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> total 2</span></span><br><span class="line"> </span><br><span class="line"><span class="type">sem_t</span> remain, apple, orange, mutex;</span><br><span class="line"><span class="type">static</span> <span class="type">unsigned</span> <span class="type">int</span> vremain = <span class="number">2</span>, vapple = <span class="number">0</span>, vorange = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">father</span><span class="params">(<span class="type">void</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">mather</span><span class="params">(<span class="type">void</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">son1</span><span class="params">(<span class="type">void</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">son2</span><span class="params">(<span class="type">void</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">daughter1</span><span class="params">(<span class="type">void</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">daughter2</span><span class="params">(<span class="type">void</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print_sem</span><span class="params">()</span></span>;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">pthread_t</span> fa, ma, so ,da;</span><br><span class="line"><span class="built_in">sem_init</span>(&amp;remain, <span class="number">0</span>, total);<span class="comment">//总数初始化为2</span></span><br><span class="line"><span class="built_in">sem_init</span>(&amp;apple, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//盆子中苹果数, 开始为0</span></span><br><span class="line"><span class="built_in">sem_init</span>(&amp;orange, <span class="number">0</span>, <span class="number">0</span>);<span class="comment">//盆子中梨子数, 开始为0</span></span><br><span class="line"><span class="built_in">sem_init</span>(&amp;mutex, <span class="number">0</span>, <span class="number">1</span>);<span class="comment">//互斥锁, 初始为1</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">pthread_create</span>(&amp;fa, <span class="literal">NULL</span>, &amp;father, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">pthread_create</span>(&amp;ma, <span class="literal">NULL</span>, &amp;mather, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">pthread_create</span>(&amp;so, <span class="literal">NULL</span>, &amp;son1, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">pthread_create</span>(&amp;da, <span class="literal">NULL</span>, &amp;daughter1, <span class="literal">NULL</span>);</span><br><span class="line"> <span class="built_in">pthread_create</span>(&amp;so, <span class="literal">NULL</span>, &amp;son2, <span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">pthread_create</span>(&amp;da, <span class="literal">NULL</span>, &amp;daughter2, <span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">for</span>(;;);</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">father</span><span class="params">(<span class="type">void</span> *arg)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">sem_wait</span>(&amp;remain);</span><br><span class="line"><span class="built_in">sem_wait</span>(&amp;mutex);</span><br><span class="line"> vremain--;</span><br><span class="line"> vapple++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;父亲放苹果, 剩余空间=%u, 苹果数=%u\n&quot;</span>, vremain, vapple);</span><br><span class="line"><span class="built_in">sem_post</span>(&amp;mutex);</span><br><span class="line"><span class="built_in">sem_post</span>(&amp;apple);</span><br><span class="line"><span class="built_in">sleep</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">mather</span><span class="params">(<span class="type">void</span> *arg)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">sem_wait</span>(&amp;remain);</span><br><span class="line"><span class="built_in">sem_wait</span>(&amp;mutex);</span><br><span class="line">vremain--; vorange++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;母亲放橘子, 剩余空间=%u, 橘子数=%u\n&quot;</span>, vremain, vorange);</span><br><span class="line"><span class="built_in">sem_post</span>(&amp;mutex);</span><br><span class="line"><span class="built_in">sem_post</span>(&amp;orange);</span><br><span class="line"><span class="built_in">sleep</span>(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">son1</span><span class="params">(<span class="type">void</span> *arg)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">sem_wait</span>(&amp;orange);</span><br><span class="line"><span class="built_in">sem_wait</span>(&amp;mutex);               </span><br><span class="line">vremain++; vorange--;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;儿子吃橘子, 剩余空间=%u, 橘子数=%u\n&quot;</span>, vremain, vorange);</span><br><span class="line"><span class="built_in">sem_post</span>(&amp;mutex);</span><br><span class="line"><span class="built_in">sem_post</span>(&amp;remain);</span><br><span class="line"><span class="built_in">sleep</span>(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="function"><span class="type">void</span> *<span class="title">son2</span><span class="params">(<span class="type">void</span> *arg)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">sem_wait</span>(&amp;orange);</span><br><span class="line"><span class="built_in">sem_wait</span>(&amp;mutex);               </span><br><span class="line">vremain++; vorange--;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;儿子2吃橘子, 剩余空间=%u, 橘子数=%u\n&quot;</span>, vremain, vorange);</span><br><span class="line"><span class="built_in">sem_post</span>(&amp;mutex);</span><br><span class="line"><span class="built_in">sem_post</span>(&amp;remain);</span><br><span class="line"><span class="built_in">sleep</span>(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">daughter1</span><span class="params">(<span class="type">void</span> *arg)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">sem_wait</span>(&amp;apple);</span><br><span class="line"><span class="built_in">sem_wait</span>(&amp;mutex);</span><br><span class="line"> vremain++; vapple--;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;女儿1吃苹果, 剩余空间=%u, 苹果数=%u\n&quot;</span>, vremain, vapple);</span><br><span class="line"><span class="built_in">sem_post</span>(&amp;mutex);</span><br><span class="line"><span class="built_in">sem_post</span>(&amp;remain);</span><br><span class="line"><span class="built_in">sleep</span>(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> *<span class="title">daughter2</span><span class="params">(<span class="type">void</span> *arg)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>) &#123;</span><br><span class="line"><span class="built_in">sem_wait</span>(&amp;apple);</span><br><span class="line"><span class="built_in">sem_wait</span>(&amp;mutex);</span><br><span class="line">vremain++; vapple--;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;女儿2吃苹果, 剩余空间=%u, 苹果数=%u\n&quot;</span>, vremain, vapple);</span><br><span class="line"><span class="built_in">sem_post</span>(&amp;mutex);</span><br><span class="line"><span class="built_in">sem_post</span>(&amp;remain);</span><br><span class="line"><span class="built_in">sleep</span>(<span class="number">3</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print_sem</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> val1, val2, val3;</span><br><span class="line"><span class="built_in">sem_getvalue</span>(&amp;remain, &amp;val1);</span><br><span class="line"><span class="built_in">sem_getvalue</span>(&amp;apple, &amp;val2);</span><br><span class="line"><span class="built_in">sem_getvalue</span>(&amp;orange, &amp;val3);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Semaphore: remain:%d, apple:%d, orange:%d\n&quot;</span>, val1, val2, val3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-程序模拟实现截图"><a href="#3-程序模拟实现截图" class="headerlink" title="3.程序模拟实现截图"></a>3.程序模拟实现截图</h2><p>第一次模拟实验截图<br><img src="https://img-blog.csdnimg.cn/20210531232136564.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>第二次模拟实验截图<br><img src="https://img-blog.csdnimg.cn/20210531232142476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;二、吃水果综合设计&quot;&gt;&lt;a href=&quot;#二、吃水果综合设计&quot; class=&quot;headerlink&quot; title=&quot;二、吃水果综合设计&quot;&gt;&lt;/a&gt;二、吃水果综合设计&lt;/h1&gt;&lt;h2 id=&quot;桌子上有一只盘子，最多可容纳两个水果，每次只能放入或取出一个水果。爸爸专向</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="操作系统" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%9C%89_%E6%97%A0%E9%87%8D%E5%A4%8D%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%EF%BC%8C%E7%9F%A9%E9%98%B5%E6%9F%A5%E6%89%BE%EF%BC%8C%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E4%BD%8D%E6%95%B0%EF%BC%8C%E6%8E%A5%E9%9B%A8%E6%B0%B4%E7%AE%97%E6%B3%95/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%9C%89_%E6%97%A0%E9%87%8D%E5%A4%8D%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%EF%BC%8C%E7%9F%A9%E9%98%B5%E6%9F%A5%E6%89%BE%EF%BC%8C%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E4%BD%8D%E6%95%B0%EF%BC%8C%E6%8E%A5%E9%9B%A8%E6%B0%B4%E7%AE%97%E6%B3%95/</id>
    <published>2023-02-15T02:21:23.988Z</published>
    <updated>2023-02-15T02:21:24.644Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、二分查找问题："><a href="#1、二分查找问题：" class="headerlink" title="1、二分查找问题："></a>1、二分查找问题：</h2><p>一个无重复的有序整数数组中查找某个数的位置，如果找到则返回下标，否则返回-1。<br><img src="https://img-blog.csdnimg.cn/20210519231400759.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">def <span class="title function_">BinarySearch</span><span class="params">(Arr,x)</span>:#二分查找</span><br><span class="line">    <span class="keyword">if</span> <span class="title function_">len</span><span class="params">(Arr)</span>==<span class="number">0</span>:</span><br><span class="line">       <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    left=<span class="number">0</span></span><br><span class="line">    right=len(Arr)<span class="number">-1</span></span><br><span class="line">    <span class="keyword">while</span> right&gt;=left:</span><br><span class="line">        mid=(<span class="type">int</span>)((left+right)/<span class="number">2</span>)</span><br><span class="line">        <span class="keyword">if</span> Arr[mid]&lt;x:</span><br><span class="line">            left=mid+<span class="number">1</span></span><br><span class="line">        elif Arr[mid]&gt;x:</span><br><span class="line">            right=mid<span class="number">-1</span></span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            <span class="keyword">return</span> mid</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">Array=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">10</span>,<span class="number">55</span>]</span><br><span class="line">print(Array)</span><br><span class="line">print(BinarySearch(Array,<span class="number">5</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>二分查找算法，每次循环都相当于去掉一半的值，并将剩下一半的值内设好right，left，mid等索引，然后在剩下一半的值内查找，直到找到值，由此可以很快的找到所要找的值.</p><h2 id="2、-有重复的二分查找"><a href="#2、-有重复的二分查找" class="headerlink" title="2、 有重复的二分查找"></a>2、 有重复的二分查找</h2><p>：在一个可重复的升序的整数数组中查找某个数的开始位置和结束位置。 如果数组中不存在，则返回 [-1, -1]。 算法时间复杂度要求为 O(log n) 。<br>示例1：<br>输入：nums &#x3D; [5,7,7,8,8,10]<br>           target &#x3D; 8<br>输出：[3,4]<br>示例2：<br>输入：nums &#x3D; [5,7,7,8,8,10]<br>           target &#x3D; 6<br>输出：[-1,-1]<br><img src="https://img-blog.csdnimg.cn/20210519231408401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p> -<br>   在看到这道题时，我马上想到还是使用二分法查找到所要找的target的其中一个，然后再依次查找所找到target的索引两边的值，直到索引左边或右边的值不再是所查值target时，但很快便发现这样的时间复杂度不是O(log n)，于是只好改变算法。<br>因此想到用二分查找法找到其中一个Arr[mid]&#x3D;target后，不查找到target的所有范围，而只是对比target左边或右边一个位置的值，如果Arr[mid]左边还有target，则将right等于mid-1，循环将在已找到的target左边继续查找，直到Arr[mid]左边不是target，这样返回的mid则是target在数组中在开始的索引；如果Arr[mid]右边还有target，则将left等于mid+1，循环将在已找到的target右边继续查找，直到Arr[mid]右边不是target，这样返回的mid则是target在数组中最后的索引，而且由于每次循环仅判断target左边或右边一次的值，故数据循环度还是O(log n).这样将找到开始值与结束值分别用函数表示出来，从而得到target的范围，这样完成了有重复的某个数的开始位置和结束位置的查找，且时间复杂度符合要求。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">searchFirstIndex</span>(<span class="params">Arr,target</span>):<span class="comment">#定义函数得到查找数的开始位置</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(Arr)==<span class="number">0</span>:<span class="comment">#如果数组不存在，返回-1</span></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    left=<span class="number">0</span></span><br><span class="line">    right=<span class="built_in">len</span>(Arr)-<span class="number">1</span><span class="comment">#设置左、右两个坐标</span></span><br><span class="line">    <span class="keyword">while</span> right&gt;=left:<span class="comment">#循环条件为右坐标大于左坐标</span></span><br><span class="line">        mid=left+(right-left)//<span class="number">2</span><span class="comment">#每次循环重新取mid为left与right的中值</span></span><br><span class="line">        <span class="keyword">if</span> Arr[mid]&gt;target:<span class="comment">#如果mid的值小于target的值，则x位于mid右边,left+1</span></span><br><span class="line">            right=mid-<span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> Arr[mid]&lt;target:<span class="comment">#如果mid的值大于target的值，则x位于mid左边,right-1</span></span><br><span class="line">            left=mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> mid==left <span class="keyword">or</span> Arr[mid-<span class="number">1</span>]!=target:<span class="comment">#如果mid已是所查数的开始位置</span></span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            right=mid-<span class="number">1</span></span><br><span class="line"><span class="comment">#mid左边还有target，则将right等于mid-1，循环将在已找到的target左边继续查找，直到mid左边不是target</span></span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">searchLastIndex</span>(<span class="params">Arr,target</span>):<span class="comment">#定义函数得到查找数的结束位置</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(Arr)==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">    left=<span class="number">0</span></span><br><span class="line">    right=<span class="built_in">len</span>(Arr)-<span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> right&gt;=left:</span><br><span class="line">        mid=left+(right-left)//<span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> Arr[mid]&gt;target:</span><br><span class="line">            right=mid-<span class="number">1</span></span><br><span class="line">        <span class="keyword">elif</span> Arr[mid]&lt;target:</span><br><span class="line">            left=mid+<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> mid==left <span class="keyword">or</span> Arr[mid-<span class="number">1</span>]!=target:<span class="comment">#如果mid已是所查数的最后位置</span></span><br><span class="line">                <span class="keyword">return</span> mid</span><br><span class="line">            left=mid+<span class="number">1</span></span><br><span class="line"><span class="comment">#mid右边还有target，则将left等于mid+1，循环将在已找到的target右边继续查找，直到mid右边不是target</span></span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">searchRange</span>(<span class="params">Arr,target</span>):<span class="comment">#定义函数得到查找数的范围</span></span><br><span class="line">    first=searchFirstIndex(Arr,target)</span><br><span class="line">    last=searchLastIndex(Arr,target)</span><br><span class="line">    <span class="keyword">return</span> [first,last]</span><br><span class="line">Arr=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]</span><br><span class="line"><span class="built_in">print</span> (searchRange(Arr,<span class="number">5</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3、矩阵查找问题："><a href="#3、矩阵查找问题：" class="headerlink" title="3、矩阵查找问题："></a>3、矩阵查找问题：</h2><p>在一个 m x n 的有序整数矩阵中查找某个数。有序矩阵是指每行中的整数从左到右为升序排列、每行的第一个整数大于前一行的最后一个整数。找到返回true，否则返回false。<br>示例1：<br>输入：matrix &#x3D; [  [1,   3,  5,  7],<br>                              [10, 11, 16, 20],<br>                              [23, 30, 34, 50]]<br>           target &#x3D; 3<br>输出：true<br>示例2：<br>输入：matrix &#x3D; [  [1,   3,  5,  7],<br>                               [10, 11, 16, 20],<br>                               [23, 30, 34, 50]]<br>          target &#x3D; 13<br>输出：false<br><img src="https://img-blog.csdnimg.cn/20210519231451889.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>首先想到将矩阵转换为数组，对数组进行二分查找找到所查的数，而且也很好实现。<br><img src="https://img-blog.csdnimg.cn/2021051923143530.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>之后又想到一种方法，由于有序矩阵是指每行中的整数从左到右为升序排列、每行的第一个整数大于前一行的最后一个整数，因此我们可以先对每一行最后一列的值与所查的值比较，这样就能找到所查值所在的行，然后再在该行进行遍历，便能找到所查的值是否存在。存在则返回true，否则返回false。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">searchMatrix</span>(<span class="params">matrix,num</span>):</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    j = <span class="built_in">len</span>(matrix[<span class="number">0</span>]) - <span class="number">1</span><span class="comment">#j为列值</span></span><br><span class="line">    max_i = <span class="built_in">len</span>(matrix) - <span class="number">1</span><span class="comment">#行值</span></span><br><span class="line">    <span class="keyword">while</span> i &lt;= max_i <span class="keyword">and</span> j &gt;= <span class="number">0</span>:<span class="comment">#循环条件</span></span><br><span class="line">        <span class="keyword">if</span> matrix[i][j] == num:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span><span class="comment">#存在返回true</span></span><br><span class="line">        <span class="keyword">elif</span> matrix[i][j] &lt;num:<span class="comment">#当值比所求值小，则增加行数，得到所求值的行数</span></span><br><span class="line">            i = i + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:<span class="comment">#在行内减少列数，得到是否存在所求值</span></span><br><span class="line">            j = j - <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span><span class="comment">#不存在返回false</span></span><br><span class="line">matrix=[[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>],[<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>],[<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]]</span><br><span class="line"><span class="built_in">print</span>(searchMatrix(matrix,<span class="number">5</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="4、-寻找两个有序数组的中位数"><a href="#4、-寻找两个有序数组的中位数" class="headerlink" title="4、 寻找两个有序数组的中位数"></a>4、 寻找两个有序数组的中位数</h2><p>：给定两个大小为 m 和 n 的有序数组 nums1 和 nums2。 找出这两个有序数组的中位数， 假设 nums1 和 nums2 不会同时为空，要求算法的时间复杂度为 O(log(m + n))。<br>示例1：输入：nums1 &#x3D; [1, 3]           nums2 &#x3D; [2]          输出：2.0<br>示例2：输入：nums1 &#x3D; [1, 2]           nums2 &#x3D; [3, 4]      输出：2.5<br><img src="https://img-blog.csdnimg.cn/20210519231509480.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ul><li>看到2个有序数组，由于学习过归并排序的缘故马上想到将两个数组归并到一个数组后使用得到中位数，但要求算法的时间复杂度为 O(log(m + n))，很明显归并法并不满足。<br>在进过星期三递归算法的学习后，知道递归算法的时间复杂度是log类型的，于是考虑使用递归法求解，但还是没有想到算法。于是百度后发现有很多不同的解析，有些解析写得很深奥，我认真学习了其中最容易懂的算法。<br>该方法的关键函数就是找到2个有序数组中第k大值（从1开始）的函数，该函数就是运用了递归法，先将所求2个数组的num【k&#x2F;&#x2F;2-1】进行比较看，哪个数组的num【k&#x2F;&#x2F;2-1】小，而两个k&#x2F;&#x2F;2的数最多k个数，则第k大的数必不在num【k&#x2F;&#x2F;2-1】小的前k&#x2F;&#x2F;2个数内，故递归，对该数组从num【k&#x2F;&#x2F;2+1】与另一数组再次使用函数，并使k&#x3D;k-k&#x2F;&#x2F;2，一直循环，直到k&#x3D;1时返回2个数组中最小的值，这就是2个有序数组中第k大的值。如[1,2,3,4]与[5,6,7]两个数组，对比nums【4&#x2F;&#x2F;2-1】，明显知道[1,2,3,4]内2比[5,6,7]中6小，因此2必是比第k个数小的数，因此去掉1,2，递归继续在[3,4]与[5,6,7]内找到第4-2&#x3D;2大的数。<br>若两数组总长度length为奇数，查找中位数即找到两个数组第length&#x2F;&#x2F;2大的数，两数组总长度length为奇数length为偶数，查找中位数即找到两个数组第length&#x2F;&#x2F;2与第length&#x2F;&#x2F;2+1个数的平均值。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">findkth</span>(<span class="params">nums1,nums2,k</span>):<span class="comment">#递归找到两个数组中第k大的数</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(nums1)&gt;<span class="built_in">len</span>(nums2):<span class="comment">#保证nums1的长度比nums2的长度短</span></span><br><span class="line">        <span class="keyword">return</span> findkth(nums2,nums1,k)</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">len</span>(nums1)==<span class="number">0</span>):<span class="comment">#如果nums1为空，则返回nums2的第k大的数</span></span><br><span class="line">        <span class="keyword">return</span> nums2[k-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">if</span> k==<span class="number">1</span>:<span class="comment">#k=1时，返回最小的值</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">min</span>(nums1[<span class="number">0</span>],nums2[<span class="number">0</span>])</span><br><span class="line">    i=k//<span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> nums1[i-<span class="number">1</span>]&gt;nums2[i-<span class="number">1</span>]:</span><br><span class="line">    <span class="comment">#比较数组的第i个数，如果nums1[i-1]大，而两个i的数组内最多k个数，</span></span><br><span class="line">    <span class="comment">#则第k大的数必不在nums2的前k//2个数内，故返回num1与nums2[i:]的第k-1个小的数</span></span><br><span class="line">        <span class="keyword">return</span> findkth(nums1,nums2[i:],k-i)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> findkth(nums1[i:],nums2,k-i)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">findmid</span>(<span class="params">nums1,nums2</span>):</span><br><span class="line">    length=<span class="built_in">len</span>(nums1)+<span class="built_in">len</span>(nums2)</span><br><span class="line">    <span class="keyword">if</span> length%<span class="number">2</span>==<span class="number">1</span>:<span class="comment">#length为奇数，查找中位数即找到两个数组第length//2大的数</span></span><br><span class="line">        <span class="keyword">return</span> findkth(nums1,nums2,length//<span class="number">2</span>+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> length%<span class="number">2</span>==<span class="number">0</span>:<span class="comment">#length为偶数，查找中位数即找到两个数组第length//2与第length//2+1个数的平均值</span></span><br><span class="line">        <span class="keyword">return</span> (findkth(nums1,nums2,length//<span class="number">2</span>)+findkth(nums1,nums2,length//<span class="number">2</span>+<span class="number">1</span>))/<span class="number">2.0</span></span><br><span class="line"></span><br><span class="line">nums1=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</span><br><span class="line">nums2=[<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">11</span>]</span><br><span class="line"><span class="built_in">print</span>(findmid(nums1,nums2))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="5、-假设给定的一个数组描述了-n-个宽度为-1-的柱子高度，请求出按此排列的柱子，下雨之后能接多少雨水。"><a href="#5、-假设给定的一个数组描述了-n-个宽度为-1-的柱子高度，请求出按此排列的柱子，下雨之后能接多少雨水。" class="headerlink" title="5、 假设给定的一个数组描述了 n 个宽度为 1 的柱子高度，请求出按此排列的柱子，下雨之后能接多少雨水。"></a>5、 假设给定的一个数组描述了 n 个宽度为 1 的柱子高度，请求出按此排列的柱子，下雨之后能接多少雨水。</h2><p>示例：<br>输入： [0,1,0,2,1,0,1,3,2,1,2,1]<br>输出： 6<br>示例图：<br><img src="https://img-blog.csdnimg.cn/20210519231516740.png" alt="在这里插入图片描述"></p><ul><li>刚看到该题时，以为改题目很难，但认真想了一会便发现很简单，将接到水按每一高度来算，在这一高度想要接到水，至少这一高度要有2个该高度的柱子，且接到水的量等于两个柱子索引的差再减一，即类似种树问题。因此，从数组最大值到1进行遍历，每次遍历找到数组中等于该值的所有索引，再将该高度的水全加起来，如高度&#x3D;2时，数组值等于2的下标为[3, 7, 8, 10]，3到7有3格水，7到8接不到水，8到10一格水，则2这一高度共有4格水。因此将高度从最大值到1每一高度的水加起来就能得到接到水的总量</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">def <span class="title function_">sumOfWater</span><span class="params">(nums)</span>:</span><br><span class="line">    num=max(nums)<span class="meta">#num为遍历的值，从最大值开始遍历</span></span><br><span class="line">    sum=<span class="number">0</span><span class="meta">#sum表示接到水的重量</span></span><br><span class="line">    <span class="keyword">for</span> num in range (max(nums),<span class="number">0</span>,<span class="number">-1</span>):#对数组按值从最大值到<span class="number">1</span>遍历，每次循环sum增加所遍历高度能接到的水</span><br><span class="line">        temp=[]#数组temp用来记录大于等于遍历值的数组索引</span><br><span class="line">        <span class="keyword">for</span> j in range (<span class="number">0</span>,len(nums)):#下标遍历数组，temp记录索引</span><br><span class="line">            <span class="keyword">if</span> nums[j]&gt;=num:</span><br><span class="line">                temp.append(j)</span><br><span class="line">        print(temp)#输出数组便于观察</span><br><span class="line">        <span class="keyword">if</span> len(temp)&gt;<span class="number">1</span>:#当数组中遍历的值的个数大于<span class="number">1</span>时</span><br><span class="line">            <span class="keyword">for</span> index in range (<span class="number">0</span>,len(temp)<span class="number">-1</span>):#分别求出该遍历高度每<span class="number">2</span>个索引间的水数</span><br><span class="line">                sum=sum+temp[index+<span class="number">1</span>]-temp[index]<span class="number">-1</span></span><br><span class="line">#如num=<span class="number">2</span>时，temp为[<span class="number">3</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">10</span>]，<span class="number">3</span>到<span class="number">7</span>有<span class="number">3</span>格水，<span class="number">7</span>到<span class="number">8</span>没水，<span class="number">8</span>到<span class="number">10</span>一格水</span><br><span class="line">    <span class="keyword">return</span> sum</span><br><span class="line">nums= [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">1</span>]</span><br><span class="line">print(sumOfWater(nums))</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1、二分查找问题：&quot;&gt;&lt;a href=&quot;#1、二分查找问题：&quot; class=&quot;headerlink&quot; title=&quot;1、二分查找问题：&quot;&gt;&lt;/a&gt;1、二分查找问题：&lt;/h2&gt;&lt;p&gt;一个无重复的有序整数数组中查找某个数的位置，如果找到则返回下标，否则返回-1。&lt;br</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="算法笔记" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E9%80%86%E5%BA%8F%E9%97%AE%E9%A2%98%EF%BC%8C%E6%9C%80%E5%A4%A7%E9%97%B4%E9%9A%99%E9%97%AE%E9%A2%98%EF%BC%8C%E6%A3%8B%E7%9B%98%E8%A6%86%E7%9B%96%E9%97%AE%E9%A2%98%EF%BC%8C%E6%9C%80%E6%8E%A5%E8%BF%91%E7%82%B9%E5%AF%B9%E9%97%AE%E9%A2%98/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E9%80%86%E5%BA%8F%E9%97%AE%E9%A2%98%EF%BC%8C%E6%9C%80%E5%A4%A7%E9%97%B4%E9%9A%99%E9%97%AE%E9%A2%98%EF%BC%8C%E6%A3%8B%E7%9B%98%E8%A6%86%E7%9B%96%E9%97%AE%E9%A2%98%EF%BC%8C%E6%9C%80%E6%8E%A5%E8%BF%91%E7%82%B9%E5%AF%B9%E9%97%AE%E9%A2%98/</id>
    <published>2023-02-15T02:21:15.093Z</published>
    <updated>2023-02-15T02:21:15.727Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、实验目的及要求"><a href="#一、实验目的及要求" class="headerlink" title="一、实验目的及要求"></a>一、实验目的及要求</h1><h2 id="1、从数组-seq-中找出和为-s-的数值组合，有多少种可能，并打印这些组合。"><a href="#1、从数组-seq-中找出和为-s-的数值组合，有多少种可能，并打印这些组合。" class="headerlink" title="1、从数组 seq 中找出和为 s 的数值组合，有多少种可能，并打印这些组合。"></a>1、从数组 seq 中找出和为 s 的数值组合，有多少种可能，并打印这些组合。</h2><p>（1）问题描述：求一个算法：N个数，用其中M个任意组合相加等于一个已知数X。得出这M个数是哪些数。<br>（2）问题举例：seq &#x3D; [1, 2, 3, 4, 5, 6, 7, 8, 9] s &#x3D; 14 则全部可能的数字组合有： 5+9, 6+8 1+4+9, 1+5+8, 1+6+7, 2+3+9, 2+4+8, 2+5+7, 3+4+7, 3+5+6 1+2+5+6, 1+3+4+6, 1+2+4+7, 1+2+3+8, 2+3+4+5 共计15种。<br>    <img src="https://img-blog.csdnimg.cn/20210520172705943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520172713377.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">combination</span>(<span class="params">seq, s, tmp=<span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">    <span class="keyword">global</span> M<span class="comment">#全局变量M记录第几种</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(seq)==<span class="number">0</span>:   <span class="comment"># 一次递归直到seq长度为0时结束</span></span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">if</span> seq[<span class="number">0</span>] == s:  <span class="comment"># 当seq[0]等于s时，找到一种，则M+1，并输出tmp+str(seq[0])</span></span><br><span class="line">        M+=<span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>+<span class="built_in">str</span>(M)+<span class="string">&#x27;种:&#x27;</span>+tmp + <span class="built_in">str</span>(seq[<span class="number">0</span>]))</span><br><span class="line">        </span><br><span class="line">            <span class="comment">#每次函数两次递归，分别为是否包含seq[0]</span></span><br><span class="line">    combination(seq[<span class="number">1</span>:], s, tmp)</span><br><span class="line">            <span class="comment">#第一次递归不包含seq[0]，下一次递归tmp不变</span></span><br><span class="line">    combination(seq[<span class="number">1</span>:], s-seq[<span class="number">0</span>], <span class="built_in">str</span>(seq[<span class="number">0</span>]) + <span class="string">&#x27;+&#x27;</span> + tmp)</span><br><span class="line">            <span class="comment">#第二次递归包含seq[0],下一次递归tmp加上str(seq[0])</span></span><br><span class="line"></span><br><span class="line">seq = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">M=<span class="number">0</span></span><br><span class="line">combination(seq,<span class="number">14</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>   实验时，想到要求出所有可能的组合，而每组组合则需要考虑数组中每个数，则使用递归，每次减少一个数，并每次函数2次递归，第一个递归则是不包括数组第一个数，第二个递归则是包括数组第一个数，这样递归完则可以将每个数是否加上共2^len(num)种情况全考虑，将每种组合得到并输出。</p><h2 id="2、编程实现统计逆序问题"><a href="#2、编程实现统计逆序问题" class="headerlink" title="2、编程实现统计逆序问题"></a>2、编程实现统计逆序问题</h2><p>（1）问题描述：豆瓣是一家图书、电影和音乐唱片的评价与推荐网站。这类推荐类网站会根据你对系列书籍的评价，从它的读者数据库中找出与你的评价非常类似的读者推荐给你，从而帮助你找到品味相近的朋友。假设你对五本书进行了评价，这五本书你的打分从低到高依次是[1，2，3，4，5]。另外，读者A的对这五本书的打分是[2，4，1，3，5]，而读者B的打分是[3，4，1，5，2]。那么，应该把读者A还是读者B推荐给你呢? 豆瓣也许会把读者A推荐给你，因为相比较于读者B，读者A与你的口味更为相投。那怎么来量化推荐的准则呢?这可以通过计算一个称为逆序量的来度量相似度。对于输入序列，如果元素的索引 i＜j，且ai＞aj，那么元素ai和aj是一对逆序。打分[1，2，3，4，5]的逆序对数为0，读者A打分[2，4，1，3，5]存在3对逆序，分别是｛2，1],[4，1]和[4，3]。读者B打分[3，4，1，5，2]的逆序数为5对，分别是[3，1]，[3，2]，[4，1],[4，2]和[5，2]。因此，如果用逆序数来度量推荐准则，那么读者A相比较于读者B与你有更为接近的品位。本问题就是计算给定序列的逆序数。<br>（2）算法设计：一个简单直接的算法就是对于每一个元素，计算该元素右边有几个元素比它小。例如，对于输入序列[2，4，1，3，5]，元素2的右边共有1个元素叫比它小，元素4的右边 共有2个元素[1，3]比它小。因此，以上序列共有3对逆序。<br><img src="https://img-blog.csdnimg.cn/20210520172742814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">inverseNum</span>(<span class="params">nums</span>):</span><br><span class="line">    <span class="built_in">sum</span>=<span class="number">0</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(nums)==<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(nums)):</span><br><span class="line">        <span class="keyword">if</span> nums[<span class="number">0</span>]&gt;nums[i]:<span class="comment">#判断num[0]相对数组是否有逆序数，有着sum+1</span></span><br><span class="line">            <span class="built_in">sum</span>=<span class="built_in">sum</span>+<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>+inverseNum(nums[<span class="number">1</span>:])<span class="comment">#递归</span></span><br><span class="line">nums=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(inverseNum(nums))</span><br><span class="line">            </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>算法：每个函数仅判断数组第一个值对数组是否有逆序数，然后再对数组【1：】递归</p><h2 id="3、编程实现最大间隙问题"><a href="#3、编程实现最大间隙问题" class="headerlink" title="3、编程实现最大间隙问题"></a>3、编程实现最大间隙问题</h2><p>（1）问题描述：给定n 个实数x1 , x2 , , xn ，求这n 个数在实轴上相邻2 个数之间的最大差值。要求设计出线性时间算法。<br>（2）问题举例：输入数据：5<br>                                              2.3，3.1，7.5，1.5，6.3<br>                           输出数据：3.2</p><p><img src="https://img-blog.csdnimg.cn/20210520172810749.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2021052017281545.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">maxGap</span>(<span class="params">nums</span>):</span><br><span class="line">    <span class="built_in">max</span>=nums[<span class="number">0</span>]</span><br><span class="line">    <span class="built_in">min</span>=nums[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(nums)):<span class="comment">#找到数组的最大值与最小值</span></span><br><span class="line">        <span class="keyword">if</span> nums[i]&gt;<span class="built_in">max</span>:</span><br><span class="line">            <span class="built_in">max</span>=nums[i]</span><br><span class="line">        <span class="keyword">if</span> nums[i]&lt;<span class="built_in">min</span>:</span><br><span class="line">            <span class="built_in">min</span>=nums[i]</span><br><span class="line">            </span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(nums)==<span class="number">2</span>:<span class="comment">#如果数组长度为2，返回2值之差</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">abs</span>(nums[<span class="number">0</span>]-nums[<span class="number">1</span>])</span><br><span class="line">    </span><br><span class="line">    length=(<span class="built_in">max</span>-<span class="built_in">min</span>)/(<span class="built_in">len</span>(nums)-<span class="number">1</span>)<span class="comment">#将最大值与最小值之间平均分为n-1个范围</span></span><br><span class="line">    low,high,count=&#123;&#125;,&#123;&#125;,&#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(nums)-<span class="number">1</span>):</span><br><span class="line">        low[j]=<span class="built_in">max</span>+<span class="number">1</span><span class="comment">#将每个范围的左坐标赋值为数组max+1</span></span><br><span class="line">        high[j]=<span class="built_in">min</span>-<span class="number">1</span><span class="comment">#将每个范围的右坐标赋值为数组min-1</span></span><br><span class="line">        count[j]=<span class="number">0</span> <span class="comment">#count用来记录数组中的值落在范围中的个数</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(nums)):<span class="comment">#对数组中每个数遍历，找到每个数应该在哪个范围</span></span><br><span class="line">        index=(nums[i]-<span class="built_in">min</span>)//length<span class="comment">#index表示数在第index+1个范围内</span></span><br><span class="line">        <span class="keyword">if</span> index==<span class="built_in">len</span>(nums)-<span class="number">1</span>:</span><br><span class="line">                    <span class="comment">#当index为n-1时，表示该数为最大值，index-1,分在第index+1即第n-1个范围内</span></span><br><span class="line">            index-=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> nums[i]&lt;low[index]:</span><br><span class="line">                    <span class="comment">#low[index]最开始赋值为max+1，即第一次落在该范围内的数赋给low[index]</span></span><br><span class="line">                    <span class="comment">#之后落在该范围内数如果比low[index]小，即将该数赋给low[index]</span></span><br><span class="line">            low[index]=nums[i]</span><br><span class="line">        <span class="keyword">if</span> nums[i]&gt;high[index]:</span><br><span class="line">                    <span class="comment">#high[index]最开始赋值为min+1，即第一次落在该范围内的数赋给high[index]</span></span><br><span class="line">                    <span class="comment">#之后落在该范围内数如果比high[index]大，即将该数赋给high[index]</span></span><br><span class="line">            high[index]=nums[i]</span><br><span class="line">        count[index]+=<span class="number">1</span><span class="comment">#第index+1个范围内每落入一个数，count[index]+1</span></span><br><span class="line">        </span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    maxgap=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(nums)-<span class="number">1</span>):</span><br><span class="line">            <span class="comment">#因为除了min和max还有n-2个数，放入到n-1个范围内，必至少有一个范围内没有数放入</span></span><br><span class="line">            <span class="comment">#且易知没有数的范围两边的范围内的数之间的间距比在同一范围内的数的间距大</span></span><br><span class="line">            <span class="comment">#因此数组最大间距必是相邻范围内差距</span></span><br><span class="line">        <span class="keyword">if</span> count[i]==<span class="number">0</span>:</span><br><span class="line">            <span class="comment">#当范围内没有放入数时，该范围最小值与最大值都设为左边的范围的最大值</span></span><br><span class="line">            low[i]=high[i-<span class="number">1</span>]</span><br><span class="line">            high[i]=low[i]</span><br><span class="line">        <span class="keyword">if</span> low[i]-high[i-<span class="number">1</span>]&gt;maxgap:</span><br><span class="line">            <span class="comment">#求2个范围之间的差距，差距最大值即为数组的最大差距</span></span><br><span class="line">            maxgap=low[i]-high[i-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> maxgap</span><br><span class="line">nums=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">9</span>]</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;最大间隙为&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(maxGap(nums))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>刚开始以为可以先排序，然后再求出最大间隙，后来发现这样达到不了线性时间长度的要求，于是百度发现，可以先求出最大值与最小值，然后再将其中的间隙分为len(nums)-1个范围，这样将剩下的len-2个放入到这些范围中，然后再进行最大间隙的处理便能再线性时间内解决。</p><h2 id="4、编程实现棋盘覆盖问题"><a href="#4、编程实现棋盘覆盖问题" class="headerlink" title="4、编程实现棋盘覆盖问题"></a>4、编程实现棋盘覆盖问题</h2><p>（1）问题描述：在一个2^k * 2^k个方格组成的棋盘中，恰有一个方格与其他方格不同，称该方格为一特殊方格，且称该棋盘为一特殊棋盘。现在要用L型骨牌覆盖给定的特殊棋盘上除特殊方格以外的所有方格，且任何2个L型骨牌不得重叠覆盖。<br>（2）算法设计：把棋盘等分成四个正方形分别是：左上、左下、右上、右下 四个子棋盘，对子棋盘进行递归求解。</p><p><img src="https://img-blog.csdnimg.cn/2021052017284998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520172854459.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">chess</span>(<span class="params">tr,tc,pr,pc,size</span>):<span class="comment">#tr，tc为左上角在棋盘中的位置，pr，pc为特殊棋子的位置，size为棋盘大小</span></span><br><span class="line">  <span class="keyword">global</span> mark</span><br><span class="line">  <span class="keyword">global</span> table</span><br><span class="line">  <span class="keyword">if</span> size==<span class="number">1</span>:</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  mark+=<span class="number">1</span><span class="comment">#每次新的递归当size大于1时，用新的l型方块填，即mark+1</span></span><br><span class="line">  count=mark<span class="comment">#为count赋值mark</span></span><br><span class="line">  half=size//<span class="number">2</span><span class="comment">#half为size大小的一半</span></span><br><span class="line">  <span class="keyword">if</span> pr&lt;tr+half <span class="keyword">and</span> pc&lt;tc+half:<span class="comment">#如果特殊棋子的位置小于初始位置+half，即特殊棋子在左上角，则在左上角棋盘递归</span></span><br><span class="line">    chess(tr,tc,pr,pc,half)</span><br><span class="line">  <span class="keyword">else</span>:<span class="comment">#如果特殊棋子不在左上角，则在右下角用count型覆盖，并使右下角定义为特殊棋子，再递归左上角</span></span><br><span class="line">    table[tr+half-<span class="number">1</span>][tc+half-<span class="number">1</span>]=count</span><br><span class="line">    chess(tr,tc,tr+half-<span class="number">1</span>,tc+half-<span class="number">1</span>,half)</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">if</span> pr&lt;tr+half <span class="keyword">and</span> pc&gt;=tc+half:<span class="comment">#如果特殊棋子在右上角</span></span><br><span class="line">    chess(tr,tc+half,pr,pc,half)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    table[tr+half-<span class="number">1</span>][tc+half]=count</span><br><span class="line">    chess(tr,tc+half,tr+half-<span class="number">1</span>,tc+half,half)</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">if</span> pr&gt;=tr+half <span class="keyword">and</span> pc&lt;tc+half:<span class="comment">#如果特殊棋子在左下角</span></span><br><span class="line">    chess(tr+half,tc,pr,pc,half)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    table[tr+half][tc+half-<span class="number">1</span>]=count</span><br><span class="line">    chess(tr+half,tc,tr+half,tc+half-<span class="number">1</span>,half)</span><br><span class="line">    </span><br><span class="line">  <span class="keyword">if</span> pr&gt;=tr+half <span class="keyword">and</span> pc&gt;=tc+half:<span class="comment">#如果特殊棋子在右下角</span></span><br><span class="line">    chess(tr+half,tc+half,pr,pc,half)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    table[tr+half][tc+half]=count</span><br><span class="line">    chess(tr+half,tc+half,tr+half,tc+half,half)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">table</span>):</span><br><span class="line">  n=<span class="built_in">len</span>(table)</span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">&#x27;%2s&#x27;</span>%table[i][j],end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">mark=<span class="number">0</span></span><br><span class="line">n=<span class="number">8</span></span><br><span class="line">table=[[-<span class="number">1</span> <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(n)] <span class="keyword">for</span> y <span class="keyword">in</span> <span class="built_in">range</span>(n)]<span class="comment">#初始化table</span></span><br><span class="line">chess(<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">5</span>,n)</span><br><span class="line">show(table)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>   在上课听过算法思路并看过代码后比较容易的写出程序。</p><h2 id="5、编程实现最接近点对问题"><a href="#5、编程实现最接近点对问题" class="headerlink" title="5、编程实现最接近点对问题"></a>5、编程实现最接近点对问题</h2><p>（1）问题描述：在包含有n个点的集合S中，找出距离最近的两个点。设 p1(x1,y1)，p2(x2,y2)，……，pn(xn,yn)是平面的n个点。严格地将，最近点对可能不止一对，输出一对即可。<br>（2）算法设计：利用分治法思想解决此问题。将集合S分成两个子集S1和S2，最近点对将会出现三种情况：在S1中，在S2中或者最近点对分别在集合S1和S2中。利用递归法分别计算前两种情况，再与第三种情况相比较，输出三者中最小的距离。</p><p><img src="https://img-blog.csdnimg.cn/20210520172921469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520172926661.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line">minDitsance=<span class="built_in">float</span>(<span class="string">&quot;inf&quot;</span>)</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">distance</span>(<span class="params">x,y</span>):<span class="comment">#求出x，y两点间的距离</span></span><br><span class="line">    h=math.sqrt((x[<span class="number">0</span>]-y[<span class="number">0</span>])**<span class="number">2</span>+(x[<span class="number">1</span>]-y[<span class="number">1</span>])**<span class="number">2</span>)</span><br><span class="line">    <span class="comment">#print(x,y)</span></span><br><span class="line">    <span class="keyword">return</span> h</span><br><span class="line">        </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">min_between</span>(<span class="params">left,right,minDitsance</span>):<span class="comment">#找到左右各取一点的距离的最小值</span></span><br><span class="line">    x=<span class="built_in">float</span>(<span class="string">&quot;inf&quot;</span>)</span><br><span class="line">    mini=left[-<span class="number">1</span>][<span class="number">0</span>]-minDitsance<span class="comment">#比较范围最小值为左边最右点的x值减去已知最小距离</span></span><br><span class="line">    maxi=left[-<span class="number">1</span>][<span class="number">0</span>]+minDitsance<span class="comment">#比较范围最大值为左边最右点的x值加上最小距离</span></span><br><span class="line">    <span class="comment">#print(minDitsance)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> left:<span class="comment">#取左边的点</span></span><br><span class="line">        <span class="keyword">if</span> (mini&lt;i[<span class="number">0</span>]&lt;maxi):<span class="comment">#当左边点x轴在离左边最右点一个最小距离内时</span></span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> right:</span><br><span class="line">                <span class="keyword">if</span> ((mini&lt;j[<span class="number">0</span>]&lt;maxi)<span class="keyword">and</span> <span class="built_in">abs</span>(i[<span class="number">1</span>]-j[<span class="number">1</span>])&lt;minDitsance):</span><br><span class="line">                    <span class="comment">#当i，j的y值也在左边最右点y值一个最小距离内时求出这些点的最小距离</span></span><br><span class="line">                    x=<span class="built_in">min</span>(x,distance(i,j))</span><br><span class="line">    <span class="keyword">return</span> x</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">divide</span>(<span class="params"><span class="built_in">list</span></span>):<span class="comment">#递归法求最小距离</span></span><br><span class="line">    <span class="keyword">global</span> minDitsance</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">len</span>(<span class="built_in">list</span>)==<span class="number">2</span>):<span class="comment">#列表长度为2是返回两点距离</span></span><br><span class="line">        <span class="keyword">return</span> distance(<span class="built_in">list</span>[<span class="number">0</span>],<span class="built_in">list</span>[<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">len</span>(<span class="built_in">list</span>)&lt;<span class="number">2</span>):<span class="comment">#长度小于2返回inf</span></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">float</span>(<span class="string">&quot;inf&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        i=<span class="built_in">int</span>(<span class="built_in">len</span>(<span class="built_in">list</span>)/<span class="number">2</span>)</span><br><span class="line">        left = <span class="built_in">list</span>[<span class="number">0</span>:i]</span><br><span class="line">        right = <span class="built_in">list</span>[i:]<span class="comment">#长度大于2时，将已经按x轴排序的点分割为左一半元素,右一半元素,左右分别求最近点</span></span><br><span class="line">        s1=divide(left)<span class="comment">#且用递归对分开的2边继续分直到找到最近点</span></span><br><span class="line">        s2=divide(right)</span><br><span class="line">        <span class="comment">#print(left)</span></span><br><span class="line">        <span class="comment">#print(right)</span></span><br><span class="line">        s3=min_between(left,right,minDitsance)</span><br><span class="line">        s=<span class="built_in">min</span>(s1,s2,s3)<span class="comment">#最后进行比较,将左，右两边的最近距离与左右各取一点的最短距离比较取最短</span></span><br><span class="line">        minDitsance=<span class="built_in">min</span>(s,minDitsance)</span><br><span class="line">        <span class="keyword">return</span> minDitsance</span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">minDistancePoints</span>(<span class="params">point,minDistance</span>):<span class="comment">#求出取最短距离的两点</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> point:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> point:</span><br><span class="line">            <span class="keyword">if</span> distance(i,j)==minDistance <span class="keyword">and</span> i[<span class="number">0</span>]&gt;=j[<span class="number">0</span>]:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;最短距离的两点为&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">                <span class="built_in">print</span>(i,j)</span><br><span class="line">n=<span class="number">10</span></span><br><span class="line">point = [(random.randint(<span class="number">0</span>, <span class="number">50</span>), random.randint(<span class="number">0</span>, <span class="number">50</span>)) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, n)]</span><br><span class="line">point.sort()</span><br><span class="line"><span class="built_in">print</span>(point)</span><br><span class="line">minDistance=divide(point)</span><br><span class="line">minDistancePoints(point,minDistance)</span><br><span class="line"><span class="built_in">print</span>(minDistance)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>   该题虽然在上课讲过算法，但我在编程时感受到了许多困难，最后孩子在百度上进行了很久的学习才能将程序写出来</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、实验目的及要求&quot;&gt;&lt;a href=&quot;#一、实验目的及要求&quot; class=&quot;headerlink&quot; title=&quot;一、实验目的及要求&quot;&gt;&lt;/a&gt;一、实验目的及要求&lt;/h1&gt;&lt;h2 id=&quot;1、从数组-seq-中找出和为-s-的数值组合，有多少种可能，并打印这些组</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="算法笔记" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E9%97%AE%E9%A2%98%EF%BC%8C%E6%8B%BE%E6%8D%A1%E7%A1%AC%E5%B8%81%E9%97%AE%E9%A2%98%EF%BC%8C%20%E7%9F%A9%E9%98%B5%E8%BF%9E%E4%B9%98%E9%97%AE%E9%A2%98%EF%BC%8C%E6%9C%80%E7%9F%AD%E5%85%AC%E5%85%B1%E8%B6%85%E5%BA%8F%E5%88%97%E9%97%AE%E9%A2%98%EF%BC%8C%E6%9C%80%E4%BC%98%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2%E6%A0%91%EF%BC%8C%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%EF%BC%8C%E5%A4%A9%E5%B9%B3%E7%A7%A4%E9%87%91%E6%9D%A1%E9%97%AE%E9%A2%98%EF%BC%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%A7%A3%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%9C%80%E5%A4%A7%E5%AD%90%E6%AE%B5%E5%92%8C%E9%97%AE%E9%A2%98%EF%BC%8C%E6%8B%BE%E6%8D%A1%E7%A1%AC%E5%B8%81%E9%97%AE%E9%A2%98%EF%BC%8C%20%E7%9F%A9%E9%98%B5%E8%BF%9E%E4%B9%98%E9%97%AE%E9%A2%98%EF%BC%8C%E6%9C%80%E7%9F%AD%E5%85%AC%E5%85%B1%E8%B6%85%E5%BA%8F%E5%88%97%E9%97%AE%E9%A2%98%EF%BC%8C%E6%9C%80%E4%BC%98%E4%BA%8C%E5%88%86%E6%90%9C%E7%B4%A2%E6%A0%91%EF%BC%8C%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%EF%BC%8C%E5%A4%A9%E5%B9%B3%E7%A7%A4%E9%87%91%E6%9D%A1%E9%97%AE%E9%A2%98%EF%BC%8C%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E8%A7%A3%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84%E9%97%AE%E9%A2%98/</id>
    <published>2023-02-15T02:21:07.949Z</published>
    <updated>2023-02-15T02:21:08.570Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、最大子段和问题"><a href="#1、最大子段和问题" class="headerlink" title="1、最大子段和问题"></a>1、最大子段和问题</h2><p>问题描述：给定长度为n的整数序列，a[1…n], 求[1,n]某个子区间[i , j]，使得a[i]+…+a[j]和最大。<br>示例：输入：(-2,11,-4,13,-5,2)<br>           输出：最大子段和为20，所求子区间为[2,4]</p><h2 id="2、拾捡硬币问题"><a href="#2、拾捡硬币问题" class="headerlink" title="2、拾捡硬币问题"></a>2、拾捡硬币问题</h2><p>问题描述：假如有n 个硬币排在一行，要求拾取其中的子序列，该序列的累加面值最大，但不能拾取相邻的两个硬币。<br>示例：输入5; 1; 2; 10; 6; 2，<br>           输出：Max&#x3D;17 （5，10，2）</p><h2 id="3、-矩阵连乘问题"><a href="#3、-矩阵连乘问题" class="headerlink" title="3、 矩阵连乘问题"></a>3、 矩阵连乘问题</h2><p>问题描述：矩阵连乘问题是通过给矩阵连乘时加括号，使得总的计算量最小。<br>示例：输入：[[49, 29], [29, 32], [32, 77], [77, 13], [13, 59]]，<br>          输出：((A1(A2(A3A4)))A5)</p><h2 id="4、最短公共超序列问题"><a href="#4、最短公共超序列问题" class="headerlink" title="4、最短公共超序列问题"></a>4、最短公共超序列问题</h2><p>问题描述：给出两个字符串str1和str2，返回同时以str1和str2作为子序列的最短字符串。如果答案不止一个，则可以返回满足条件的任意一个答案。如果从字符串 T 中删除一些字符（也可能不删除，并且选出的这些字符可以位于T中的任意位置），可以得到字符串 S，那么S就是T的子序列。设1&lt;&#x3D;str1.length, str2.length&lt;&#x3D;1000，str1和str2都由小写英文字母组成。<br>示例：输入：str1 &#x3D; “abac”, str2 &#x3D; “cab”<br>           输出：”cabac”<br>          解释：str1 &#x3D; “abac” 是 “cabac” 的一个子串，因为可以删去 “cabac” 的第一个 “c”得到 “abac”。 str2 &#x3D; “cab” 是 “cabac” 的一个子串，因为可以删去 “cabac” 末尾的 “ac” 得到 “cab”。最终给出的答案是满足上述属性的最短字符串。</p><h2 id="5、对于一个n-x3D-5的关键字集合，搜索概率如下表，请构造其最优二分搜索树。"><a href="#5、对于一个n-x3D-5的关键字集合，搜索概率如下表，请构造其最优二分搜索树。" class="headerlink" title="5、对于一个n&#x3D;5的关键字集合，搜索概率如下表，请构造其最优二分搜索树。"></a>5、对于一个n&#x3D;5的关键字集合，搜索概率如下表，请构造其最优二分搜索树。</h2><h2 id="6、买卖股票的最佳时机"><a href="#6、买卖股票的最佳时机" class="headerlink" title="6、买卖股票的最佳时机"></a>6、买卖股票的最佳时机</h2><p>问题描述：给定一个数组，它的第i个元素是一支给定的股票在第i天的价格。设计一个算法来计算你所能获取的最大利润。你最多可以完成k笔交易。注意: 你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。<br>示例1：输入: [2,4,1], k &#x3D; 2<br>              输出: 2<br>解释: 在第 1 天 (股票价格&#x3D;2)的时候买入，在第2天 (股票价格&#x3D;4)的时候卖出，这笔交易所能获得利润&#x3D;4-2&#x3D;2 。<br>示例2：输入: [3,2,6,5,0,3], k &#x3D; 2<br>             输出: 7<br>解释: 在第 2 天 (股票价格&#x3D;2) 的时候买入，在第3天 (股票价格&#x3D;6)的时候卖出, 这笔交易所能获得利润&#x3D; 6-2&#x3D;4。随后，在第5天(股票价格&#x3D;0)的时候买入，在第6天(股票价格&#x3D;3)的时候卖出, 这笔交易所能获得利润&#x3D;3-0&#x3D;3</p><h2 id="7、天平秤金条问题"><a href="#7、天平秤金条问题" class="headerlink" title="7、天平秤金条问题"></a>7、天平秤金条问题</h2><p>问题描述：有30根金条，其中一根比其它的要重，请问用一个天平至少秤几次可以将这个重的金条找出来。<br>示例1：输入：[10, 10, 10, 10, 10, 11]<br>             输出：The fake coin is coin 6 in the original list             Number of weighings: 2<br>示例2：输入：[10, 10, 10, 10, 10, 10, 10, 10, 10,<br>                            10, 10, 10, 10, 10, 10, 10, 10, 10,<br>                            10, 10, 10, 10, 10, 10, 11, 10, 10]<br>              输出：The fake coin is coin 25 in the original list             Number of weighings: 3</p><h2 id="8、动态规划解最短路径问题"><a href="#8、动态规划解最短路径问题" class="headerlink" title="8、动态规划解最短路径问题"></a>8、动态规划解最短路径问题</h2><p>问题描述：从某顶点出发，沿图的边到达另一顶点所经过的路径中，求各边上权值之和最小的一条路径——最短路径。<br>示例：输入如下图（图的输入形式自行确定）：<br>输出：从A到G的最短路径长度为： 18      经过的结点为： [‘B1’, ‘C2’, ‘D1’, ‘E2’, ‘F2’]<br>二、实验设备（环境）及要求<br>PC机，Windows 10</p><p>三、实验内容及结果<br>（包括实验过程、实验数据、实验结果及分析，实验代码另外单独附页）<br>1、最大子段和问题<br>问题描述：给定长度为n的整数序列，a[1…n], 求[1,n]某个子区间[i , j]，使得a[i]+…+a[j]和最大。<br>示例：输入：(-2,11,-4,13,-5,2)<br>           输出：最大子段和为20，所求子区间为[2,4]</p><p>想法：要求最大字段和与所求区间，即从0开始相加，依次记录newsum，并用begintemp与endtemp记录区间，用maxsum保存最大的sum，并且每次新的maxsum出现时重新记录begin与end区间，当sum小于0后，证明前面sum的只会使sum变小，则从i+1重新开始相加并记录newsum，并重新记录begintemp与endtemp，每次新的maxsum出现时重新记录begin与end区间。<img src="https://img-blog.csdnimg.cn/20210520175436257.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">maxSubSum</span>(<span class="params">arr</span>):</span><br><span class="line">    maxsum=<span class="number">0</span></span><br><span class="line">    begin,end=<span class="number">0</span>,<span class="number">0</span></span><br><span class="line">    newsum=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(arr)):</span><br><span class="line">        <span class="keyword">if</span> newsum&lt;<span class="number">0</span>:<span class="comment">#当num小于0，则从arr[i]开始新的sum值计算，并重新记录newsum与beginTemp</span></span><br><span class="line">            newsum=arr[i]</span><br><span class="line">            beginTemp=i+<span class="number">1</span>  </span><br><span class="line">        <span class="keyword">else</span>:<span class="comment">#如果newsum大于0，则继续加arr[i]，并记录endTemp</span></span><br><span class="line">            newsum=newsum+arr[i]</span><br><span class="line">            endTemp=i+<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> newsum&gt;maxsum:<span class="comment">#如果newsum大于maxsum，则给maxsum赋新值,并将记录的beginTemp与endTemp赋值</span></span><br><span class="line">            maxsum=newsum</span><br><span class="line">            begin=beginTemp</span><br><span class="line">            end=endTemp</span><br><span class="line">    <span class="keyword">return</span> maxsum,begin,end<span class="comment">#返回最大字段和maxsum,区间首尾begin,end</span></span><br><span class="line">arr=[-<span class="number">2</span>,<span class="number">11</span>,-<span class="number">4</span>,<span class="number">13</span>,-<span class="number">5</span>,<span class="number">2</span>]</span><br><span class="line">maxsum,begin,end=maxSubSum(arr)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;最大子段和为&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(maxsum)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;所求子区间为&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;[&#x27;</span>+<span class="built_in">str</span>(begin)+<span class="string">&#x27;,&#x27;</span>+<span class="built_in">str</span>(end)+<span class="string">&#x27;]&#x27;</span>)</span><br><span class="line">    </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、拾捡硬币问题<br>问题描述：假如有n 个硬币排在一行，要求拾取其中的子序列，该序列的累加面值最大，但不能拾取相邻的两个硬币。<br>示例：输入5; 1; 2; 10; 6; 2，<br>           输出：Max&#x3D;17 （5，10，2）<br>           <img src="https://img-blog.csdnimg.cn/2021052018111268.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520181116553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">dp_maxNonAdjacentSum</span>(<span class="params">arr</span>):<span class="comment">#非递归动态规划解决不相邻的最大和</span></span><br><span class="line">    opt=(<span class="built_in">len</span>(arr)+<span class="number">1</span>)*[<span class="number">0</span>]<span class="comment">#初始化opt数组记录最大值</span></span><br><span class="line">    temp=(<span class="built_in">len</span>(arr)+<span class="number">1</span>)*[<span class="string">&#x27;&#x27;</span>]<span class="comment">#初始化temp数组记录opt值的序列</span></span><br><span class="line">    opt[<span class="number">1</span>]=arr[<span class="number">0</span>]<span class="comment">#opt[1]取arr[0],temp[1]记录取值</span></span><br><span class="line">    temp[<span class="number">1</span>]=<span class="built_in">str</span>(opt[<span class="number">1</span>])</span><br><span class="line">    opt[<span class="number">2</span>]=<span class="built_in">max</span>(arr[<span class="number">0</span>],arr[<span class="number">1</span>])<span class="comment">#opt[2]取max(arr[0],arr[1])，temp记录取值</span></span><br><span class="line">    temp[<span class="number">2</span>]=<span class="built_in">str</span>(opt[<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>,<span class="built_in">len</span>(arr)+<span class="number">1</span>):</span><br><span class="line">        A=opt[i-<span class="number">2</span>]+arr[i-<span class="number">1</span>]<span class="comment">#A表示取arr[i-1],则A再加上opt[i-2]</span></span><br><span class="line">        B=opt[i-<span class="number">1</span>]<span class="comment">#B表示不取arr[i-1]，则B=opt[i-1]</span></span><br><span class="line">        <span class="keyword">if</span> A&gt;B:<span class="comment">#当A大于B时，opt[i]=A，temp[i]记录取值</span></span><br><span class="line">            opt[i]=A</span><br><span class="line">            temp[i]=temp[i-<span class="number">2</span>]+<span class="string">&#x27; &#x27;</span>+<span class="built_in">str</span>(arr[i-<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">else</span>:<span class="comment">#当Ｂ大于等于Ａ时，opt[i]=B，temp[i]记录取值</span></span><br><span class="line">            opt[i]=B</span><br><span class="line">            temp[i]=temp[i-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> opt[<span class="built_in">len</span>(arr)],temp[<span class="built_in">len</span>(arr)]<span class="comment">#返回opt[i]与子序列</span></span><br><span class="line">arr=[<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">10</span>,<span class="number">6</span>,<span class="number">2</span>]</span><br><span class="line">maxNonAdjacentSum,Subsequence=dp_maxNonAdjacentSum(arr)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Max=&#x27;</span>+<span class="built_in">str</span>(maxNonAdjacentSum)+<span class="string">&#x27;(&#x27;</span>+Subsequence+<span class="string">&#x27;)&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2.两个数组opt记录最大值，temp记录选择的硬币，opt【i】为第1个硬币到第i个硬币的最大值，有两种情况，分为选第i-1硬币时A&#x3D;opt[i-2]+arr[i-1]与不选i-1硬币B&#x3D;opt[i-1]，故A与B中的最大值，同时给temp记录选取的硬币，并依次遍历。</p><p>3、 矩阵连乘问题<br>问题描述：矩阵连乘问题是通过给矩阵连乘时加括号，使得总的计算量最小。<br>示例：输入：[[49, 29], [29, 32], [32, 77], [77, 13], [13, 59]]，<br>          输出：((A1(A2(A3A4)))A5)<br>3.规划解决矩阵连乘，2个数组m s分别记录最少乘法次数与分割点的值，并用3次for循坏依次求出m,s[i][j],<br><img src="https://img-blog.csdnimg.cn/20210520181130220.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">MatrixChainOrder</span>(<span class="params">p</span>):</span><br><span class="line">    n=<span class="built_in">len</span>(p)-<span class="number">1</span></span><br><span class="line">    m=numpy.zeros((n+<span class="number">1</span>,n+<span class="number">1</span>))<span class="comment">#m[i][j]用来记录Ai到Aj的最少乘法次数</span></span><br><span class="line">    s=numpy.zeros((n+<span class="number">1</span>,n+<span class="number">1</span>))<span class="comment">#s[i][j]用来记录Ai到Aj的最优括号化方案的分割点k的值</span></span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n+<span class="number">1</span>):<span class="comment">#l表示长度</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n-l+<span class="number">2</span>):</span><br><span class="line">            j=i+l-<span class="number">1</span></span><br><span class="line">            m[i][j]=<span class="built_in">float</span>(<span class="string">&quot;inf&quot;</span>)</span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(i,j):<span class="comment">#遍历k从i到j所有以k为分割点的括号方案</span></span><br><span class="line">                temp=m[i][k]+m[k+<span class="number">1</span>][j]+p[i-<span class="number">1</span>]*p[k]*p[j]<span class="comment">#以k为分割点的方案的乘法次数计入temp</span></span><br><span class="line">                <span class="keyword">if</span> m[i][j]&gt;temp:<span class="comment">#取k从i到j方案中的最优方案</span></span><br><span class="line">                    m[i][j]=temp</span><br><span class="line">                    s[i][j]=<span class="built_in">int</span>(k)</span><br><span class="line">    <span class="keyword">return</span> m,s</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printOptimalParens</span>(<span class="params">s,i,j</span>):<span class="comment">#输出最优括号方案,ij表示范围，s[i][j]为记录的最优括号方案的分割点k的值</span></span><br><span class="line">    <span class="keyword">if</span> i==j:<span class="comment">#当i=j时就输出Ai</span></span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&#x27;A&#x27;</span>+<span class="built_in">str</span>(i),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:<span class="comment">#当i不等于j时，输出i到k与k到j的最优括号方案</span></span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&#x27;(&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        printOptimalParens(s,i,<span class="built_in">int</span>(s[i][j]))</span><br><span class="line">        printOptimalParens(s,<span class="built_in">int</span>(s[i][j])+<span class="number">1</span>,j)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;)&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">p=[<span class="number">49</span>,<span class="number">29</span>,<span class="number">32</span>,<span class="number">77</span>,<span class="number">13</span>,<span class="number">59</span>]</span><br><span class="line">m,s=MatrixChainOrder(p)</span><br><span class="line">printOptimalParens(s,<span class="number">1</span>,<span class="built_in">len</span>(p)-<span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4、最短公共超序列问题<br>问题描述：给出两个字符串str1和str2，返回同时以str1和str2作为子序列的最短字符串。如果答案不止一个，则可以返回满足条件的任意一个答案。如果从字符串 T 中删除一些字符（也可能不删除，并且选出的这些字符可以位于T中的任意位置），可以得到字符串 S，那么S就是T的子序列。设1&lt;&#x3D;str1.length, str2.length&lt;&#x3D;1000，str1和str2都由小写英文字母组成。</p><p>4.要求最短共超序列，即先用动态规划求出最长公共子序列lcs，最短公共超序列scs即为两个字符串的最长公共子序列LCS+第一个字符串除去LCS之后的序列+第二个字符串除去LCS之后的序列。<br><img src="https://img-blog.csdnimg.cn/20210520181152231.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">shortestCommonSuperSequence</span>(<span class="params">str1,str2</span>):</span><br><span class="line">    m=<span class="built_in">len</span>(str1)</span><br><span class="line">    n=<span class="built_in">len</span>(str2)</span><br><span class="line">    dp=[[<span class="string">&#x27;&#x27;</span>]*(n+<span class="number">1</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m+<span class="number">1</span>)]<span class="comment">#定义dp数组记录最短公共子序列</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,m+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">            <span class="keyword">if</span>(str1[i-<span class="number">1</span>]==str2[j-<span class="number">1</span>]):</span><br><span class="line">                <span class="comment">#当str1[i-1]==str2[j-1]，dp[i][j]为dp[i-1][j-1]+str1[i-1]</span></span><br><span class="line">                <span class="comment">#dp[i][j]记录str[1-1]与str[j-1]的最短公共子序列</span></span><br><span class="line">                dp[i][j]=dp[i-<span class="number">1</span>][j-<span class="number">1</span>]+str1[i-<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="comment">#如果str1[i-1]与str2[j-1]不相同时</span></span><br><span class="line">                <span class="comment">#则令dp[i][j]取dp[i-1][j]与dp[i][j-1]中的最长子序列</span></span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">len</span>(dp[i-<span class="number">1</span>][j]) &gt; <span class="built_in">len</span>(dp[i][j-<span class="number">1</span>]):</span><br><span class="line">                    dp[i][j]=dp[i-<span class="number">1</span>][j]</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    dp[i][j]=dp[i][j-<span class="number">1</span>]</span><br><span class="line">                    </span><br><span class="line">    lcs=dp[i][j]<span class="comment">#lcs即为最长公共子序列等于dp[i][j]</span></span><br><span class="line">    i,j=<span class="number">0</span>,<span class="number">0</span></span><br><span class="line">    scs=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> char <span class="keyword">in</span> lcs:</span><br><span class="line">        <span class="comment">#最短公共超序列scs即为两个字符串的最长公共子序列LCS+第一个字符串除去LCS之后的序列+第二个字符串除去LCS之后的序列。</span></span><br><span class="line">        <span class="keyword">while</span>(i&lt;m <span class="keyword">and</span> str1[i]!=char):<span class="comment">#i&lt;m时若str1[i]!=charstr1[i]</span></span><br><span class="line">            <span class="comment">#即str1[i]不属于最长公共子序列LCS，则scs加上str1[i]</span></span><br><span class="line">            scs+=str1[i]</span><br><span class="line">            i=i+<span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span>(j&lt;n <span class="keyword">and</span> str2[j]!=char):<span class="comment">#j&lt;n时若str2[j]!=char</span></span><br><span class="line">            <span class="comment">#即str2[j]不属于最长公共子序列LCS，则scs加上str2[j]</span></span><br><span class="line">            scs+=str2[j]</span><br><span class="line">            j=j+<span class="number">1</span></span><br><span class="line">        scs+=char<span class="comment">#scs加上循环的最长公共子序列LCS，i=i+1，j=j+1</span></span><br><span class="line">        i=i+<span class="number">1</span></span><br><span class="line">        j=j+<span class="number">1</span></span><br><span class="line">    scs+=str1[i:]+str2[j:]<span class="comment">#当加完LCS后，再加上str1[i:]与str2[j:]，即加上最长公共子序列LCS之后的部分</span></span><br><span class="line">    <span class="keyword">return</span> scs</span><br><span class="line">str1 = <span class="string">&quot;abac&quot;</span></span><br><span class="line">str2 = <span class="string">&quot;cab&quot;</span>  </span><br><span class="line"><span class="built_in">print</span>(shortestCommonSuperSequence(str1,str2))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5、对于一个n&#x3D;5的关键字集合，搜索概率如下表，请构造其最优二分搜索树。</p><p>.要找到最优二叉搜索树， e[i][j]用来记录包含k[i]到k[j]的最优二次搜索树的期望代价w[i][j]为k[i]到k[j]的所有子树的概率之和， e[i][j]&#x3D;max（e[i][r-1]+e[r+1][j]+w[i][j]），r从1到j为根节点的位置，动态规划依次求出e[i][j],并使用flag为0，表示为根节点，flag为-1，表示k[root[i][j]]为左孩子，flag为1，表示k[root[i][j]]为右孩子，当j&#x3D;i-1时，子树只包括伪关键字d[i-1]等输出最优二叉搜索树<br><img src="https://img-blog.csdnimg.cn/20210520181200401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">OPTIMALBST</span>(<span class="params">p,q,n</span>):</span><br><span class="line">    e=[[<span class="number">0</span>]*(n+<span class="number">2</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">2</span>)]<span class="comment">#e[i][j]用来记录包含k[i]到k[j]的最优二次搜索树的期望代价</span></span><br><span class="line">    w=[[<span class="number">0</span>]*(n+<span class="number">2</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">2</span>)]<span class="comment">#w[i][j]为k[i]到k[j]的所有子树的概率之和</span></span><br><span class="line">    root=[[<span class="number">0</span>]*(n+<span class="number">1</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]<span class="comment">#root[i][j]保存根节点k[r]的下标r</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">2</span>):<span class="comment">#当j=i-1时，子树只包括伪关键字d[i-1]</span></span><br><span class="line">        e[i][i-<span class="number">1</span>]=q[i-<span class="number">1</span>]</span><br><span class="line">        w[i][i-<span class="number">1</span>]=q[i-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">for</span> l <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):<span class="comment">#l表示长度，从1到n</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n-l+<span class="number">2</span>):</span><br><span class="line">            j=i+l-<span class="number">1</span></span><br><span class="line">            e[i][j]=<span class="built_in">float</span>(<span class="string">&#x27;inf&#x27;</span>)</span><br><span class="line">            w[i][j]=w[i][j-<span class="number">1</span>]+p[i]+p[j]</span><br><span class="line">            <span class="keyword">for</span> r <span class="keyword">in</span> <span class="built_in">range</span>(i,j+<span class="number">1</span>):</span><br><span class="line">                t=e[i][r-<span class="number">1</span>]+e[r+<span class="number">1</span>][j]+w[i][j]<span class="comment">#t记录以k[r]为根节点的从k[i]到k[j]的搜索代价</span></span><br><span class="line">                <span class="keyword">if</span> t&lt;e[i][j]:<span class="comment">#取最优的二叉搜索树</span></span><br><span class="line">                    e[i][j]=t</span><br><span class="line">                    root[i][j]=r</span><br><span class="line">    <span class="keyword">return</span> e,root</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printOPTIMALBST</span>(<span class="params">i,j,flag</span>):<span class="comment">#输出最优二叉树的结构</span></span><br><span class="line">    <span class="keyword">if</span>(i&lt;=j):<span class="comment">#当j&gt;=i时</span></span><br><span class="line">        <span class="keyword">if</span> flag==<span class="number">0</span>:<span class="comment">#flag为0，表示为根节点</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;k&#x27;</span>+<span class="built_in">str</span>(root[i][j])+<span class="string">&#x27;为根&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> flag==-<span class="number">1</span>:<span class="comment">#flag为-1，表示k[root[i][j]]为左孩子</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;k&#x27;</span>+<span class="built_in">str</span>(root[i][j])+<span class="string">&#x27;为k&#x27;</span>+<span class="built_in">str</span>(j+<span class="number">1</span>)+<span class="string">&#x27;的左孩子&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:<span class="comment">#flag为1，表示k[root[i][j]]为右孩子</span></span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;k&#x27;</span>+<span class="built_in">str</span>(root[i][j])+<span class="string">&#x27;为k&#x27;</span>+<span class="built_in">str</span>(i-<span class="number">1</span>)+<span class="string">&#x27;的右孩子&#x27;</span>)</span><br><span class="line">        printOPTIMALBST(i,root[i][j]-<span class="number">1</span>,-<span class="number">1</span>)</span><br><span class="line">        printOPTIMALBST(root[i][j]+<span class="number">1</span>,j,<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> j==i-<span class="number">1</span>:<span class="comment">#当j=i-1时，子树只包括伪关键字d[i-1]</span></span><br><span class="line">        <span class="keyword">if</span> flag==-<span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;d&#x27;</span>+<span class="built_in">str</span>(j)+<span class="string">&#x27;为k&#x27;</span>+<span class="built_in">str</span>(j+<span class="number">1</span>)+<span class="string">&#x27;的左孩子&#x27;</span>)</span><br><span class="line">        <span class="keyword">elif</span> flag==<span class="number">1</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;d&#x27;</span>+<span class="built_in">str</span>(j)+<span class="string">&#x27;为k&#x27;</span>+<span class="built_in">str</span>(i-<span class="number">1</span>)+<span class="string">&#x27;的右孩子&#x27;</span>)</span><br><span class="line">p=[<span class="number">0</span>,<span class="number">0.15</span>,<span class="number">0.10</span>,<span class="number">0.05</span>,<span class="number">0.10</span>,<span class="number">0.20</span>]</span><br><span class="line">q=[<span class="number">0.05</span>,<span class="number">0.10</span>,<span class="number">0.05</span>,<span class="number">0.05</span>,<span class="number">0.05</span>,<span class="number">0.10</span>]</span><br><span class="line">n=<span class="number">5</span></span><br><span class="line">e,root=OPTIMALBST(p,q,n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;最优二叉搜索树为&#x27;</span>)</span><br><span class="line">printOPTIMALBST(<span class="number">1</span>,n,<span class="number">0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>6、买卖股票的最佳时机<br>问题描述：给定一个数组，它的第i个元素是一支给定的股票在第i天的价格。设计一个算法来计算你所能获取的最大利润。你最多可以完成k笔交易。注意: 你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。<br>示例1：输入: [2,4,1], k &#x3D; 2<br>              输出: 2<br>解释: 在第 1 天 (股票价格&#x3D;2)的时候买入，在第2天 (股票价格&#x3D;4)的时候卖出，这笔交易所能获得利润&#x3D;4-2&#x3D;2 。<br>示例2：输入: [3,2,6,5,0,3], k &#x3D; 2<br>             输出: 7<br>解释: 在第 2 天 (股票价格&#x3D;2) 的时候买入，在第3天 (股票价格&#x3D;6)的时候卖出, 这笔交易所能获得利润&#x3D; 6-2&#x3D;4。随后，在第5天(股票价格&#x3D;0)的时候买入，在第6天(股票价格&#x3D;3)的时候卖出, 这笔交易所能获得利润&#x3D;3-0&#x3D;3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在这里插入代码片</span><br></pre></td></tr></table></figure><p>  要求最大利益，且用k定义买卖的次数，则只有用3维数组profit[i][j][0]表示第i天第j次交易，身上没有股票时的最大利益profit[i][j][1]表示第i天地j次交易但身上有股票时的最大利益，并且对profit[i][j][0]与profit[i][j][1]都有2种求值的方法，在第i天可以买（卖）股票或不买卖股票，且还要用j记录是第几次交易，所有第i天要求profit[i][0][0]，profit[i][0][1]，profit[i][j][0]，profit[i][j][1]（j从1到k-1），profit[i][k][0]，每种都要取2种求值方法的最大值，而最后的求解的最大值maxProfit&#x3D;profit[len(prices)-1][j][0]<br><img src="https://img-blog.csdnimg.cn/20210520181218111.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">maxProfit</span>(<span class="params">prices,k</span>):</span><br><span class="line">    profit=[[[<span class="number">0</span>]*<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(k+<span class="number">1</span>)]<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(prices))]</span><br><span class="line">    <span class="comment">#profit[i][j][0]表示第i天第j次交易，身上没有股票时的最大利益</span></span><br><span class="line">    <span class="comment">#profit[i][j][1]表示第i天地j次交易但身上有股票时的最大利益</span></span><br><span class="line">    profit[<span class="number">0</span>][<span class="number">0</span>][<span class="number">0</span>],profit[<span class="number">0</span>][<span class="number">0</span>][<span class="number">1</span>]=<span class="number">0</span>,-prices[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,k+<span class="number">1</span>):</span><br><span class="line">        profit[<span class="number">0</span>][i][<span class="number">0</span>],profit[<span class="number">0</span>][<span class="number">1</span>][<span class="number">1</span>]=-<span class="built_in">float</span>(<span class="string">&quot;inf&quot;</span>),-<span class="built_in">float</span>(<span class="string">&quot;inf&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(prices)):</span><br><span class="line">        profit[i][<span class="number">0</span>][<span class="number">0</span>]=profit[i-<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>]<span class="comment">#第i天第0次交易无股票等于第i-1天第0次交易</span></span><br><span class="line">        profit[i][<span class="number">0</span>][<span class="number">1</span>]=<span class="built_in">max</span>(profit[i-<span class="number">1</span>][<span class="number">0</span>][<span class="number">1</span>],profit[i-<span class="number">1</span>][<span class="number">0</span>][<span class="number">0</span>]-prices[i])</span><br><span class="line">        <span class="comment">#第i天第0次交易但有股票的值等于第i天没有买股票即profit[i-1][0][1]和第i天买股票即profit[i-1][0][0]-prices[i]的利益的最大值</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,k):</span><br><span class="line">            profit[i][j][<span class="number">0</span>]=<span class="built_in">max</span>(profit[i-<span class="number">1</span>][j][<span class="number">0</span>],profit[i-<span class="number">1</span>][j-<span class="number">1</span>][<span class="number">1</span>]+prices[i])</span><br><span class="line">            <span class="comment">#第i天第j次无股票的值等于第i天没有买股票和第i天买股票的利益的最大值</span></span><br><span class="line">            profit[i][j][<span class="number">1</span>]=<span class="built_in">max</span>(profit[i-<span class="number">1</span>][j][<span class="number">1</span>],profit[i-<span class="number">1</span>][j][<span class="number">0</span>]-prices[i])</span><br><span class="line">            <span class="comment">#第i天第j次有股票的值等于第i天没有卖股票即profit[i-1][j][1]和第i天卖股票即profit[i-1][j][0]-prices[i]的最大值</span></span><br><span class="line">        profit[i][k][<span class="number">0</span>]=<span class="built_in">max</span>(profit[i-<span class="number">1</span>][k][<span class="number">0</span>],profit[i-<span class="number">1</span>][k-<span class="number">1</span>][<span class="number">1</span>]+prices[i])</span><br><span class="line">        <span class="comment">#第i天第k次无股票的值等于第i-1天已进行k次交易即profit[i-1][k][0]与第i天刚完成第k次交易profit[i-1][k-1][1]+prices[i]的最大值</span></span><br><span class="line">    maxProfit=-<span class="built_in">float</span>(<span class="string">&quot;inf&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,k+<span class="number">1</span>):<span class="comment">#maxProfit等于最后一天的第0次交易到第k次交易中的最大值</span></span><br><span class="line">        <span class="keyword">if</span> profit[<span class="built_in">len</span>(prices)-<span class="number">1</span>][j][<span class="number">0</span>]&gt;maxProfit:</span><br><span class="line">            maxProfit=profit[<span class="built_in">len</span>(prices)-<span class="number">1</span>][j][<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">return</span> maxProfit</span><br><span class="line">prices=[<span class="number">3</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">0</span>,<span class="number">3</span>]</span><br><span class="line">k=<span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(maxProfit(prices,k))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>7、天平秤金条问题<br>问题描述：有30根金条，其中一根比其它的要重，请问用一个天平至少秤几次可以将这个重的金条找出来。<br>示例1：输入：[10, 10, 10, 10, 10, 11]<br>             输出：The fake coin is coin 6 in the original list             Number of weighings: 2<br>示例2：输入：[10, 10, 10, 10, 10, 10, 10, 10, 10,<br>                            10, 10, 10, 10, 10, 10, 10, 10, 10,<br>                            10, 10, 10, 10, 10, 10, 11, 10, 10]<br>              输出：The fake coin is coin 25 in the original list             Number of weighings: 3<br>7求比较重的金块，首先想到平分金块，但当我把程序后发现与要求输出的不一样，刚开始以为是程序错了，结果发现是算法错了，用最少的步数要找到重的金快可以用3分法，比较前2堆金快，若不一样则在重的那一堆继续3分，若一样则在第3份继续3分，而且这种方法的算法也更简单，不需要考虑金快为奇数还是偶数，在程序中，由于要找到是第几块金快比较重，使用left与right作为函数参数来记录金快的位置<br><img src="https://img-blog.csdnimg.cn/20210520181239576.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">HeavierGold</span>(<span class="params">golds,left,right</span>):<span class="comment">#golds为金块重量，left,right为比较的范围</span></span><br><span class="line">    l=(right-left +<span class="number">1</span>)//<span class="number">3</span><span class="comment">#使用3分法，将金块分为3份</span></span><br><span class="line">    <span class="keyword">global</span> number<span class="comment">#全局变量为number，记录称重的次数，初值为-1，每次称重前+1</span></span><br><span class="line">    number+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> right == left:<span class="comment">#right==left,即为较重的金块</span></span><br><span class="line">        <span class="keyword">return</span>(left+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">elif</span> left+<span class="number">1</span> == right:<span class="comment">#left+1 == right,则较重的金块在这2块之中，故返回较重的金块</span></span><br><span class="line">        <span class="keyword">if</span> golds[right] &lt; golds[left]:</span><br><span class="line">            <span class="keyword">return</span>(left+<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span>(right+<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">sum</span>(golds[left:left+l])==<span class="built_in">sum</span>(golds[left+l:left+<span class="number">2</span>*l]):<span class="comment">#如果第一堆金块重量等于第二堆金块重量，则返回对第三堆金块的寻找</span></span><br><span class="line">        <span class="keyword">return</span> HeavierGold(golds,left+<span class="number">2</span>*l,right)</span><br><span class="line">    <span class="keyword">elif</span> <span class="built_in">sum</span>(golds[left:left+l])&lt;<span class="built_in">sum</span>(golds[left+l:left+<span class="number">2</span>*l]):<span class="comment">#如果第一堆金块重量小于第二堆金块重量，则返回对第二堆金块的寻找</span></span><br><span class="line">        <span class="keyword">return</span> HeavierGold(golds,left+l,left+<span class="number">2</span>*l-<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:<span class="comment">#如果第一堆金块重量大于第二堆金块重量，则返回对第一堆金块的寻找</span></span><br><span class="line">        <span class="keyword">return</span> HeavierGold(golds,left,left+l-<span class="number">1</span>)</span><br><span class="line">golds=[<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">10</span>,<span class="number">10</span>]</span><br><span class="line">number=-<span class="number">1</span></span><br><span class="line">i=HeavierGold(golds,<span class="number">0</span>,<span class="built_in">len</span>(golds)-<span class="number">1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;The hevaier gold is coin &#x27;</span>+<span class="built_in">str</span>(i)+<span class="string">&#x27;in the original list&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;Number of weighings:&#x27;</span>+<span class="built_in">str</span>(number))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>.</p><p>8、动态规划解最短路径问题<br>问题描述：从某顶点出发，沿图的边到达另一顶点所经过的路径中，求各边上权值之和最小的一条路径——最短路径。<br>示例：输入如下图（图的输入形式自行确定）：<br>输出：从A到G的最短路径长度为： 18      经过的结点为： [‘B1’, ‘C2’, ‘D1’, ‘E2’, ‘F2’]<br>    8.求多段图的最短路径长度，先用邻接矩阵表示出多段图，在用动态规划从终点到起点依次求出每一段的最短路径长度，并且用字典将邻接矩阵的序号与结点A1 B1等相连，最后输出进过的结点<br><img src="https://img-blog.csdnimg.cn/20210520181248157.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520181305985.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">shortestPath</span>(<span class="params">cost,path,d</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n-<span class="number">1</span>,<span class="number">0</span>,-<span class="number">1</span>):<span class="comment">#i从第n-1到第1个结点表示起点</span></span><br><span class="line">        temp=<span class="number">0</span></span><br><span class="line">        <span class="built_in">min</span>=c[i][temp]+cost[temp]</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,n+<span class="number">1</span>):<span class="comment">#j从0到n表示目的点</span></span><br><span class="line">            <span class="keyword">if</span> c[i][j]!=<span class="built_in">float</span>(<span class="string">&quot;inf&quot;</span>):<span class="comment">#当c[i][j]不为无穷大，即从i到j可以到达</span></span><br><span class="line">                <span class="keyword">if</span> (c[i][j]+cost[j])&lt;<span class="built_in">min</span>:<span class="comment">#取最小的c[i][j]</span></span><br><span class="line">                    <span class="built_in">min</span>=c[i][j]+cost[j]</span><br><span class="line">                    temp=j</span><br><span class="line">        cost[i]=c[i][temp]+cost[temp]<span class="comment">#cost[i]记录i到n的最短路径</span></span><br><span class="line">        d[i]=temp</span><br><span class="line">    path[<span class="number">1</span>]=<span class="number">1</span></span><br><span class="line">    path[k]=n</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,k):</span><br><span class="line">        path[i]=d[path[i-<span class="number">1</span>]]</span><br><span class="line"><span class="keyword">global</span> n,k<span class="comment">#n为结点个数，k为多段图的段数</span></span><br><span class="line">n,k=<span class="number">16</span>,<span class="number">7</span></span><br><span class="line">c=[[<span class="built_in">float</span>(<span class="string">&quot;inf&quot;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]<span class="comment">#用邻接矩阵表示多段图</span></span><br><span class="line">c[<span class="number">1</span>][<span class="number">2</span>]=<span class="number">5</span></span><br><span class="line">c[<span class="number">1</span>][<span class="number">3</span>]=<span class="number">3</span></span><br><span class="line">c[<span class="number">2</span>][<span class="number">4</span>]=<span class="number">1</span></span><br><span class="line">c[<span class="number">2</span>][<span class="number">5</span>]=<span class="number">3</span></span><br><span class="line">c[<span class="number">2</span>][<span class="number">6</span>]=<span class="number">6</span></span><br><span class="line">c[<span class="number">3</span>][<span class="number">5</span>]=<span class="number">8</span></span><br><span class="line">c[<span class="number">3</span>][<span class="number">6</span>]=<span class="number">7</span></span><br><span class="line">c[<span class="number">3</span>][<span class="number">7</span>]=<span class="number">6</span></span><br><span class="line">c[<span class="number">4</span>][<span class="number">8</span>]=<span class="number">6</span></span><br><span class="line">c[<span class="number">4</span>][<span class="number">9</span>]=<span class="number">8</span></span><br><span class="line">c[<span class="number">5</span>][<span class="number">8</span>]=<span class="number">3</span></span><br><span class="line">c[<span class="number">5</span>][<span class="number">9</span>]=<span class="number">5</span></span><br><span class="line">c[<span class="number">6</span>][<span class="number">9</span>]=<span class="number">3</span></span><br><span class="line">c[<span class="number">6</span>][<span class="number">10</span>]=<span class="number">3</span></span><br><span class="line">c[<span class="number">7</span>][<span class="number">9</span>]=<span class="number">8</span></span><br><span class="line">c[<span class="number">7</span>][<span class="number">10</span>]=<span class="number">4</span></span><br><span class="line">c[<span class="number">8</span>][<span class="number">11</span>]=<span class="number">2</span></span><br><span class="line">c[<span class="number">8</span>][<span class="number">12</span>]=<span class="number">2</span></span><br><span class="line">c[<span class="number">9</span>][<span class="number">12</span>]=<span class="number">1</span></span><br><span class="line">c[<span class="number">9</span>][<span class="number">13</span>]=<span class="number">2</span></span><br><span class="line">c[<span class="number">10</span>][<span class="number">12</span>]=<span class="number">3</span></span><br><span class="line">c[<span class="number">10</span>][<span class="number">13</span>]=<span class="number">3</span></span><br><span class="line">c[<span class="number">11</span>][<span class="number">14</span>]=<span class="number">3</span></span><br><span class="line">c[<span class="number">11</span>][<span class="number">15</span>]=<span class="number">5</span></span><br><span class="line">c[<span class="number">12</span>][<span class="number">14</span>]=<span class="number">5</span></span><br><span class="line">c[<span class="number">12</span>][<span class="number">15</span>]=<span class="number">2</span></span><br><span class="line">c[<span class="number">13</span>][<span class="number">14</span>]=<span class="number">6</span></span><br><span class="line">c[<span class="number">13</span>][<span class="number">15</span>]=<span class="number">6</span></span><br><span class="line">c[<span class="number">14</span>][<span class="number">16</span>]=<span class="number">4</span></span><br><span class="line">c[<span class="number">15</span>][<span class="number">16</span>]=<span class="number">3</span></span><br><span class="line">cost=[<span class="number">0</span>]*(n+<span class="number">1</span>)<span class="comment">#cost用来记录i到n的最短路径长度</span></span><br><span class="line">d=[<span class="number">0</span>]*n</span><br><span class="line">path=[<span class="number">0</span>]*(k+<span class="number">1</span>)<span class="comment">#path记录最短路径的进过的结点</span></span><br><span class="line">shortestPath(cost,path,d)</span><br><span class="line"><span class="built_in">map</span>=&#123;<span class="string">&#x27;1&#x27;</span>:<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;2&#x27;</span>:<span class="string">&#x27;B1&#x27;</span>,<span class="string">&#x27;3&#x27;</span>:<span class="string">&#x27;B2&#x27;</span>,<span class="string">&#x27;4&#x27;</span>:<span class="string">&#x27;C1&#x27;</span>,<span class="string">&#x27;5&#x27;</span>:<span class="string">&#x27;C2&#x27;</span>,<span class="string">&#x27;6&#x27;</span>:<span class="string">&#x27;C3&#x27;</span>,<span class="string">&#x27;7&#x27;</span>:<span class="string">&#x27;C4&#x27;</span>,<span class="string">&#x27;8&#x27;</span>:<span class="string">&#x27;D1&#x27;</span>,<span class="string">&#x27;9&#x27;</span>:<span class="string">&#x27;D2&#x27;</span>,<span class="string">&#x27;10&#x27;</span>:<span class="string">&#x27;D3&#x27;</span>,<span class="string">&#x27;11&#x27;</span>:<span class="string">&#x27;E1&#x27;</span>,<span class="string">&#x27;12&#x27;</span>:<span class="string">&#x27;E2&#x27;</span>,<span class="string">&#x27;13&#x27;</span>:<span class="string">&#x27;E3&#x27;</span>,<span class="string">&#x27;14&#x27;</span>:<span class="string">&#x27;F1&#x27;</span>,<span class="string">&#x27;15&#x27;</span>:<span class="string">&#x27;F2&#x27;</span>,<span class="string">&#x27;16&#x27;</span>:<span class="string">&#x27;G&#x27;</span>&#125;</span><br><span class="line"><span class="comment">#map是字典用来记录结点序号与结点名称的对应</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;从A到G的最短路径长度为： &quot;</span>+<span class="built_in">str</span>(cost[<span class="number">1</span>]))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;经过的结点为： [&#x27;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,k-<span class="number">1</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&#x27;&quot;</span>+<span class="built_in">map</span>[<span class="built_in">str</span>(path[i])]+<span class="string">&quot;&#x27;,&quot;</span>,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">map</span>[<span class="built_in">str</span>(path[k-<span class="number">1</span>])]+<span class="string">&quot;&#x27;] &quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1、最大子段和问题&quot;&gt;&lt;a href=&quot;#1、最大子段和问题&quot; class=&quot;headerlink&quot; title=&quot;1、最大子段和问题&quot;&gt;&lt;/a&gt;1、最大子段和问题&lt;/h2&gt;&lt;p&gt;问题描述：给定长度为n的整数序列，a[1…n], 求[1,n]某个子区间[i , j</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="算法笔记" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%83%85%E4%BE%A3%E7%89%B5%E6%89%8B%EF%BC%8C%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C%EF%BC%8C%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%EF%BC%8C%E5%8D%95%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84Dijkstra%E7%AE%97%E6%B3%95%EF%BC%8C%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E6%9E%84%E9%80%A0%E9%9C%8D%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E6%83%85%E4%BE%A3%E7%89%B5%E6%89%8B%EF%BC%8C%E5%88%86%E5%8F%91%E7%B3%96%E6%9E%9C%EF%BC%8C%E8%B7%B3%E8%B7%83%E6%B8%B8%E6%88%8F%EF%BC%8C%E5%8D%95%E6%BA%90%E6%9C%80%E7%9F%AD%E8%B7%AF%E5%BE%84Dijkstra%E7%AE%97%E6%B3%95%EF%BC%8C%E8%B4%AA%E5%BF%83%E7%AE%97%E6%B3%95%E6%9E%84%E9%80%A0%E9%9C%8D%E5%A4%AB%E6%9B%BC%E7%BC%96%E7%A0%81/</id>
    <published>2023-02-15T02:21:01.052Z</published>
    <updated>2023-02-15T02:21:01.681Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1、情侣牵手"><a href="#1、情侣牵手" class="headerlink" title="1、情侣牵手"></a>1、情侣牵手</h2><p>问题描述：N 对情侣坐在连续排列的 2N 个座位上，想要牵到对方的手。 计算最少交换座位的次数，以便每对情侣可以并肩坐在一起。<br>一次交换可选择任意两人，让他们站起来交换座位。人和座位用 0 到 2N-1 的整数表示，情侣们按顺序编号，第一对是 (0, 1)，第二对是 (2, 3)，以此类推，最后一对是 (2N-2, 2N-1)。这些情侣的初始座位  row[i] 是由最初始坐在第 i 个座位上的人决定的。<br>示例1：输入: row &#x3D; [0, 2, 1, 3]    输出: 1     解释: 我们只需要交换row[1]和row[2]的位置即可。<br>示例2：输入: row &#x3D; [3, 2, 0, 1]    输出: 0    解释: 无需交换座位，所有的情侣都已经可以手牵手了。</p><h2 id="2、分发糖果"><a href="#2、分发糖果" class="headerlink" title="2、分发糖果"></a>2、分发糖果</h2><p>问题描述：老师想给孩子们分发糖果，有 N 个孩子站成了一条直线，老师会根据每个孩子的表现，预先给他们评分。你需要按照以下要求，帮助老师给这些孩子分发糖果：（1）每个孩子至少分配到 1 个糖果；（2）相邻的孩子中，评分高的孩子必须获得更多的糖果。那么这样下来，老师至少需要准备多少颗糖果呢？<br>示例 1: 输入: [1,0,2]    输出: 5    解释: 你可以分别给这三个孩子分发 2、1、2 颗糖果。<br>示例 2: 输入: [1,2,2]    输出: 4    解释: 你可以分别给这三个孩子分发 1、2、1 颗糖果。 第三个孩子只得到 1 颗糖果，这已满足上述两个条件。</p><h2 id="3、跳跃游戏"><a href="#3、跳跃游戏" class="headerlink" title="3、跳跃游戏"></a>3、跳跃游戏</h2><p>问题描述：给定一个非负整数数组，你最初位于数组的第一个位置。数组中的每个元素代表你在该位置可以跳跃的最大长度。你的目标是使用最少的跳跃次数到达数组的最后一个位置。<br>示例: 输入: [2,3,1,1,4]   输出: 2     解释: 跳到最后一个位置的最小跳跃数是 2。从下标为 0 跳到下标为 1 的位置，跳 1 步，然后跳 3 步到达数组的最后一个位置。<br>说明: 假设你总是可以到达数组的最后一个位置。</p><h2 id="4、编程实现单源最短路径Dijkstra算法，并回答如果将图中所有边的权重-1，所得到的最短路径是否仍为原最短路径，为什么？"><a href="#4、编程实现单源最短路径Dijkstra算法，并回答如果将图中所有边的权重-1，所得到的最短路径是否仍为原最短路径，为什么？" class="headerlink" title="4、编程实现单源最短路径Dijkstra算法，并回答如果将图中所有边的权重+1，所得到的最短路径是否仍为原最短路径，为什么？"></a>4、编程实现单源最短路径Dijkstra算法，并回答如果将图中所有边的权重+1，所得到的最短路径是否仍为原最短路径，为什么？</h2><h2 id="5、证明题：请证明利用贪心算法构造的霍夫曼编码的正确性。"><a href="#5、证明题：请证明利用贪心算法构造的霍夫曼编码的正确性。" class="headerlink" title="5、证明题：请证明利用贪心算法构造的霍夫曼编码的正确性。"></a>5、证明题：请证明利用贪心算法构造的霍夫曼编码的正确性。</h2><p>三、实验内容及结果<br><em>1、情侣牵手<br>问题描述：N 对情侣坐在连续排列的 2N 个座位上，想要牵到对方的手。 计算最少交换座位的次数，以便每对情侣可以并肩坐在一起。<br>一次交换可选择任意两人，让他们站起来交换座位。人和座位用 0 到 2N-1 的整数表示，情侣们按顺序编号，第一对是 (0, 1)，第二对是 (2, 3)，以此类推，最后一对是 (2N-2, 2N-1)。这些情侣的初始座位  row[i] 是由最初始坐在第 i 个座位上的人决定的。<br>示例1：输入: row &#x3D; [0, 2, 1, 3]    输出: 1     解释: 我们只需要交换row[1]和row[2]的位置即可。<br>示例2：输入: row &#x3D; [3, 2, 0, 1]    输出: 0    解释: 无需交换座位，所有的情侣都已经可以手牵手了。</em></p><p>利用贪心算法，想到当找到一对座位上的人不是一对情侣时，则遍历后面的每个座位直到找到情侣与第二个座位上的人相互调换，而在代码中寻找情侣时使用x^1，x异或1即x为奇数即为x-1，x为偶数即为x+1，能得到相应的情侣，由贪心算法这样就能得到最少交换次数。<br><img src="https://img-blog.csdnimg.cn/20210520190710408.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/2021052019071567.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">minSwapsCouples</span>(<span class="params">row</span>):</span><br><span class="line">    num=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(row),<span class="number">2</span>):<span class="comment">#每次遍历2个位置</span></span><br><span class="line">        x=row[i]<span class="comment">#x为第一个位置的值</span></span><br><span class="line">        <span class="keyword">if</span> row[i+<span class="number">1</span>]==x^<span class="number">1</span>:<span class="comment">#x^1异或操作当x为奇数即为x-1，x为偶数即为x+1，可以完美表示x的情侣的序号</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        num+=<span class="number">1</span><span class="comment">#当没有coninue重新循环说明row[i+1]不是情侣，则num+1</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">2</span>,<span class="built_in">len</span>(row)):</span><br><span class="line">            <span class="comment">#对i+2后的数遍历，找到情侣交换而且由贪心算法可得出该方式为最少的交换方式</span></span><br><span class="line">            <span class="keyword">if</span> row[j] == x^<span class="number">1</span>:</span><br><span class="line">                row[i+<span class="number">1</span>],row[j] = row[j],row[i+<span class="number">1</span>]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line">row1 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(minSwapsCouples(row1))</span><br><span class="line">row2 = [<span class="number">3</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">1</span>]</span><br><span class="line"><span class="built_in">print</span>(minSwapsCouples(row2))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、分发糖果<br>问题描述：老师想给孩子们分发糖果，有 N 个孩子站成了一条直线，老师会根据每个孩子的表现，预先给他们评分。你需要按照以下要求，帮助老师给这些孩子分发糖果：（1）每个孩子至少分配到 1 个糖果；（2）相邻的孩子中，评分高的孩子必须获得更多的糖果。那么这样下来，老师至少需要准备多少颗糖果呢？<br>示例 1: 输入: [1,0,2]    输出: 5    解释: 你可以分别给这三个孩子分发 2、1、2 颗糖果。<br>示例 2: 输入: [1,2,2]    输出: 4    解释: 你可以分别给这三个孩子分发 1、2、1 颗糖果。 第三个孩子只得到 1 颗糖果，这已满足上述两个条件。</p><p>分发糖果，先从左边遍历，比左边分数高，则糖果为左边的糖果加1，比左边的小即仍为1，再从右边遍历，如果左边分数更高但是右边糖果数多时，说明没有符合分数高的糖果多的原则，则等于糖果数等于右边的加1.<br><img src="https://img-blog.csdnimg.cn/20210520190726368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520190906472.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">distributeCandy</span>(<span class="params">scores</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(scores)&lt;=<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">len</span>(scores)</span><br><span class="line">    candy=[<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(scores))]<span class="comment">#candy[i]记录第i个人该分的糖果</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(scores)):</span><br><span class="line">        <span class="comment">#从左向右遍历，当右边的分数高时，candy[i]=candy[i-1]+1</span></span><br><span class="line">        <span class="keyword">if</span> scores[i]&gt;scores[i-<span class="number">1</span>]:</span><br><span class="line">            candy[i]=candy[i-<span class="number">1</span>]+<span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(scores)-<span class="number">2</span>,-<span class="number">1</span>,-<span class="number">1</span>):</span><br><span class="line">        <span class="comment">#从右到左遍历，当左边分数高且右边的糖果多时，重新记录candy[i]=candy[i+1]+1</span></span><br><span class="line">        <span class="keyword">if</span> scores[i]&gt;scores[i+<span class="number">1</span>] <span class="keyword">and</span> candy[i]&lt;=candy[i+<span class="number">1</span>]:</span><br><span class="line">            candy[i]=candy[i+<span class="number">1</span>]+<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span>(candy)</span><br><span class="line">scores1=[<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(distributeCandy(scores1))</span><br><span class="line">scores1=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>]</span><br><span class="line"><span class="built_in">print</span>(distributeCandy(scores1))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、跳跃游戏<br>问题描述：给定一个非负整数数组，你最初位于数组的第一个位置。数组中的每个元素代表你在该位置可以跳跃的最大长度。你的目标是使用最少的跳跃次数到达数组的最后一个位置。<br>示例: 输入: [2,3,1,1,4]   输出: 2     解释: 跳到最后一个位置的最小跳跃数是 2。从下标为 0 跳到下标为 1 的位置，跳 1 步，然后跳 3 步到达数组的最后一个位置。<br>说明: 假设你总是可以到达数组的最后一个位置。</p><p>3.从1遍历，每次加上该点跳跃的求出所能到达的最远距离reach，n表示跳的次数+1，当最远距离reach大于最远点时，说明可以到达，返回n<br><img src="https://img-blog.csdnimg.cn/20210520190954966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520190958868.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">jump</span>(<span class="params">nums</span>):</span><br><span class="line">    leng,reach,n=<span class="built_in">len</span>(nums),<span class="number">0</span>,<span class="number">0</span><span class="comment">#leng为数组的长度，reach为到达的最远距离，n为跳跃的最小次数</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(leng):</span><br><span class="line">        <span class="comment">#对数组依次遍历，当i&lt;=reach时，重新记录所能跳跃的最远点reach，n+1</span></span><br><span class="line">        <span class="keyword">if</span> i&lt;=reach:</span><br><span class="line">            reach=<span class="built_in">max</span>(reach,i+nums[i])</span><br><span class="line">            n+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> reach&gt;=leng-<span class="number">1</span>:<span class="comment">#当reach大于等于最远点时，返回n</span></span><br><span class="line">                <span class="keyword">return</span> n</span><br><span class="line">nums=[<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">4</span>]</span><br><span class="line"><span class="built_in">print</span>(jump(nums))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4、编程实现单源最短路径Dijkstra算法，并回答如果将图中所有边的权重+1，所得到的最短路径是否仍为原最短路径，为什么？</p><p>Dijkstra算法，单源最短路径每次寻找路径中最短的点u，用松弛操作一一遍历出发点s到该点u加上到其他点v的距离与出发点s到点v的距离，由于对每个点都遍历了Q中的所有点，就相当于对s到v的每条路径都进行了遍历找到最近的距离，这样就可以找到Q里面剩下的v到s的最短距离。<br>将图中所有边的权重+1，所得到的最短路径不是原最短路径，因为到最短路径的边数可能很多，只不过每条边都很短，比其他路径长的路径距离更短，但加上1即加上路径的边数，这样原来的最短路径就可能比别的路径长度更长。<br><img src="https://img-blog.csdnimg.cn/20210520190945954.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">Dijkstra</span>(<span class="params">G,s</span>):</span><br><span class="line">    numVertex = <span class="built_in">len</span>(G)<span class="comment">#邻接矩阵的长度即点的个数</span></span><br><span class="line">    Q=[]<span class="comment">#记录尚未找到最短路径各个结点</span></span><br><span class="line">    D = &#123;&#125; <span class="comment">#记录s到各点的最短路径</span></span><br><span class="line">    precursorNode = &#123;&#125; <span class="comment">#表示每个结点最短路径的前驱结点</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(numVertex):<span class="comment">#初始化Q，D，precursorNode </span></span><br><span class="line">        Q.append(i)</span><br><span class="line">        D[i] = <span class="number">2</span>**<span class="number">32</span> - <span class="number">1</span></span><br><span class="line">        precursorNode[i] = <span class="string">&#x27;null&#x27;</span></span><br><span class="line">    D[s] = <span class="number">0</span> <span class="comment">#s到s的距离为0</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(Q):<span class="comment">#当Q未完全遍历完时</span></span><br><span class="line">        u=extract_min_queue(Q,D)<span class="comment">#首先找到剩下的点中到s路径最短的点</span></span><br><span class="line">        <span class="keyword">for</span> v <span class="keyword">in</span> <span class="built_in">range</span>(numVertex):<span class="comment">#v遍历所有的点，经过多次松弛可以对每条路径都进行遍历从而找到各个点的最短路径</span></span><br><span class="line">            <span class="keyword">if</span> G[u][v] == <span class="number">0</span>: <span class="comment"># G[u][v] == 0说明点u与点v不可到达</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            realx(D,G,precursorNode,u,v)<span class="comment">#当u与v有路径到达时，对（u，v）进行松弛操作</span></span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&#x27;distance:&#x27;</span>, D)<span class="comment">#输出各个点的最短路径</span></span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&#x27;precursorNode:&#x27;</span>, precursorNode)<span class="comment">#输出各个点最短路径的前驱结点</span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">extract_min_queue</span>(<span class="params">Q,D</span>):<span class="comment">#提取Q中最短路径的点</span></span><br><span class="line">    min_dist = <span class="number">2</span>**<span class="number">32</span> - <span class="number">1</span><span class="comment">#最短路径长度</span></span><br><span class="line">    min_index = <span class="literal">None</span><span class="comment">#最短路径的点</span></span><br><span class="line">    <span class="keyword">for</span> vertex <span class="keyword">in</span> Q:<span class="comment">#在尚未找到最短路径的结点中找到路径最短的点，并记录min_dist，min_index</span></span><br><span class="line">        <span class="keyword">if</span> D[vertex] &lt; min_dist:</span><br><span class="line">            min_dist = D[vertex]</span><br><span class="line">            min_index = vertex</span><br><span class="line">    Q.remove(min_index)<span class="comment">#当找到最短路径的点后从Q中删除这个点</span></span><br><span class="line">    <span class="keyword">return</span> min_index<span class="comment">#返回最短路径的点</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">realx</span>(<span class="params">D,G,precursorNode,u,v</span>):<span class="comment">#松弛(u,v)可以更新s到v的最短路径与前驱结点</span></span><br><span class="line">    <span class="keyword">if</span> D[v] &gt; D[u] + G[u][v]:<span class="comment">#如果（s，v）的距离大于（s，u）的距离加上（u，v）的距离则更新D[v]与前驱结点</span></span><br><span class="line">        D[v] = D[u] + G[u][v]</span><br><span class="line">        precursorNode[v] = u</span><br><span class="line">G = [[<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">5</span>],</span><br><span class="line">    [<span class="number">0</span>,<span class="number">0</span>,<span class="number">6</span>,<span class="number">0</span>,<span class="number">2</span>],</span><br><span class="line">    [<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">0</span>],</span><br><span class="line">    [<span class="number">3</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">0</span>]]</span><br><span class="line">Dijkstra(G, <span class="number">0</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="5"><li>证明题：请证明利用贪心算法构造的霍夫曼编码的正确性。<br>首先知道霍夫曼编码有贪心选择和最优子结构心智，那么用反证法，假设利用贪心算法得到的霍夫曼编码不是最优编码，设利用贪心算法得到的编码树为T1，就存在最优编码树T2满足B（T1）&gt;B(T2)，那么将T2与T1其中一个不同的子节点x与x在T1上的位置的结点y对换，有贪心算法知x&lt;y，而对换后的树设为T3，易知B（T2）&gt;B(T3)&gt;&#x3D;B(T1),所以不存在其他的最优霍夫曼树，即由贪心算法构造的霍夫曼树为最佳树，也证明了利用贪心算法构造的霍夫曼编码的正确性</li></ol><p>四、实验总结<br>   （根据实验写出一些心得或分析等）<br>  本次实验让我更加理解了贪心算法以及单源最短路径的算法与霍夫曼树的构造，让我在面对一些问题时有了新的思考方法。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1、情侣牵手&quot;&gt;&lt;a href=&quot;#1、情侣牵手&quot; class=&quot;headerlink&quot; title=&quot;1、情侣牵手&quot;&gt;&lt;/a&gt;1、情侣牵手&lt;/h2&gt;&lt;p&gt;问题描述：N 对情侣坐在连续排列的 2N 个座位上，想要牵到对方的手。 计算最少交换座位的次数，以便每对情侣</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="算法笔记" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%9A%84%E7%9D%80%E8%89%B2%E9%97%AE%E9%A2%98%EF%BC%8C0-1%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%EF%BC%8C%E5%8D%95%E8%AF%8D%E5%BF%85%E9%A1%BB%E6%8C%89%E7%85%A7%E5%AD%97%E6%AF%8D%E9%A1%BA%E5%BA%8F%EF%BC%8C%E6%89%80%E6%9C%89%E5%AD%A6%E7%94%9F%E4%B8%AD%E7%9A%84%E5%B7%B2%E7%9F%A5%E7%9A%84%E6%9C%8B%E5%8F%8B%E5%9C%88%E6%80%BB%E6%95%B0%EF%BC%8C%E8%AE%A1%E7%AE%97%E7%9F%A9%E9%98%B5%E4%B8%AD%E6%89%80%E6%9C%89%E6%B1%A0%E5%A1%98%E7%9A%84%E5%A4%A7%E5%B0%8F/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E5%9B%BE%E7%9A%84%E7%9D%80%E8%89%B2%E9%97%AE%E9%A2%98%EF%BC%8C0-1%E8%83%8C%E5%8C%85%E9%97%AE%E9%A2%98%EF%BC%8C%E5%8D%95%E8%AF%8D%E5%BF%85%E9%A1%BB%E6%8C%89%E7%85%A7%E5%AD%97%E6%AF%8D%E9%A1%BA%E5%BA%8F%EF%BC%8C%E6%89%80%E6%9C%89%E5%AD%A6%E7%94%9F%E4%B8%AD%E7%9A%84%E5%B7%B2%E7%9F%A5%E7%9A%84%E6%9C%8B%E5%8F%8B%E5%9C%88%E6%80%BB%E6%95%B0%EF%BC%8C%E8%AE%A1%E7%AE%97%E7%9F%A9%E9%98%B5%E4%B8%AD%E6%89%80%E6%9C%89%E6%B1%A0%E5%A1%98%E7%9A%84%E5%A4%A7%E5%B0%8F/</id>
    <published>2023-02-15T02:20:54.483Z</published>
    <updated>2023-02-15T02:20:55.129Z</updated>
    
    <content type="html"><![CDATA[<p>一、实验目的及要求</p><h2 id="1、世界地图上相邻国家需要用不同的颜色标注以示区别，但最多只需要选取四种颜色即可。请编程实现图的着色问题。"><a href="#1、世界地图上相邻国家需要用不同的颜色标注以示区别，但最多只需要选取四种颜色即可。请编程实现图的着色问题。" class="headerlink" title="1、世界地图上相邻国家需要用不同的颜色标注以示区别，但最多只需要选取四种颜色即可。请编程实现图的着色问题。"></a>1、世界地图上相邻国家需要用不同的颜色标注以示区别，但最多只需要选取四种颜色即可。请编程实现图的着色问题。</h2><h2 id="2、编程实现0-1背包问题，至少两种算法。"><a href="#2、编程实现0-1背包问题，至少两种算法。" class="headerlink" title="2、编程实现0-1背包问题，至少两种算法。"></a>2、编程实现0-1背包问题，至少两种算法。</h2><h2 id="3、给定一个二维网格和一个单词，找出该单词是否存在于网格中。说明：单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。"><a href="#3、给定一个二维网格和一个单词，找出该单词是否存在于网格中。说明：单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。" class="headerlink" title="3、给定一个二维网格和一个单词，找出该单词是否存在于网格中。说明：单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。"></a>3、给定一个二维网格和一个单词，找出该单词是否存在于网格中。说明：单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。</h2><p>示例：board &#x3D;[  [‘A’,’B’,’C’,’E’], [‘S’,’F’,’C’,’S’], [‘A’,’D’,’E’,’E’]] ，给定 word &#x3D; “ABCCED”, 返回 true， 给定 word &#x3D; “SEE”, 返回 true， 给定 word &#x3D; “ABCB”, 返回 false。</p><h2 id="4、班上有-N-名学生。其中有些人是朋友，有些则不是。他们的友谊具有是传递性。如果已知-A-是-B-的朋友，B-是-C-的朋友，那么我们可以认为-A-也是-C-的朋友。所谓的朋友圈，是指所有朋友的集合。给定一个-N-N-的矩阵-M，表示班级中学生之间的朋友关系。如果M-i-j-x3D-1，表示已知第-i-个和-j-个学生互为朋友关系，否则为不知道。你必须输出所有学生中的已知的朋友圈总数。"><a href="#4、班上有-N-名学生。其中有些人是朋友，有些则不是。他们的友谊具有是传递性。如果已知-A-是-B-的朋友，B-是-C-的朋友，那么我们可以认为-A-也是-C-的朋友。所谓的朋友圈，是指所有朋友的集合。给定一个-N-N-的矩阵-M，表示班级中学生之间的朋友关系。如果M-i-j-x3D-1，表示已知第-i-个和-j-个学生互为朋友关系，否则为不知道。你必须输出所有学生中的已知的朋友圈总数。" class="headerlink" title="4、班上有 N 名学生。其中有些人是朋友，有些则不是。他们的友谊具有是传递性。如果已知 A 是 B 的朋友，B 是 C 的朋友，那么我们可以认为 A 也是 C 的朋友。所谓的朋友圈，是指所有朋友的集合。给定一个 N * N 的矩阵 M，表示班级中学生之间的朋友关系。如果M[i][j] &#x3D; 1，表示已知第 i 个和 j 个学生互为朋友关系，否则为不知道。你必须输出所有学生中的已知的朋友圈总数。"></a>4、班上有 N 名学生。其中有些人是朋友，有些则不是。他们的友谊具有是传递性。如果已知 A 是 B 的朋友，B 是 C 的朋友，那么我们可以认为 A 也是 C 的朋友。所谓的朋友圈，是指所有朋友的集合。给定一个 N * N 的矩阵 M，表示班级中学生之间的朋友关系。如果M[i][j] &#x3D; 1，表示已知第 i 个和 j 个学生互为朋友关系，否则为不知道。你必须输出所有学生中的已知的朋友圈总数。</h2><p>示例1：输入: [[1,1,0], [1,1,0], [0,0,1]]       输出: 2      说明：已知学生0和学生1互为朋友，他们在一个朋友圈。第2个学生自己在一个朋友圈。所以返回2。<br>示例2：输入: [[1,1,0],   [1,1,1],  [0,1,1]]       输出: 1      说明：已知学生0和学生1互为朋友，学生1和学生2互为朋友，所以学生0和学生2也是朋友，所以他们三个在一个朋友圈，返回1。</p><h2 id="5、你有一个用于表示一片土地的整数矩阵land，该矩阵中每个点的值代表对应地点的海拔高度。若值为0则表示水域。由垂直、水平或对角连接的水域为池塘。池塘的大小是指相连接的水域的个数。编写一个方法来计算矩阵中所有池塘的大小，返回值需要从小到大排序。"><a href="#5、你有一个用于表示一片土地的整数矩阵land，该矩阵中每个点的值代表对应地点的海拔高度。若值为0则表示水域。由垂直、水平或对角连接的水域为池塘。池塘的大小是指相连接的水域的个数。编写一个方法来计算矩阵中所有池塘的大小，返回值需要从小到大排序。" class="headerlink" title="5、你有一个用于表示一片土地的整数矩阵land，该矩阵中每个点的值代表对应地点的海拔高度。若值为0则表示水域。由垂直、水平或对角连接的水域为池塘。池塘的大小是指相连接的水域的个数。编写一个方法来计算矩阵中所有池塘的大小，返回值需要从小到大排序。"></a>5、你有一个用于表示一片土地的整数矩阵land，该矩阵中每个点的值代表对应地点的海拔高度。若值为0则表示水域。由垂直、水平或对角连接的水域为池塘。池塘的大小是指相连接的水域的个数。编写一个方法来计算矩阵中所有池塘的大小，返回值需要从小到大排序。</h2><p>示例：输入：[[0,2,1,0],   [0,1,0,1],  [1,1,0,1],  [0,1,0,1]]      输出： [1,2,4]</p><p>三、实验内容及结果<br>（包括实验过程、实验数据、实验结果及分析，实验代码另外单独附页）<br>1、世界地图上相邻国家需要用不同的颜色标注以示区别，但最多只需要选取四种颜色即可。请编程实现图的着色问题。</p><p>使用回溯法，有1,2,3,4四种颜色，而地图如关系矩阵所示。从第一个位置颜色为1，接着依次往下遍历，使用与相邻的不同的颜色，如果这样下去无法满足4种颜色填色，则说明之前填色有误，<br>回溯到之前一个位置，如果该位置4种颜色都不行，则继续回溯直到满足条件。当关系矩阵M如图中所示时，地图的各个位置颜色如输出所示。<br><img src="https://img-blog.csdnimg.cn/20210520192411628.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520192419761.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">FourColorLabel</span>(<span class="params">M</span>):<span class="comment">#回溯法地图四色</span></span><br><span class="line">    Num=<span class="built_in">len</span>(M)</span><br><span class="line">    Color=[-<span class="number">1</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(Num)]</span><br><span class="line">    n=m=<span class="number">1</span></span><br><span class="line">    <span class="comment">#染色第一个区域，先设置为1</span></span><br><span class="line">    <span class="keyword">while</span> m&lt;=Num:</span><br><span class="line">        <span class="keyword">while</span> n&lt;=<span class="number">4</span> <span class="keyword">and</span> m&lt;=Num:</span><br><span class="line">            flag=<span class="literal">True</span></span><br><span class="line">            <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(m-<span class="number">1</span>):</span><br><span class="line">                <span class="keyword">if</span> M[m-<span class="number">1</span>][k]==<span class="number">1</span> <span class="keyword">and</span> Color[k]==n:<span class="comment">#如果与第m-1个点接触且颜色相同则回溯</span></span><br><span class="line">                    flag=<span class="literal">False</span>  </span><br><span class="line">                    n+=<span class="number">1</span></span><br><span class="line">                    <span class="keyword">break</span>    </span><br><span class="line">            <span class="keyword">if</span> flag:<span class="comment">#flag为true,则涂色</span></span><br><span class="line">                Color[m-<span class="number">1</span>]=n;</span><br><span class="line">                m+=<span class="number">1</span></span><br><span class="line">                n=<span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> n&gt;<span class="number">4</span>:     <span class="comment">#颜色使用超过4种，说明之前涂色有问题，回溯</span></span><br><span class="line">            m-=<span class="number">1</span></span><br><span class="line">            n=Color[m-<span class="number">1</span>]+<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> Color</span><br><span class="line"> </span><br><span class="line">M=[</span><br><span class="line">                [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">                [<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>],</span><br><span class="line">                [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">                [<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>],</span><br><span class="line">                [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line">                [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">                [<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>]</span><br><span class="line">             ]<span class="comment">#关系矩阵，M[i][j]为1则表示i与j相邻，为0则表示不相邻</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> FourColorLabel(M):</span><br><span class="line"><span class="built_in">print</span>(i)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>2、编程实现0-1背包问题，至少两种算法。</p><p>   使用了2种算法，<br>第一种是动态规划法，使用数组c记录最大价值，c[i][j]表示前i个物体放入容量为j 包的最大价值，c[i-1][j] 表示前i个物体放入容量为j 包的最大价值 ，c[i-1][j-w[i]] 表示前i-1个物体放入容量为j-w[i] 包的最大价值，而c[i][j]到第i个物品时有放入和不放入2种选择，取这2选择的最大值，这样利用动态规划算法可以求出c[i][j]所有的值，能求出最大价值，然后利用show函数输出选择的物品。<br>第二种方法为回溯法，利用全局变量bestV最大价值currW当前背包重量currV当前背包价值bestx最优选择物品，每次回溯有选并记录当前值与不选往后遍历两种选择，遍历到最后一个物品时与bestV比较。<br><img src="https://img-blog.csdnimg.cn/20210520192426877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520192434994.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#n：物品件数；c:最大承重为c的背包；w:各个物品的重量；v:各个物品的价值</span></span><br><span class="line"><span class="comment">#w[i]：第i个物体的重量 </span></span><br><span class="line"><span class="comment">#p[i]：第i个物体的价值 </span></span><br><span class="line"><span class="comment">#c[i][j]：前i个物体放入容量为j 包的最大价值 </span></span><br><span class="line"><span class="comment">#c[i-1][j]：前i个物体放入容量为j 包的最大价值 </span></span><br><span class="line"><span class="comment">#c[i-1][j-w[i]]：前i-1个物体放入容量为j-w[i] 包的最大价值</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">knapsack</span>(<span class="params">n,c,w,p</span>):<span class="comment">#动态规划算法求出最大价值</span></span><br><span class="line">    res=[[-<span class="number">1</span> <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(c+<span class="number">1</span>)]<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n+<span class="number">1</span>)]</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(c+<span class="number">1</span>):</span><br><span class="line">        <span class="comment">#第0行全部赋值为0，物品编号从1开始.为了下面赋值方便</span></span><br><span class="line">        res[<span class="number">0</span>][j]=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,c+<span class="number">1</span>):</span><br><span class="line">            res[i][j]=res[i-<span class="number">1</span>][j]</span><br><span class="line">            <span class="comment">#生成了n*c有效矩阵，以下公式w[i-1],p[i-1]代表从第一个元素w[0],p[0]开始取。</span></span><br><span class="line">            <span class="keyword">if</span>(j&gt;=w[i-<span class="number">1</span>]) <span class="keyword">and</span> res[i-<span class="number">1</span>][j-w[i-<span class="number">1</span>]]+p[i-<span class="number">1</span>]&gt;res[i][j]:</span><br><span class="line">                res[i][j]=res[i-<span class="number">1</span>][j-w[i-<span class="number">1</span>]]+p[i-<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">n,c,w,res</span>):<span class="comment">#输出最大价值和选择的物品</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;最大价值为:&#x27;</span>,res[n][c])  </span><br><span class="line">    x=[<span class="literal">False</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]  </span><br><span class="line">    j=c  </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,n+<span class="number">1</span>):  </span><br><span class="line">        <span class="keyword">if</span> res[i][j]&gt;res[i-<span class="number">1</span>][j]:<span class="comment">#res[i][j]&gt;res[i-1][j]则表示第i个物品放入背包</span></span><br><span class="line">            x[i-<span class="number">1</span>]=<span class="literal">True</span>  </span><br><span class="line">            j-=w[i-<span class="number">1</span>]  </span><br><span class="line">    <span class="built_in">print</span> (<span class="string">&quot;选择的物品为:&quot;</span>,end=<span class="string">&quot; &quot;</span>)  </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):  </span><br><span class="line">        <span class="keyword">if</span> x[i]:  </span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;第&#x27;</span>,i+<span class="number">1</span>,<span class="string">&#x27;个&#x27;</span>,end=<span class="string">&quot; &quot;</span>)</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&#x27;__main__&#x27;</span>:  </span><br><span class="line">    n=<span class="number">5</span>  </span><br><span class="line">    c=<span class="number">10</span>  </span><br><span class="line">    weight=[<span class="number">2</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>]  </span><br><span class="line">    price=[<span class="number">6</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>]  </span><br><span class="line">    res=knapsack(n,c,weight,price)  </span><br><span class="line">    show(n,c,weight,res) </span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20210520192439632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520192444927.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">bestV = <span class="number">0</span> <span class="comment"># 最大价值</span></span><br><span class="line">currW = <span class="number">0</span> <span class="comment"># 当前背包重量</span></span><br><span class="line">currV = <span class="number">0</span> <span class="comment"># 当前背包价值</span></span><br><span class="line">bestx = <span class="literal">None</span> <span class="comment"># 最优解</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">backtrack</span>(<span class="params">i</span>):<span class="comment">#深度优先策略搜索回溯法实现01背包,i表示从回溯到第i个物品</span></span><br><span class="line">    <span class="keyword">global</span> bestV,bestx,currV,currW,x<span class="comment">#全局变量使不同深度的遍历时记录相同</span></span><br><span class="line">    <span class="keyword">if</span> i&gt;= n:<span class="comment">#遍历i到最后一个物品时，比较当前背包重量与最大背包重量，与最优解</span></span><br><span class="line">        <span class="keyword">if</span> bestV&lt;currV:</span><br><span class="line">            bestV = currV</span><br><span class="line">            bestx = x[:]</span><br><span class="line">    <span class="keyword">else</span>:<span class="comment">#当i小于n时</span></span><br><span class="line">        <span class="keyword">if</span> currW+w[i]&lt;=c:<span class="comment">#如果选择第i个物品后重量小于最大值，则记录选择第i个物品后的值</span></span><br><span class="line">            x[i]=<span class="number">1</span></span><br><span class="line">            currW += w[i]</span><br><span class="line">            currV += v[i]</span><br><span class="line">            backtrack(i+<span class="number">1</span>)</span><br><span class="line">            currW -= w[i]</span><br><span class="line">            currV -= v[i]</span><br><span class="line">        x[i]=<span class="number">0</span><span class="comment">#记录后将第i个物品设置为不选，对第i+1个物品进行选择</span></span><br><span class="line">        backtrack(i+<span class="number">1</span>)</span><br><span class="line">n=<span class="number">5</span></span><br><span class="line">c=<span class="number">10</span></span><br><span class="line">w=[<span class="number">2</span>,<span class="number">2</span>,<span class="number">6</span>,<span class="number">5</span>,<span class="number">4</span>]</span><br><span class="line">v=[<span class="number">6</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">6</span>]</span><br><span class="line">x=[<span class="literal">False</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n)]</span><br><span class="line">backtrack(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(bestV)</span><br><span class="line"><span class="built_in">print</span>(bestx)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、给定一个二维网格和一个单词，找出该单词是否存在于网格中。说明：单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。<br>示例：board &#x3D;[  [‘A’,’B’,’C’,’E’], [‘S’,’F’,’C’,’S’], [‘A’,’D’,’E’,’E’]] ，给定 word &#x3D; “ABCCED”, 返回 true， 给定 word &#x3D; “SEE”, 返回 true， 给定 word &#x3D; “ABCB”, 返回 false。<br>  本题利用回溯法解决单词搜索问题，首先directions为四个方向，而从左上角开始，依次改变开始位置，依次往四个方向上在网格中遍历，且用mark记录是否已遍历，如果找不到，则回溯重新遍历，只要有一次开始位置使回溯返回结果为true即返回true。<br><img src="https://img-blog.csdnimg.cn/20210520192453598.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520192457685.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment"># 定义上下左右四个行走方向</span></span><br><span class="line">    directs = [(<span class="number">0</span>, <span class="number">1</span>), (<span class="number">0</span>, -<span class="number">1</span>), (<span class="number">1</span>, <span class="number">0</span>), (-<span class="number">1</span>, <span class="number">0</span>)]</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">exist</span>(<span class="params">self, board, word</span>):</span><br><span class="line">        m = <span class="built_in">len</span>(board)<span class="comment">#m表示二维矩阵宽</span></span><br><span class="line">        <span class="keyword">if</span> m == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        n = <span class="built_in">len</span>(board[<span class="number">0</span>])<span class="comment">#n表示二维矩阵场</span></span><br><span class="line">        mark = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(n)] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(m)]<span class="comment">#mark[i][j]记录是否遍历过,1表示已遍历，0表示没有 </span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board)):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(board[<span class="number">0</span>])):<span class="comment">#每次从board[i][j]开始遍历</span></span><br><span class="line">                <span class="keyword">if</span> board[i][j] == word[<span class="number">0</span>]:</span><br><span class="line">                    <span class="comment"># 将该元素标记为已使用</span></span><br><span class="line">                    mark[i][j] = <span class="number">1</span></span><br><span class="line">                    <span class="keyword">if</span> self.backtrack(i, j, mark, board, word[<span class="number">1</span>:]) == <span class="literal">True</span>:<span class="comment">#只要有一次返回true则函数返回true</span></span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        <span class="comment"># 回溯</span></span><br><span class="line">                        mark[i][j] = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">backtrack</span>(<span class="params">self, i, j, mark, board, word</span>):<span class="comment">#从board[i][j]开始遍历，mark[i][j]记录是否遍历过，board为二维数组,word为单词</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(word) == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span>   </span><br><span class="line">        <span class="keyword">for</span> direct <span class="keyword">in</span> self.directs:<span class="comment">#每次都按上，下，右，左遍历</span></span><br><span class="line">            cur_i = i + direct[<span class="number">0</span>]</span><br><span class="line">            cur_j = j + direct[<span class="number">1</span>]</span><br><span class="line">            <span class="keyword">if</span> cur_i &gt;= <span class="number">0</span> <span class="keyword">and</span> cur_i &lt; <span class="built_in">len</span>(board) <span class="keyword">and</span> cur_j &gt;= <span class="number">0</span> <span class="keyword">and</span> cur_j &lt; <span class="built_in">len</span>(board[<span class="number">0</span>]) <span class="keyword">and</span> board[cur_i][cur_j] == word[<span class="number">0</span>]:<span class="comment">#保证board[cur_i][cur_j]不越界且等于word[0]</span></span><br><span class="line">                <span class="keyword">if</span> mark[cur_i][cur_j] == <span class="number">1</span>:<span class="comment"># 如果是已经使用过的元素，忽略</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">                mark[cur_i][cur_j] = <span class="number">1</span><span class="comment"># 将该元素标记为已使用</span></span><br><span class="line">                <span class="keyword">if</span> self.backtrack(cur_i, cur_j, mark, board, word[<span class="number">1</span>:]) == <span class="literal">True</span>:</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="comment"># 不满足条件则回溯</span></span><br><span class="line">                    mark[cur_i][cur_j] = <span class="number">0</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    board = [</span><br><span class="line">        [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;E&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;S&#x27;</span>, <span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;S&#x27;</span>],</span><br><span class="line">        [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;D&#x27;</span>, <span class="string">&#x27;E&#x27;</span>, <span class="string">&#x27;E&#x27;</span>]</span><br><span class="line">    ]</span><br><span class="line">    solution = Solution()</span><br><span class="line">    word = <span class="string">&quot;ABCCED&quot;</span></span><br><span class="line">    res = solution.exist(board, word)</span><br><span class="line">    <span class="built_in">print</span>(res)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>4、班上有 N 名学生。其中有些人是朋友，有些则不是。他们的友谊具有是传递性。如果已知 A 是 B 的朋友，B 是 C 的朋友，那么我们可以认为 A 也是 C 的朋友。所谓的朋友圈，是指所有朋友的集合。给定一个 N * N 的矩阵 M，表示班级中学生之间的朋友关系。如果M[i][j] &#x3D; 1，表示已知第 i 个和 j 个学生互为朋友关系，否则为不知道。你必须输出所有学生中的已知的朋友圈总数。<br>示例1：输入: [[1,1,0], [1,1,0], [0,0,1]]       输出: 2      说明：已知学生0和学生1互为朋友，他们在一个朋友圈。第2个学生自己在一个朋友圈。所以返回2。<br>示例2：输入: [[1,1,0],   [1,1,1],  [0,1,1]]       输出: 1      说明：已知学生0和学生1互为朋友，学生1和学生2互为朋友，所以学生0和学生2也是朋友，所以他们三个在一个朋友圈，返回1。</p><p>使用宽度优先遍历搜索算法，依次遍历，当该点能够到达其他点即为朋友时，使他们的queue设为同1值，且res+1即朋友圈数+1,且将遍历的点踢出点集。<br><img src="https://img-blog.csdnimg.cn/20210520192503218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520192507461.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">findCircleNum</span>(<span class="params">M</span>):</span><br><span class="line">    N, visited, res = <span class="built_in">len</span>(M), <span class="built_in">set</span>(), <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(N):<span class="comment">#宽度优先搜索算法</span></span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> visited:<span class="comment">#当第i个未被访问时</span></span><br><span class="line">            queue = [i]</span><br><span class="line">            <span class="keyword">while</span> queue:<span class="comment">#while将所有从第i个人能够达到的人遍历完</span></span><br><span class="line">                p = queue.pop(<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">if</span> p <span class="keyword">not</span> <span class="keyword">in</span> visited:</span><br><span class="line">                    visited.add(p)<span class="comment">#从i能够到达的点加入visited</span></span><br><span class="line">                    queue += [k <span class="keyword">for</span> k, num <span class="keyword">in</span> <span class="built_in">enumerate</span>(M[p]) <span class="keyword">if</span> num <span class="keyword">and</span> k <span class="keyword">not</span> <span class="keyword">in</span> visited]</span><br><span class="line">                    <span class="comment">#queue加入通过enumerate(M[p])遍历的所能达到的未被遍历的点</span></span><br><span class="line">            res += <span class="number">1</span><span class="comment">#一次遍历完，res+1</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">M=[[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line"> [<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line"> [<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>]]</span><br><span class="line"><span class="built_in">print</span>(findCircleNum(M))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>5、你有一个用于表示一片土地的整数矩阵land，该矩阵中每个点的值代表对应地点的海拔高度。若值为0则表示水域。由垂直、水平或对角连接的水域为池塘。池塘的大小是指相连接的水域的个数。编写一个方法来计算矩阵中所有池塘的大小，返回值需要从小到大排序。<br>示例：输入：[[0,2,1,0],   [0,1,0,1],  [1,1,0,1],  [0,1,0,1]]      输出： [1,2,4]</p><p>   该题也利用宽度优先遍历算法，当找到一个高度为0时，向垂直、水平或对角连接八个方向依次遍历，且对遍历过的点设置已访问，当8个方向都没有高度为0时，记下这个池塘的大小，然后从其他高度为0的点继续遍历记下大小，最后返回从小到大排序后的结果。<br>   <img src="https://img-blog.csdnimg.cn/20210520192515327.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210520192701962.png" alt="在这里插入图片描述"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">pondSizes</span>(<span class="params">self,land</span>):</span><br><span class="line">        areas = []<span class="comment"># 水域面积存储数组</span></span><br><span class="line">        visit = [[<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(land[<span class="number">0</span>]))] <span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(land))]<span class="comment"># 记录访问数组</span></span><br><span class="line">        steps = [[<span class="number">1</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">1</span>], [-<span class="number">1</span>, <span class="number">1</span>], [-<span class="number">1</span>, <span class="number">0</span>], [-<span class="number">1</span>, -<span class="number">1</span>], [<span class="number">0</span>, -<span class="number">1</span>], [<span class="number">1</span>, -<span class="number">1</span>]] <span class="comment">#垂直、水平或对角连接八个方向</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">def</span> <span class="title function_">bfs</span>(<span class="params">x, y</span>):<span class="comment">#宽度优先搜索算法</span></span><br><span class="line">            area = <span class="number">1</span>        </span><br><span class="line">            q = [[x, y]]</span><br><span class="line">            visit[x][y] = <span class="number">1</span></span><br><span class="line">            <span class="keyword">while</span> q:<span class="comment">#一次遍历出q的8个方向上所有的水域点</span></span><br><span class="line">                p = q.pop(<span class="number">0</span>)<span class="comment">#判断p=q[0]是否为水域</span></span><br><span class="line">                <span class="keyword">for</span> i <span class="keyword">in</span> steps:<span class="comment">#对8个方向依次遍历是否存在水域</span></span><br><span class="line">                    dx, dy = p[<span class="number">0</span>] + i[<span class="number">0</span>], p[<span class="number">1</span>] + i[<span class="number">1</span>]</span><br><span class="line">                    <span class="keyword">if</span> <span class="number">0</span> &lt;= dx &lt; <span class="built_in">len</span>(land) <span class="keyword">and</span> <span class="number">0</span> &lt;= dy &lt; <span class="built_in">len</span>(land[<span class="number">0</span>]) <span class="keyword">and</span> land[dx][dy] == <span class="number">0</span> <span class="keyword">and</span> visit[dx][dy] == <span class="number">0</span>:</span><br><span class="line">                        <span class="comment">#判断是否在土地内</span></span><br><span class="line">                        q.append([dx, dy])<span class="comment">#每次当8个方向的点在土地上时，就加入q中</span></span><br><span class="line">                        area += <span class="number">1</span></span><br><span class="line">                        visit[dx][dy] = <span class="number">1</span></span><br><span class="line">            areas.append(area)<span class="comment">#当q旁的所有满足条件的点遍历完后计入areas中</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(land)):</span><br><span class="line">            <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(land[<span class="number">0</span>])):</span><br><span class="line">                <span class="keyword">if</span> land[i][j] == <span class="number">0</span> <span class="keyword">and</span> visit[i][j] == <span class="number">0</span>:<span class="comment">#当land[i][j]为水域时且未被访问时就从该点宽度优先搜索</span></span><br><span class="line">                    bfs(i, j)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">sorted</span>(areas)<span class="comment">#返回从小到大排序后的结果</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    solution = Solution()</span><br><span class="line">    land=[</span><br><span class="line">      [<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>],</span><br><span class="line">      [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">      [<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>],</span><br><span class="line">      [<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>]]</span><br><span class="line">    sizes=solution.pondSizes(land)</span><br><span class="line">    <span class="built_in">print</span>(sizes)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>四、实验总结<br>   （根据实验写出一些心得或分析等）<br>这次实验让我更加体会了回溯法与深度宽度遍历算法，虽然算法很好理解，但在代码编写时感觉有些困难，对许多细节方面有所不足。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一、实验目的及要求&lt;/p&gt;
&lt;h2 id=&quot;1、世界地图上相邻国家需要用不同的颜色标注以示区别，但最多只需要选取四种颜色即可。请编程实现图的着色问题。&quot;&gt;&lt;a href=&quot;#1、世界地图上相邻国家需要用不同的颜色标注以示区别，但最多只需要选取四种颜色即可。请编程实现图的着色</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="算法笔记" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E9%80%92%E5%BD%92+%E5%9B%9E%E6%BA%AF%E6%B3%95/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/%E9%80%92%E5%BD%92+%E5%9B%9E%E6%BA%AF%E6%B3%95/</id>
    <published>2023-02-15T02:20:15.163Z</published>
    <updated>2023-02-15T02:20:15.756Z</updated>
    
    <content type="html"><![CDATA[<p>1、假设A、B、C、D、E各城市间路费如下表所列，左起一列是起点，上面一行是终点，即从A到B的旅费是7，从B到A时6。某人想从一个城市出发游览各城市一遍，在回到出发地，而所用的旅费最少。请编写一程序，求出从各地出发回到出发地的所有最佳路线。<br><img src="https://img-blog.csdnimg.cn/e0e4d8bd2c0446dbad1a216f9b730f6a.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">work1</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span>  <span class="type">int</span> N=<span class="number">5</span>;</span><br><span class="line"><span class="type">int</span> Max=Integer.MAX_VALUE;</span><br><span class="line"><span class="type">char</span>[] City=<span class="keyword">new</span> <span class="title class_">char</span>[]&#123;<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;B&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;E&#x27;</span>&#125;;</span><br><span class="line"><span class="type">int</span> map[][]=&#123;&#123;Max,<span class="number">7</span>,<span class="number">3</span>,<span class="number">10</span>,<span class="number">15</span>&#125;,&#123;<span class="number">6</span>,Max,<span class="number">5</span>,<span class="number">13</span>,<span class="number">12</span>&#125;,&#123;<span class="number">4</span>,<span class="number">8</span>,Max,<span class="number">5</span>,<span class="number">10</span>&#125;,&#123;<span class="number">9</span>,<span class="number">11</span>,<span class="number">6</span>,Max,<span class="number">11</span>&#125;,&#123;<span class="number">17</span>,<span class="number">14</span>,<span class="number">9</span>,<span class="number">8</span>,Max&#125;&#125;;</span><br><span class="line"><span class="type">int</span>[] visited=<span class="keyword">new</span> <span class="title class_">int</span>[N]; <span class="comment">//该城市是否访问</span></span><br><span class="line"><span class="type">int</span>[] visit=<span class="keyword">new</span> <span class="title class_">int</span>[N];; <span class="comment">//记录第i次去的城市</span></span><br><span class="line"><span class="type">int</span>[] road=<span class="keyword">new</span> <span class="title class_">int</span>[N];; <span class="comment">//路线</span></span><br><span class="line"><span class="type">int</span> cost; <span class="comment">//费用</span></span><br><span class="line"><span class="type">int</span> start;<span class="comment">//起点城市</span></span><br><span class="line"><span class="type">int</span> c;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出行程</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span>&#123;</span><br><span class="line">System.out.print(<span class="string">&quot;从城市&quot;</span>+City[start]+<span class="string">&quot;出发的最短行程为：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;j&lt;N;j++)</span><br><span class="line">System.out.print(City[road[j]]+<span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">System.out.print(City[start]);</span><br><span class="line">System.out.println(<span class="string">&quot;费用为：&quot;</span>+cost);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;</span><br><span class="line">cost=Max;</span><br><span class="line">c=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">visited[i]=<span class="number">0</span>;</span><br><span class="line">visit[i]=-<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">Travel</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n==N)&#123; <span class="comment">//全部城市旅游完</span></span><br><span class="line"><span class="keyword">if</span>(c+map[visit[n-<span class="number">1</span>]][start]&lt;cost)&#123; <span class="comment">//返回起点且总费用最少</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;n; j++) road[j]=visit[j];</span><br><span class="line">cost=c+map[visit[n-<span class="number">1</span>]][start];</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(visited[i]==<span class="number">0</span>&amp;&amp;c+map[visit[n-<span class="number">1</span>]][i]&lt;cost) &#123;</span><br><span class="line">visit[n]=i;</span><br><span class="line">visited[visit[n]]=<span class="number">1</span>;</span><br><span class="line">c+=map[visit[n-<span class="number">1</span>]][i];</span><br><span class="line">Travel(n+<span class="number">1</span>);<span class="comment">//搜索下一个城市</span></span><br><span class="line">c-=map[visit[n-<span class="number">1</span>]][i]; <span class="comment">//返回，删除节点</span></span><br><span class="line">visited[visit[n]]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">work1 work=<span class="keyword">new</span> <span class="title class_">work1</span>();</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">work.init();</span><br><span class="line">work.start=i;</span><br><span class="line">work.visit[<span class="number">0</span>]=i;<span class="comment">//设置出发点</span></span><br><span class="line">work.visited[work.start]=<span class="number">1</span>;</span><br><span class="line">work.Travel(<span class="number">1</span>);</span><br><span class="line">work.print();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/2e341d67f03f43feb9faeffd1cffe111.png" alt="在这里插入图片描述"></p><p>2、一块土地上，农民可以种水稻、大豆、燕麦或牧草这四种作物。一年的收益不仅与当年种什么有关，还与去年种什么有关。它们之间的关系如下表。如果农民作一个五年生产计划，已知第一年种植之前种的是牧草。问各年应种什么，使收益最大？<br>         <img src="https://img-blog.csdnimg.cn/d0bd8e39d9cf40c0a3a451844811824e.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">work4</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span>  <span class="type">int</span> N=<span class="number">5</span>;</span><br><span class="line">String[] X=<span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;水稻&quot;</span>,<span class="string">&quot;大豆&quot;</span>,<span class="string">&quot;燕麦&quot;</span>,<span class="string">&quot;牧草&quot;</span>&#125;;</span><br><span class="line"><span class="type">int</span> map[][]=&#123;&#123;<span class="number">3</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">1</span>&#125;,&#123;<span class="number">15</span>,<span class="number">1</span>,<span class="number">17</span>,<span class="number">7</span>&#125;,&#123;<span class="number">9</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">5</span>&#125;,&#123;<span class="number">11</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">3</span>&#125;&#125;;</span><br><span class="line"><span class="type">int</span>[] visit=<span class="keyword">new</span> <span class="title class_">int</span>[N+<span class="number">1</span>];; <span class="comment">//记录第i次暂时种的作物</span></span><br><span class="line"><span class="type">int</span>[] Crops=<span class="keyword">new</span> <span class="title class_">int</span>[N+<span class="number">1</span>];; <span class="comment">//记录最大值时每年种的作物</span></span><br><span class="line"><span class="type">int</span> money; <span class="comment">//收益</span></span><br><span class="line"><span class="type">int</span> temp;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">1</span>;j&lt;N+<span class="number">1</span>;j++)</span><br><span class="line">System.out.print(<span class="string">&quot;第&quot;</span>+j+<span class="string">&quot;年种&quot;</span>+X[Crops[j]]+<span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">System.out.println(<span class="string">&quot;收货为：&quot;</span>+money);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span>&#123;<span class="comment">//初始化</span></span><br><span class="line">money=<span class="number">0</span>;</span><br><span class="line">temp=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;N;i++)&#123;</span><br><span class="line">visit[i]=-<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> <span class="title function_">crop</span><span class="params">(<span class="type">int</span> n)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(n==N)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(temp+map[visit[N-<span class="number">1</span>]][i]&gt;money)&#123; </span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;n; j++) Crops[j]=visit[j];</span><br><span class="line">money=temp+map[visit[n-<span class="number">1</span>]][i];</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)&#123;</span><br><span class="line">visit[n]=i;</span><br><span class="line">temp+=map[visit[n-<span class="number">1</span>]][i];</span><br><span class="line">crop(n+<span class="number">1</span>);<span class="comment">//下一年</span></span><br><span class="line">temp-=map[visit[n-<span class="number">1</span>]][i]; <span class="comment">//返回，删除节点</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">work4 work=<span class="keyword">new</span> <span class="title class_">work4</span>();</span><br><span class="line">work.init();</span><br><span class="line">work.visit[<span class="number">0</span>]=<span class="number">3</span>;<span class="comment">//设置出发点</span></span><br><span class="line">work.crop(<span class="number">1</span>);</span><br><span class="line">work.print();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/4d79f14122e144a18770be7895dc053e.png" alt="在这里插入图片描述"></p><p>二、代码思路<br>总结一下回溯法的关键，首先需要一个temp函数来记录目前的花费或收益，最后输出的变量result；对于像第一题这种遍历过后不用重复遍历的，需要用visited[]来记录当前结点是否被访问过，若被访问过则不再访问，而第2题可重复遍历则不用使用visited[]记录；此外还必须使用visit[]记录当前访问的结点路径，这是类似temp来暂存访问路径的数组，然后在有一个最后输出的数组road[]。之后有一个递归函数，在函数中更新temp，visited[]与visit[]，且递归函数一定要有递归退出条件，如这两道题中的n&#x3D;&#x3D;N判断是否递归退出，在退出时判断temp与result，如果当前的temp较大，则把visit[]与temp赋值给road[]与result，这样重复递归遍历多次，最后递归完成的result则为所求的最值。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1、假设A、B、C、D、E各城市间路费如下表所列，左起一列是起点，上面一行是终点，即从A到B的旅费是7，从B到A时6。某人想从一个城市出发游览各城市一遍，在回到出发地，而所用的旅费最少。请编写一程序，求出从各地出发回到出发地的所有最佳路线。&lt;br&gt;&lt;img src=&quot;htt</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="算法笔记" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>LeetCode409.最长回文串</title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/LeetCode409.%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E4%B8%B2/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/LeetCode409.%20%E6%9C%80%E9%95%BF%E5%9B%9E%E6%96%87%E4%B8%B2/</id>
    <published>2023-02-15T02:20:08.835Z</published>
    <updated>2023-02-15T08:55:39.536Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img-blog.csdnimg.cn/e44b3446243b48fd96a7a18fc4ed37c6.png" alt="在这里插入图片描述"></p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>桶装法，字母出现偶数次一定可以计入总长度，再用count记录所有奇数余1次数，最后用长度减去count+1，因为所有的余1只能留下一个当中心</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">       <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">longestPalindrome</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="comment">// 找出可以构成最长回文串的长度</span></span><br><span class="line">        <span class="type">int</span>[] arr = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">128</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">char</span> c : s.toCharArray()) &#123;</span><br><span class="line">            arr[c]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i : arr) &#123;</span><br><span class="line">            count += (i % <span class="number">2</span>);<span class="comment">//比如有5个a，可以取4个a形成回文串，count记录所有奇数余1次数，最后只能加1次</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count == <span class="number">0</span> ? s.length() : (s.length() - count + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">//s.toCharArray</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/e44b3446243b48fd96a7a18fc4ed37c6.png&quot; alt=&quot;在这里插入图片描述&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;解题思路&quot;&gt;&lt;a href=&quot;#解题思路&quot; class=&quot;hea</summary>
      
    
    
    
    <category term="算法笔记" scheme="https://pistachiout.github.io/categories/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="算法" scheme="https://pistachiout.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="Java" scheme="https://pistachiout.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode459.重复的子字符串</title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/LeetCode459.%20%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/LeetCode459.%20%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%90%E5%AD%97%E7%AC%A6%E4%B8%B2/</id>
    <published>2023-02-15T02:20:00.787Z</published>
    <updated>2023-02-15T08:56:50.673Z</updated>
    
    <content type="html"><![CDATA[<p>﻿## 给定一个非空的字符串 s ，检查是否可以通过由它的一个子串重复多次构成。**</p><p><img src="https://img-blog.csdnimg.cn/126a771162ae43a9bb01b553a46c563b.png" alt="在这里插入图片描述"></p><h2 id="法一：KMP算法使用"><a href="#法一：KMP算法使用" class="headerlink" title="法一：KMP算法使用"></a>法一：KMP算法使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">repeatedSubstringPattern</span><span class="params">(String s)</span>&#123;</span><br><span class="line">        <span class="type">int</span>[] next = <span class="keyword">new</span> <span class="title class_">int</span>[s.length()];</span><br><span class="line">        getNext(next,s);</span><br><span class="line">        <span class="comment">//最后一位最长相等前后缀为0，说明没有可重复的子串</span></span><br><span class="line">        <span class="keyword">if</span>(next[s.length() -<span class="number">1</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//若最后一位最长相等前后缀不为0，s-最长相等前后缀的长度为可重复的子串，若可以被s整除则可一直循环此子串</span></span><br><span class="line">            <span class="keyword">return</span> s.length() % (s.length() - next[s.length() -<span class="number">1</span>]) == <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//next数组--求最长相等前后缀</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getNext</span><span class="params">(<span class="type">int</span>[] next, String s)</span>&#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        next[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">while</span>(j &gt; <span class="number">0</span> &amp;&amp; s.charAt(i) != s.charAt(j))&#123;</span><br><span class="line">                j = next[j-<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(s.charAt(i) == s.charAt(j))&#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            next[i] = j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="法二：暴力枚举求解"><a href="#法二：暴力枚举求解" class="headerlink" title="法二：暴力枚举求解"></a>法二：暴力枚举求解</h2><p>双循环，i从1到n&#x2F;2表示子串长度，j与j-i在i的循环内每次从i到n<br>如ababab，i&#x3D;2时，令j&#x3D;i，j与j-i同步向后遍历，若出现不同，则返回false。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">repeatedSubstringPattern</span><span class="params">(String s)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> s.length();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i * <span class="number">2</span> &lt;= n; ++i) &#123;<span class="comment">//双循环，i从1到n/2表示子串长度，j与j-i在i的循环内每次从i到n</span></span><br><span class="line">        <span class="comment">//如ababab，i=2时，令j=i，j与j-i同步向后遍历，若出现不同，则返回false。</span></span><br><span class="line">            <span class="keyword">if</span> (n % i == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">boolean</span> <span class="variable">match</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i; j &lt; n; ++j) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (s.charAt(j) != s.charAt(j - i)) &#123;</span><br><span class="line">                        match = <span class="literal">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (match) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;﻿## 给定一个非空的字符串 s ，检查是否可以通过由它的一个子串重复多次构成。**&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/126a771162ae43a9bb01b553a46c563b.png&quot; alt=&quot;在这里插入图</summary>
      
    
    
    
    <category term="算法笔记" scheme="https://pistachiout.github.io/categories/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="算法" scheme="https://pistachiout.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
    <category term="Java" scheme="https://pistachiout.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/LeetCode461.%20%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/LeetCode461.%20%E6%B1%89%E6%98%8E%E8%B7%9D%E7%A6%BB/</id>
    <published>2023-02-15T02:19:53.677Z</published>
    <updated>2023-02-15T02:19:54.280Z</updated>
    
    <content type="html"><![CDATA[<p>两个整数之间的 汉明距离 指的是这两个数字对应二进制位不同的位置的数目。<br>给你两个整数 x 和 y，计算并返回它们之间的汉明距离。<br><img src="https://img-blog.csdnimg.cn/00e3c8df347f454bbb29a90c700e8070.png" alt="在这里插入图片描述"></p><h2 id="1-x-y异或，用f-x-x3D-x-amp-x−1-）次数求二进制中1的个数，那么-f-x-恰为x删去其二进制表示中最右侧的1的结果。"><a href="#1-x-y异或，用f-x-x3D-x-amp-x−1-）次数求二进制中1的个数，那么-f-x-恰为x删去其二进制表示中最右侧的1的结果。" class="headerlink" title="1.x ^ y异或，用f(x)&#x3D;x &amp; (x−1)）次数求二进制中1的个数，那么 f(x) 恰为x删去其二进制表示中最右侧的1的结果。"></a>1.x ^ y异或，用f(x)&#x3D;x &amp; (x−1)）次数求二进制中1的个数，那么 f(x) 恰为x删去其二进制表示中最右侧的1的结果。</h2><p>class Solution {<br>    public int hammingDistance(int x, int y) {<br>        int s &#x3D; x ^ y, ret &#x3D; 0;<br>        while (s !&#x3D; 0) {<br>            s &amp;&#x3D; s - 1;&#x2F;&#x2F;f(x)&#x3D;x &amp; (x−1)），那么 f(x) 恰为x删去其二进制表示中最右侧的1的结果。<br>            ret++;<br>        }<br>        return ret;<br>    }<br>}</p><h2 id="2-x-y异或，Integer-bitCount记录1的个数"><a href="#2-x-y异或，Integer-bitCount记录1的个数" class="headerlink" title="2.x^y异或，Integer.bitCount记录1的个数"></a>2.x^y异或，Integer.bitCount记录1的个数</h2><p>class Solution {<br>    public int hammingDistance(int x, int y) {<br>        return Integer.bitCount(x ^ y);<br>    }<br>}</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;两个整数之间的 汉明距离 指的是这两个数字对应二进制位不同的位置的数目。&lt;br&gt;给你两个整数 x 和 y，计算并返回它们之间的汉明距离。&lt;br&gt;&lt;img src=&quot;https://img-blog.csdnimg.cn/00e3c8df347f454bbb29a90c700</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="算法笔记" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/Android%E5%9B%BE%E7%89%87%EF%BC%8C%E8%A7%86%E9%A2%91%EF%BC%8C%E9%9F%B3%E4%B9%90%E9%80%89%E6%8B%A9%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    <id>https://pistachiout.github.io/wiki/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/Android%E5%9B%BE%E7%89%87%EF%BC%8C%E8%A7%86%E9%A2%91%EF%BC%8C%E9%9F%B3%E4%B9%90%E9%80%89%E6%8B%A9%E6%92%AD%E6%94%BE%E5%99%A8/</id>
    <published>2023-02-15T02:19:26.779Z</published>
    <updated>2023-02-15T02:19:27.391Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、设计目的"><a href="#1、设计目的" class="headerlink" title="1、设计目的"></a>1、设计目的</h1><p>为了更加深入的了解Android开发，我最初是打算设计是建立一个相册或视频相关的多媒体的应用，但一次偶然的机会我看到了在github中一个框架，该框架中定义了许多有关图片和视频相关操作的方法，而且能够获取到手机本地的文件，而不像之前的应用需要导入到drawable中或在网上获取，于是本次课程设计我决定利用github<br><a href="https://github.com/LuckSiege/PictureSelector">https://github.com/LuckSiege/PictureSelector</a>的开源框架做一个能够查看手机后台存储数据的应用，这样方便的找出手机中存储在各个位置的图片音乐视频等，比如手机拍摄的图片，本地下载的视频，或者本地下载的音乐等，在选择时进行预览方便选择，类似于手机相册。</p><h1 id="2、功能描述"><a href="#2、功能描述" class="headerlink" title="2、功能描述"></a>2、功能描述</h1><ol><li>预览查看手机存储的照片，视频和音频，可以通过应用找到手机中存储的各类型照片，视频和音频，包括png，jpg，jpeg等格式</li><li>单选或多选手机本地存储的照片，音频和视频，将选择的照片视频音频返回到首页显示</li><li>拍照，录像或录音，将结果返回到首页展示</li><li>在首页播放选择的照片视频和音频</li></ol><h1 id="3、详细设计"><a href="#3、详细设计" class="headerlink" title="3、详细设计"></a>3、详细设计</h1><h2 id="3-1-系统业务逻辑"><a href="#3-1-系统业务逻辑" class="headerlink" title="3.1 系统业务逻辑"></a>3.1 系统业务逻辑</h2><h2 id="业务逻辑流程图"><a href="#业务逻辑流程图" class="headerlink" title="业务逻辑流程图"></a>业务逻辑流程图</h2><p><img src="https://img-blog.csdnimg.cn/20210614170042924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="3-2-系统功能模块设计"><a href="#3-2-系统功能模块设计" class="headerlink" title="3.2 系统功能模块设计"></a>3.2 系统功能模块设计</h2><p><img src="https://img-blog.csdnimg.cn/2021061417005155.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="3-3-系统界面设计"><a href="#3-3-系统界面设计" class="headerlink" title="3.3 系统界面设计"></a>3.3 系统界面设计</h2><ol><li>首页：显示自己选择的文件。</li><li>操作选项页面，在首页点击后进入操作选择页面，可以选择是添加照片和视频还是音频，亦或者是拍照。</li><li>本地文件展示页面：将手机本地的文件（图片，视频，音频）以类似手机相册的方式显示，可以进行选择和预览</li><li>文件预览页面：点击想要选择的文件，会预览文件</li></ol><h1 id="4、程序实现"><a href="#4、程序实现" class="headerlink" title="4、程序实现"></a>4、程序实现</h1><p>首先由于我用了第三方的集成框架，所以首先要利用gradle导入<br>allprojects {<br>   repositories {<br>      jcenter()<br>      maven { url ‘<a href="https://jitpack.io/">https://jitpack.io</a>‘ }<br>   }<br>}<br>然后建立layout中的xml文件，首先首页利用RecyclerView来便于将选择的图片进行排列，在利用相对布局和imageview以及库中的layout将图片视频等展示出来。<br>在MainActivity中，利用getviewbyid获取到layout中的ui控件，<br>new一个GridImageAdapter来存放选择的文件，然后判断利用库中集成的函数判断存放的文件的类型，利用switch函数利用集成的不同方法来打开各自对应的文件。<br><img src="https://img-blog.csdnimg.cn/20210614170101382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>而想要获取到手机本地的文件，还要申请到写的权限<br><img src="https://img-blog.csdnimg.cn/20210614170109485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>然后给ui控件设计点击相应监听器，利用控件的getid判断响应事件，在每个对应的事件中利用库中的函数将手机本地的相册显示并进行相关的操作。<br><img src="https://img-blog.csdnimg.cn/20210614170115230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="5-运行结果"><a href="#5-运行结果" class="headerlink" title="5.运行结果"></a>5.运行结果</h1><p><img src="https://img-blog.csdnimg.cn/20210614170123152.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210614170127662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>选择相册：<br><img src="https://img-blog.csdnimg.cn/20210614170136744.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210614170139745.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210614170149392.png" alt="在这里插入图片描述"></p><p>左边是我的应用的界面，右边是模拟器中自带的图库的界面，可以看到该应用找到了该模拟器中包括图片的所有文件夹，也获取到了手机本地保存的所有图片和视频。<br><img src="https://img-blog.csdnimg.cn/20210614170201572.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210614170205729.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/2021061417020910.png" alt="在这里插入图片描述"></p><p>可以点击图片进行预览，也可以左右滑动选择不同的相册。<br><img src="https://img-blog.csdnimg.cn/20210614170215310.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210614170219150.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210614170223137.png" alt="在这里插入图片描述"></p><p>选择的图片会返回首页进行展示，在首页也能进入查看页面</p><p><img src="https://img-blog.csdnimg.cn/20210614170229731.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210614170233304.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/2021061417023767.png" alt="在这里插入图片描述"></p><p>当选择音频时，显示本地的所有音频，并在点击后能进行播放<br><img src="https://img-blog.csdnimg.cn/2021061417025487.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210614170301169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>在选择视频后也能进行播放和选择到首页<br><img src="https://img-blog.csdnimg.cn/20210614170309269.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210614170313465.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/2021061417031876.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>还能够进行录视频，拍照，录音。</p><h1 id="6、总结"><a href="#6、总结" class="headerlink" title="6、总结"></a>6、总结</h1><ul><li>本次实验我用到了github中的开源库，其中有许多没有在课堂中学过的知识，比如文件操作权限的获取，开源库的导入，对于录像，拍照，录视频等不同拍摄的实现过程。<br>但也有一些学过的</li><li>知识获得了加深，比如layout的页面设计中如何将图片排列整齐，如何学习使用RecyclerView；在为控件添加监听事件时利用view的getid和switch来给不同的控件添加事件；利用adapter适配器来放入照片和视频等不同的文件，并在adapter中为每个图片，视频等添加各自的点击响应事件，来完成在首页选择文件的查看。</li><li>这个系统也有许多可以改进的地方，比如在导入库和进行使用时出现很多问题，其中解决了一些问题，但也有一些没有解决，如在开源库中还有可以对图片进行裁剪旋转的功能，但在使用时却会关闭应用，并且在日志中也没有显示报错信息，最后没有解决，于是只有放弃这个功能；在进行选择时无法显示文件的名字，图片可以直接看，但视频和音频则必须要打开播放才能确定文件名字。</li></ul><h1 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h1><p><a href="https://github.com/1105358600/AndroidPVASelector">https://github.com/1105358600/AndroidPVASelector</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、设计目的&quot;&gt;&lt;a href=&quot;#1、设计目的&quot; class=&quot;headerlink&quot; title=&quot;1、设计目的&quot;&gt;&lt;/a&gt;1、设计目的&lt;/h1&gt;&lt;p&gt;为了更加深入的了解Android开发，我最初是打算设计是建立一个相册或视频相关的多媒体的应用，但一次偶然的机</summary>
      
    
    
    
    <category term="软件项目" scheme="https://pistachiout.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="Android项目" scheme="https://pistachiout.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/Android%20%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%96%E7%A8%8BSQLite%E5%AE%9E%E7%8E%B0%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E5%BA%94%E7%94%A8/"/>
    <id>https://pistachiout.github.io/wiki/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/Android%20%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%96%E7%A8%8BSQLite%E5%AE%9E%E7%8E%B0%E5%AD%A6%E7%94%9F%E4%BF%A1%E6%81%AF%E7%AE%A1%E7%90%86%E5%BA%94%E7%94%A8/</id>
    <published>2023-02-15T02:19:18.515Z</published>
    <updated>2023-02-15T02:19:19.127Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-数据库编程SQLite"><a href="#Android-数据库编程SQLite" class="headerlink" title="Android 数据库编程SQLite"></a>Android 数据库编程SQLite</h1><h2 id="一、实验内容"><a href="#一、实验内容" class="headerlink" title="一、实验内容"></a>一、实验内容</h2><h2 id="1-构建应用界面布局"><a href="#1-构建应用界面布局" class="headerlink" title="1. 构建应用界面布局"></a>1. 构建应用界面布局</h2><p>（1）新建一个安卓工程，在默认的layout主界面中添加一个列表(ListView)，列表绑定一个SimpleAdapter关联学生信息（学号、姓名）。<br>（2）为ListView添加上下文菜单，菜单中包含两个选项（修改学生，删除学生），分别对应学生信息的修改和删除操作。为每个选项添加点击事件完成相应的操作，其中点击修改学生时启动“updateStu”Activity组件。<br>（3）在ListView下方添加一个按钮(Button)，内容为“添加学生”，为按钮添加点击事件，单击按钮是启动“addStu”Activity组件。<br>（4）为“updateStu”和“addStu”Activity组件构建对应的layout界面stuinfo.xml，添加对应的文本框和输出框显示某一个学生的信息（学号、姓名、性别、电话），添加确认按钮(Button)。注意：当由“addStu”Activity启动此界面时，相关输入内容为空白，当由“updateStu”Activity启动此界面时，相关输入内容为该学生的原始信息。</p><h2 id="2-利用SQLite构建数据库交互组件"><a href="#2-利用SQLite构建数据库交互组件" class="headerlink" title="2. 利用SQLite构建数据库交互组件"></a>2. 利用SQLite构建数据库交互组件</h2><p>（1）新建一个DpHelper类继承SQLiteOpenHelper，通过构建方法启动数据库连接。构建createtable()方法完成建表操作，在数据库中建立一个学生信息表：<br><img src="https://img-blog.csdnimg.cn/20210603214055312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>（2）构建insert(String id, String name, String sex, String phone)方法实现插入记录操作，构建   delete(String id)方法实现删除记录操作，构建update(String id, String name, String sex, String phone)方法实现更新记录操作，构建select(String id)方法实现查询某一记录操作，构建selectAll()方法实现查询所有记录操作。</p><h2 id="3-实现学生信息管理应用"><a href="#3-实现学生信息管理应用" class="headerlink" title="3. 实现学生信息管理应用"></a>3. 实现学生信息管理应用</h2><p>（1）完善相关代码，实现学生信息管理应用的基本功能。包括：</p><ol><li>学生信息列表：进入应用程序后，在ListView中自动加载所有已有学生的信息（学号，姓名）。</li><li>添加学生：单击“添加学生”按钮，打开相应的界面stuinfo.xml填写新学生信息，单击“确认”按钮后完成</li><li>添加学生操作。要求程序能够识别用户输入完整性（学号、姓名为必填项），如果新学生学号与现有学生相同，应提示更换学号。添加完成后返回主界面，同时更新ListView的内容。</li><li>删除学生：根据ListView长按位置得到要删除的学生的学号信息，完成删除操作，删除后更新ListView的内容。</li><li>修改学生：根据ListView长按位置得到要修改的学生的相关信息，打开相应的界面stuinfo.xml，将学生原始信息自动填入对应的输入框中，点击确认按钮后完成更新学生信息操作。要求程序能够识别用户输入完整性（学号、姓名为必填项），如果新学生学号与现有学生相同，应提示更换学号。修改完成后返回主界面，同时更新ListView的内容。</li></ol><p>（2）测试相关功能，添加若干条学生信息（3条以上），再进行信息修改、删除操作的测试。</p><h1 id="二：演示截图"><a href="#二：演示截图" class="headerlink" title="二：演示截图"></a>二：演示截图</h1><h2 id="数据库："><a href="#数据库：" class="headerlink" title="数据库："></a>数据库：<img src="https://img-blog.csdnimg.cn/20210627231601258.png" alt="在这里插入图片描述"></h2><h2 id="没有填入数据时，显示学生，姓名，性别，手机："><a href="#没有填入数据时，显示学生，姓名，性别，手机：" class="headerlink" title="没有填入数据时，显示学生，姓名，性别，手机："></a>没有填入数据时，显示学生，姓名，性别，手机：</h2><p><img src="https://img-blog.csdnimg.cn/20210627231629465.png" alt="在这里插入图片描述"></p><h2 id="插入学生数据："><a href="#插入学生数据：" class="headerlink" title="插入学生数据："></a>插入学生数据：</h2><p><img src="https://img-blog.csdnimg.cn/20210627231642473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="插入数据后："><a href="#插入数据后：" class="headerlink" title="插入数据后："></a>插入数据后：</h2><p><img src="https://img-blog.csdnimg.cn/20210627231743599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="单击某行进行学生信息修改："><a href="#单击某行进行学生信息修改：" class="headerlink" title="单击某行进行学生信息修改："></a>单击某行进行学生信息修改：<img src="https://img-blog.csdnimg.cn/20210627231757883.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></h2><p><img src="https://img-blog.csdnimg.cn/20210627231804427.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210627231913524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="长按提示是否删除，确认后删除："><a href="#长按提示是否删除，确认后删除：" class="headerlink" title="长按提示是否删除，确认后删除："></a>长按提示是否删除，确认后删除：</h2><p><img src="https://img-blog.csdnimg.cn/20210627231931338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20210627231946285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="如果添加的学号重复：提示学号重复"><a href="#如果添加的学号重复：提示学号重复" class="headerlink" title="如果添加的学号重复：提示学号重复"></a>如果添加的学号重复：提示学号重复</h2><p><img src="https://img-blog.csdnimg.cn/20210627232003348.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h1 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span> android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:paddingLeft=<span class="string">&quot;@dimen/activity_horizontal_margin&quot;</span> android:paddingRight=<span class="string">&quot;@dimen/activity_horizontal_margin&quot;</span></span><br><span class="line">    android:paddingTop=<span class="string">&quot;@dimen/activity_vertical_margin&quot;</span> android:paddingBottom=<span class="string">&quot;@dimen/activity_vertical_margin&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=<span class="string">&quot;fill_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:orientation=<span class="string">&quot;horizontal&quot;</span>&gt;</span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:layout_width=<span class="string">&quot;@dimen/item_no_width&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;left&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;@dimen/item_font_size&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;@string/no&quot;</span>/&gt;</span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:layout_width=<span class="string">&quot;@dimen/item_name_width&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;left&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;@dimen/item_font_size&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;@string/name&quot;</span>/&gt;</span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:layout_width=<span class="string">&quot;@dimen/item_name_width&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;left&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;@dimen/item_font_size&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;性别:&quot;</span>/&gt;</span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:layout_width=<span class="string">&quot;fill_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;left&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;@dimen/item_font_size&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;@string/phone&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ListView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/lv_contact&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;fill_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/ListView&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/btn_add&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;411dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_gravity=<span class="string">&quot;bottom&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;@dimen/margin_fix&quot;</span></span><br><span class="line">        android:background=<span class="string">&quot;@color/btn_blue&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;@string/add&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;@dimen/btn_add_size&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;LinearLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span> android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;horizontal&quot;</span>&gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:layout_width=<span class="string">&quot;@dimen/item_no_width&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:gravity=<span class="string">&quot;left&quot;</span></span><br><span class="line">        android:id=<span class="string">&quot;@+id/contact_no&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;@dimen/item_font_size&quot;</span>/&gt;</span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:layout_width=<span class="string">&quot;@dimen/item_name_width&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:gravity=<span class="string">&quot;left&quot;</span></span><br><span class="line">        android:id=<span class="string">&quot;@+id/contact_name&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;@dimen/item_font_size&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/contact_sex&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;90dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:gravity=<span class="string">&quot;left&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;@dimen/item_font_size&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/contact_phonenumber&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;fill_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:gravity=<span class="string">&quot;left&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;@dimen/item_font_size&quot;</span> /&gt;</span><br><span class="line">&lt;/LinearLayout&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">&lt;LinearLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span> android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:paddingLeft=<span class="string">&quot;@dimen/activity_horizontal_margin&quot;</span> android:paddingRight=<span class="string">&quot;@dimen/activity_horizontal_margin&quot;</span></span><br><span class="line">    android:paddingTop=<span class="string">&quot;@dimen/activity_vertical_margin&quot;</span> android:paddingBottom=<span class="string">&quot;@dimen/activity_vertical_margin&quot;</span></span><br><span class="line">    android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;com.wsine.west.exp7.DetailActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_gravity=<span class="string">&quot;center&quot;</span></span><br><span class="line">        android:id=<span class="string">&quot;@+id/detail_title&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;@dimen/title_size&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span>&gt;</span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;@string/no&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;@dimen/label_size&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;center_vertical&quot;</span>/&gt;</span><br><span class="line">        &lt;EditText</span><br><span class="line">            android:layout_width=<span class="string">&quot;fill_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:id=<span class="string">&quot;@+id/Et_no&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;@dimen/label_size&quot;</span>/&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span>&gt;</span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;@string/name&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;@dimen/label_size&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;center_vertical&quot;</span>/&gt;</span><br><span class="line">        &lt;EditText</span><br><span class="line">            android:layout_width=<span class="string">&quot;fill_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:id=<span class="string">&quot;@+id/Et_name&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;@dimen/label_size&quot;</span>/&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span>&gt;</span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;性别:&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;@dimen/label_size&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;center_vertical&quot;</span>/&gt;</span><br><span class="line">        &lt;EditText</span><br><span class="line">            android:layout_width=<span class="string">&quot;fill_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:id=<span class="string">&quot;@+id/Et_sex&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;@dimen/label_size&quot;</span>/&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span>&gt;</span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;@string/phone&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;@dimen/label_size&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;center_vertical&quot;</span>/&gt;</span><br><span class="line">        &lt;EditText</span><br><span class="line">            android:layout_width=<span class="string">&quot;fill_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:id=<span class="string">&quot;@+id/Et_phone&quot;</span></span><br><span class="line">            android:textSize=<span class="string">&quot;@dimen/label_size&quot;</span>/&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:layout_width=<span class="string">&quot;fill_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;@dimen/margin_fix&quot;</span></span><br><span class="line">        android:layout_gravity=<span class="string">&quot;center&quot;</span></span><br><span class="line">        android:id=<span class="string">&quot;@+id/btn_confirm&quot;</span></span><br><span class="line">        android:textSize=<span class="string">&quot;@dimen/btn_add_size&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;@string/confirm&quot;</span></span><br><span class="line">        android:background=<span class="string">&quot;@color/btn_blue&quot;</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;/LinearLayout&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wsine.west.exp7;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by West on 2015/11/25.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Contact</span> &#123;</span><br><span class="line">    <span class="keyword">private</span>  <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String no;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String phoneNumber;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Contact</span><span class="params">(String no, String name, String sex, String phoneNumber)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.no = no;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.phoneNumber = phoneNumber;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Contact</span><span class="params">(<span class="type">int</span> id, String no, String name, String sex, String phoneNumber)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.no = no;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.phoneNumber = phoneNumber;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Contact</span><span class="params">()</span> &#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Contact</span><span class="params">(String _name, String _phoneNumber)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = _name;</span><br><span class="line">        <span class="built_in">this</span>.phoneNumber = _phoneNumber;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Contact</span><span class="params">(String _no, String _name, String _phoneNumber)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.no = _no;</span><br><span class="line">        <span class="built_in">this</span>.name = _name;</span><br><span class="line">        <span class="built_in">this</span>.phoneNumber = _phoneNumber;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getNo</span><span class="params">()</span> &#123; <span class="keyword">return</span> no; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setNo</span><span class="params">(String _no)</span> &#123; <span class="built_in">this</span>.no = _no; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(String sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123; <span class="keyword">return</span> name; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String _name)</span> &#123; <span class="built_in">this</span>.name = _name; &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPhoneNumber</span><span class="params">()</span> &#123; <span class="keyword">return</span> phoneNumber; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPhoneNumber</span><span class="params">(String _phoneNumber)</span> &#123; <span class="built_in">this</span>.phoneNumber = _phoneNumber; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wsine.west.exp7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.SimpleAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by West on 2015/11/25.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MySimpleAdapter</span> <span class="keyword">extends</span> <span class="title class_">SimpleAdapter</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;Map&lt;String, String&gt;&gt; mData;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;Map&lt;String, String&gt;&gt; <span class="title function_">getmData</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> mData;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MySimpleAdapter</span><span class="params">(Context context, List&lt;? extends Map&lt;String, ?&gt;&gt; data,</span></span><br><span class="line"><span class="params">                           <span class="type">int</span> resource, String[] from, <span class="type">int</span>[] to)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, data, resource, from, to);</span><br><span class="line">        <span class="built_in">this</span>.mData = (ArrayList&lt;Map&lt;String, String&gt;&gt;)data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> View <span class="title function_">getView</span><span class="params">(<span class="type">int</span> position, View convertView, ViewGroup parent)</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span> <span class="variable">mPosition</span> <span class="operator">=</span> position;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.getView(position, convertView, parent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wsine.west.exp7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.ContentValues;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteDatabase;</span><br><span class="line"><span class="keyword">import</span> android.database.sqlite.SQLiteOpenHelper;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> android.widget.Toast.LENGTH_SHORT;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by West on 2015/11/25.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyDatabaseHelper</span> <span class="keyword">extends</span> <span class="title class_">SQLiteOpenHelper</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">DB_NAME</span> <span class="operator">=</span> <span class="string">&quot;Contacts.db&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TABLE_NAME</span> <span class="operator">=</span> <span class="string">&quot;Contacts&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">DB_VERSION</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyDatabaseHelper</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, DB_NAME, <span class="literal">null</span>, DB_VERSION);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(SQLiteDatabase db)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">CREATE_TABLE</span> <span class="operator">=</span> <span class="string">&quot;create table &quot;</span> + TABLE_NAME</span><br><span class="line">                + <span class="string">&quot; (_id integer primary key autoincrement, &quot;</span></span><br><span class="line">                + <span class="string">&quot;_no text not null, &quot;</span></span><br><span class="line">                + <span class="string">&quot;_name text not null, &quot;</span></span><br><span class="line">                + <span class="string">&quot;_sex text,&quot;</span></span><br><span class="line">                + <span class="string">&quot;_pnumber text);&quot;</span>;</span><br><span class="line">        db.execSQL(CREATE_TABLE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onUpgrade</span><span class="params">(SQLiteDatabase db, <span class="type">int</span> oldVersion, <span class="type">int</span> newVersion)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">DROP_TABLE</span> <span class="operator">=</span> <span class="string">&quot;DROP TABLE IF exists &quot;</span> + TABLE_NAME;</span><br><span class="line">        db.execSQL(DROP_TABLE);</span><br><span class="line">        onCreate(db);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">long</span> <span class="title function_">insert</span><span class="params">(Contact entity)</span> &#123;</span><br><span class="line">        <span class="type">SQLiteDatabase</span> <span class="variable">db</span> <span class="operator">=</span> getWritableDatabase();</span><br><span class="line">        <span class="type">ContentValues</span> <span class="variable">values</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">        values.put(<span class="string">&quot;_no&quot;</span>, entity.getNo());</span><br><span class="line">        values.put(<span class="string">&quot;_name&quot;</span>, entity.getName());</span><br><span class="line">        values.put(<span class="string">&quot;_sex&quot;</span>, entity.getSex());</span><br><span class="line">        values.put(<span class="string">&quot;_pnumber&quot;</span>, entity.getPhoneNumber());</span><br><span class="line">        <span class="type">long</span> <span class="variable">id</span> <span class="operator">=</span> db.insert(TABLE_NAME, <span class="literal">null</span>, values);</span><br><span class="line">        db.close();</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">update</span><span class="params">(Contact entity,String oldNo)</span> &#123;</span><br><span class="line">        <span class="type">SQLiteDatabase</span> <span class="variable">db</span> <span class="operator">=</span> getWritableDatabase();</span><br><span class="line">        <span class="type">String</span> <span class="variable">whereClause</span> <span class="operator">=</span> <span class="string">&quot;_no = ?&quot;</span>;</span><br><span class="line">        String[] whereArgs = &#123; oldNo&#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">ContentValues</span> <span class="variable">values</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ContentValues</span>();</span><br><span class="line">        values.put(<span class="string">&quot;_no&quot;</span>, entity.getNo());</span><br><span class="line">        values.put(<span class="string">&quot;_name&quot;</span>, entity.getName());</span><br><span class="line">        values.put(<span class="string">&quot;_sex&quot;</span>, entity.getSex());</span><br><span class="line">        values.put(<span class="string">&quot;_pnumber&quot;</span>, entity.getPhoneNumber());</span><br><span class="line">        <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> db.update(TABLE_NAME, values, whereClause, whereArgs);</span><br><span class="line">        db.close();</span><br><span class="line">        <span class="keyword">return</span> rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">delete</span><span class="params">(Contact entity)</span> &#123;</span><br><span class="line">        <span class="type">SQLiteDatabase</span> <span class="variable">db</span> <span class="operator">=</span> getWritableDatabase();</span><br><span class="line">        <span class="type">String</span> <span class="variable">whereClause</span> <span class="operator">=</span> <span class="string">&quot;_no = ?&quot;</span>;</span><br><span class="line">        String[] whereArgs = &#123; entity.getNo() &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> db.delete(TABLE_NAME, whereClause, whereArgs);</span><br><span class="line">        db.close();</span><br><span class="line">        <span class="keyword">return</span> rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Cursor <span class="title function_">query</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">SQLiteDatabase</span> <span class="variable">db</span> <span class="operator">=</span> getReadableDatabase();</span><br><span class="line">        <span class="keyword">return</span> db.query(TABLE_NAME, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wsine.west.exp7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.AlertDialog;</span><br><span class="line"><span class="keyword">import</span> android.content.DialogInterface;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.database.Cursor;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.AdapterView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.ListView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collection;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">MyDatabaseHelper</span> <span class="variable">myDatabaseHelper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MyDatabaseHelper</span>(MainActivity.<span class="built_in">this</span>);</span><br><span class="line">    <span class="keyword">private</span> List&lt;Map&lt;String, String&gt;&gt; dataList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;Map&lt;String, String&gt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        MySimpleAdapter mySimpleAdapter=updateListView();</span><br><span class="line">        <span class="keyword">final</span> ArrayList&lt;Map&lt;String, String&gt;&gt; mData=mySimpleAdapter.getmData();</span><br><span class="line"></span><br><span class="line">        <span class="type">Button</span> <span class="variable">btnAdd</span> <span class="operator">=</span> (Button)<span class="built_in">this</span>.findViewById(R.id.btn_add);</span><br><span class="line">        btnAdd.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, DetailActivity.class);</span><br><span class="line">                <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">                <span class="type">int</span> i=-<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (Map&lt;String, String&gt; m : mData)&#123;</span><br><span class="line">                    i++;</span><br><span class="line">                    Collection&lt;String&gt; valueCollection = m.values();</span><br><span class="line">                    <span class="keyword">final</span>  <span class="type">int</span>  <span class="variable">size</span> <span class="operator">=</span> valueCollection.size();</span><br><span class="line"></span><br><span class="line">                    List&lt;String&gt; valueList =  <span class="keyword">new</span>  <span class="title class_">ArrayList</span>&lt;String&gt;(valueCollection);</span><br><span class="line"></span><br><span class="line">                    String[] valueArray =  <span class="keyword">new</span>  <span class="title class_">String</span>[size];</span><br><span class="line">                    m.values().toArray(valueArray);</span><br><span class="line">                    bundle.putString(<span class="string">&quot;No&quot;</span>+i, valueArray[<span class="number">3</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">                bundle.putBoolean(<span class="string">&quot;AddorNot&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">                intent.putExtras(bundle);</span><br><span class="line">                <span class="type">int</span> <span class="variable">requestCode</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">                startActivityForResult(intent, requestCode);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="type">ListView</span> <span class="variable">lv</span> <span class="operator">=</span> (ListView)<span class="built_in">this</span>.findViewById(R.id.lv_contact);</span><br><span class="line">        lv.setOnItemClickListener(<span class="keyword">new</span> <span class="title class_">AdapterView</span>.OnItemClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onItemClick</span><span class="params">(AdapterView&lt;?&gt; parent, View view, <span class="type">int</span> position, <span class="type">long</span> id)</span> &#123;</span><br><span class="line">                <span class="type">ListView</span> <span class="variable">listView</span> <span class="operator">=</span> (ListView) parent;</span><br><span class="line">                HashMap&lt;String, String&gt; map = (HashMap&lt;String, String&gt;)listView.getItemAtPosition(position);</span><br><span class="line"></span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>, DetailActivity.class);</span><br><span class="line">                <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">                bundle.putBoolean(<span class="string">&quot;AddorNot&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">                <span class="type">int</span> i=-<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">for</span> (Map&lt;String, String&gt; m : mData)&#123;</span><br><span class="line">                    i++;</span><br><span class="line">                    Collection&lt;String&gt; valueCollection = m.values();</span><br><span class="line">                    <span class="keyword">final</span>  <span class="type">int</span>  <span class="variable">size</span> <span class="operator">=</span> valueCollection.size();</span><br><span class="line"></span><br><span class="line">                    List&lt;String&gt; valueList =  <span class="keyword">new</span>  <span class="title class_">ArrayList</span>&lt;String&gt;(valueCollection);</span><br><span class="line"></span><br><span class="line">                    String[] valueArray =  <span class="keyword">new</span>  <span class="title class_">String</span>[size];</span><br><span class="line">                    m.values().toArray(valueArray);</span><br><span class="line">                    bundle.putString(<span class="string">&quot;No&quot;</span>+i, valueArray[<span class="number">3</span>]);</span><br><span class="line">                    &#125;</span><br><span class="line">                bundle.putString(<span class="string">&quot;oldNo&quot;</span>, map.get(<span class="string">&quot;no&quot;</span>));</span><br><span class="line">                bundle.putString(<span class="string">&quot;oldName&quot;</span>, map.get(<span class="string">&quot;name&quot;</span>));</span><br><span class="line">                bundle.putString(<span class="string">&quot;oldSex&quot;</span>, map.get(<span class="string">&quot;sex&quot;</span>));</span><br><span class="line">                bundle.putString(<span class="string">&quot;oldPNumber&quot;</span>, map.get(<span class="string">&quot;pnumber&quot;</span>));</span><br><span class="line">                intent.putExtras(bundle);</span><br><span class="line">                <span class="type">int</span> <span class="variable">requestCode</span> <span class="operator">=</span> <span class="number">2</span>;</span><br><span class="line">                startActivityForResult(intent, requestCode);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        lv.setOnItemLongClickListener(<span class="keyword">new</span> <span class="title class_">AdapterView</span>.OnItemLongClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onItemLongClick</span><span class="params">(AdapterView&lt;?&gt; parent, View view, <span class="type">int</span> position, <span class="type">long</span> id)</span> &#123;</span><br><span class="line">                <span class="type">ListView</span> <span class="variable">listView</span> <span class="operator">=</span> (ListView) parent;</span><br><span class="line">                <span class="keyword">final</span> HashMap&lt;String, String&gt; map = (HashMap&lt;String, String&gt;)listView.getItemAtPosition(position);</span><br><span class="line">                AlertDialog.<span class="type">Builder</span> <span class="variable">builder</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AlertDialog</span>.Builder(MainActivity.<span class="built_in">this</span>);</span><br><span class="line">                builder.setMessage(<span class="string">&quot;确认删除吗？&quot;</span>);</span><br><span class="line">                builder.setTitle(<span class="string">&quot;提示&quot;</span>);</span><br><span class="line">                builder.setPositiveButton(<span class="string">&quot;确认&quot;</span>, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="type">int</span> i)</span> &#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            myDatabaseHelper.delete(<span class="keyword">new</span> <span class="title class_">Contact</span>(map.get(<span class="string">&quot;no&quot;</span>), map.get(<span class="string">&quot;name&quot;</span>), map.get(<span class="string">&quot;sex&quot;</span>),map.get(<span class="string">&quot;pnumber&quot;</span>)));</span><br><span class="line">                            updateListView();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                            Log.d(<span class="string">&quot;Hint&quot;</span>, <span class="string">&quot;Remove failed!&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                builder.setNegativeButton(<span class="string">&quot;取消&quot;</span>, <span class="keyword">new</span> <span class="title class_">DialogInterface</span>.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(DialogInterface dialogInterface, <span class="type">int</span> i)</span> &#123;</span><br><span class="line">                        <span class="comment">// nothing to do</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">                builder.show();</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setData</span><span class="params">(List&lt;Map&lt;String, String&gt;&gt; mDataList)</span> &#123;</span><br><span class="line">        Map&lt;String, String&gt; mData;</span><br><span class="line">        <span class="type">Cursor</span> <span class="variable">c</span> <span class="operator">=</span> myDatabaseHelper.query();</span><br><span class="line">        <span class="keyword">while</span> (c.moveToNext()) &#123;</span><br><span class="line">            mData = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;String, String&gt;();</span><br><span class="line">            mData.put(<span class="string">&quot;no&quot;</span>, c.getString(c.getColumnIndex(<span class="string">&quot;_no&quot;</span>)));</span><br><span class="line">            mData.put(<span class="string">&quot;name&quot;</span>, c.getString(c.getColumnIndex(<span class="string">&quot;_name&quot;</span>)));</span><br><span class="line">            mData.put(<span class="string">&quot;sex&quot;</span>, c.getString(c.getColumnIndex(<span class="string">&quot;_sex&quot;</span>)));</span><br><span class="line">            mData.put(<span class="string">&quot;pnumber&quot;</span>, c.getString(c.getColumnIndex(<span class="string">&quot;_pnumber&quot;</span>)));</span><br><span class="line">            mDataList.add(mData);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MySimpleAdapter <span class="title function_">updateListView</span><span class="params">()</span> &#123;</span><br><span class="line">        dataList.clear();</span><br><span class="line">        setData(dataList);</span><br><span class="line">        <span class="type">MySimpleAdapter</span> <span class="variable">mySimpleAdapter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">MySimpleAdapter</span>(<span class="built_in">this</span>, dataList, R.layout.contact_item,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">String</span>[] &#123; <span class="string">&quot;no&quot;</span>, <span class="string">&quot;name&quot;</span>,<span class="string">&quot;sex&quot;</span>, <span class="string">&quot;pnumber&quot;</span> &#125;,</span><br><span class="line">                <span class="keyword">new</span> <span class="title class_">int</span>[] &#123; R.id.contact_no, R.id.contact_name,R.id.contact_sex, R.id.contact_phonenumber &#125;);</span><br><span class="line">        <span class="type">ListView</span> <span class="variable">lv</span> <span class="operator">=</span> (ListView)<span class="built_in">this</span>.findViewById(R.id.lv_contact);</span><br><span class="line">        lv.setAdapter(mySimpleAdapter);</span><br><span class="line">        <span class="keyword">return</span>  mySimpleAdapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="type">int</span> resultCode, Intent data)</span> &#123;</span><br><span class="line">        Log.d(<span class="string">&quot;Hint&quot;</span>, <span class="string">&quot;requestCode = &quot;</span> + requestCode);</span><br><span class="line">        Log.d(<span class="string">&quot;Hint&quot;</span>, <span class="string">&quot;resultCode = &quot;</span> + resultCode);</span><br><span class="line">        <span class="keyword">if</span> (resultCode == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        String oldNo= data.getStringExtra(<span class="string">&quot;_oldNo&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">newNo</span> <span class="operator">=</span> data.getStringExtra(<span class="string">&quot;_newNo&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">newName</span> <span class="operator">=</span> data.getStringExtra(<span class="string">&quot;_newName&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">newSex</span> <span class="operator">=</span> data.getStringExtra(<span class="string">&quot;_newSex&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">newPNumber</span> <span class="operator">=</span> data.getStringExtra(<span class="string">&quot;_newPNumber&quot;</span>);</span><br><span class="line">        <span class="keyword">switch</span> (requestCode) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                myDatabaseHelper.insert(<span class="keyword">new</span> <span class="title class_">Contact</span>(newNo, newName,newSex, newPNumber));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                <span class="type">int</span> i=myDatabaseHelper.update(<span class="keyword">new</span> <span class="title class_">Contact</span>(newNo, newName,newSex, newPNumber),oldNo);</span><br><span class="line">                Toast.makeText(<span class="built_in">this</span>,<span class="string">&quot;&quot;</span>+i+<span class="string">&quot;个修改成功&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        updateListView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> &#123;</span><br><span class="line">        <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.menu_main, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> &#123;</span><br><span class="line">        <span class="comment">// Handle action bar item clicks here. The action bar will</span></span><br><span class="line">        <span class="comment">// automatically handle clicks on the Home/Up button, so long</span></span><br><span class="line">        <span class="comment">// as you specify a parent activity in AndroidManifest.xml.</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> item.getItemId();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//noinspection SimplifiableIfStatement</span></span><br><span class="line">        <span class="keyword">if</span> (id == R.id.action_settings) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.wsine.west.exp7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.KeyEvent;</span><br><span class="line"><span class="keyword">import</span> android.view.Menu;</span><br><span class="line"><span class="keyword">import</span> android.view.MenuItem;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">DetailActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.stu_info);</span><br><span class="line"></span><br><span class="line">        <span class="type">TextView</span> <span class="variable">tvTitle</span> <span class="operator">=</span> (TextView)<span class="built_in">this</span>.findViewById(R.id.detail_title);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">EditText</span> <span class="variable">edtNo</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(R.id.Et_no);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">EditText</span> <span class="variable">edtName</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(R.id.Et_name);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">EditText</span> <span class="variable">edtSex</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(R.id.Et_sex);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">EditText</span> <span class="variable">edtPNumber</span> <span class="operator">=</span> (EditText)<span class="built_in">this</span>.findViewById(R.id.Et_phone);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">final</span> <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> getIntent().getExtras();</span><br><span class="line">        <span class="keyword">final</span> <span class="type">boolean</span> <span class="variable">addOrNot</span> <span class="operator">=</span> bundle.getBoolean(<span class="string">&quot;AddorNot&quot;</span>);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">int</span>[] data=bundle.getIntArray(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (addOrNot) &#123;</span><br><span class="line">            tvTitle.setText(getResources().getString(R.string.titleAdd));</span><br><span class="line">            edtNo.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            edtName.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            edtSex.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            edtPNumber.setText(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            tvTitle.setText(getResources().getString(R.string.titleModify));</span><br><span class="line">            edtNo.setText(bundle.getString(<span class="string">&quot;oldNo&quot;</span>));</span><br><span class="line">            edtName.setText(bundle.getString(<span class="string">&quot;oldName&quot;</span>));</span><br><span class="line">            edtSex.setText(bundle.getString(<span class="string">&quot;oldSex&quot;</span>));</span><br><span class="line">            edtPNumber.setText(bundle.getString(<span class="string">&quot;oldPNumber&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">Button</span> <span class="variable">btnConfirm</span> <span class="operator">=</span> (Button)<span class="built_in">this</span>.findViewById(R.id.btn_confirm);</span><br><span class="line">        btnConfirm.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View view)</span> &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">newNo</span> <span class="operator">=</span> edtNo.getText().toString();</span><br><span class="line">                <span class="type">String</span> <span class="variable">newName</span> <span class="operator">=</span> edtName.getText().toString();</span><br><span class="line">                <span class="type">String</span> <span class="variable">newSex</span> <span class="operator">=</span> edtSex.getText().toString();</span><br><span class="line">                <span class="type">String</span> <span class="variable">newPNumber</span> <span class="operator">=</span> edtPNumber.getText().toString();</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>();</span><br><span class="line">                intent.putExtra(<span class="string">&quot;_oldNo&quot;</span>,bundle.getString(<span class="string">&quot;oldNo&quot;</span>));</span><br><span class="line">                intent.putExtra(<span class="string">&quot;_newNo&quot;</span>, newNo);</span><br><span class="line">                intent.putExtra(<span class="string">&quot;_newName&quot;</span>, newName);</span><br><span class="line">                intent.putExtra(<span class="string">&quot;_newSex&quot;</span>, newSex);</span><br><span class="line">                intent.putExtra(<span class="string">&quot;_newPNumber&quot;</span>, newPNumber);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;bundle.getString(<span class="string">&quot;No&quot;</span>+i)!=<span class="literal">null</span>;i++)</span><br><span class="line">                &#123;   System.out.println(<span class="string">&quot;第&quot;</span>+i+<span class="string">&quot;行&quot;</span>);</span><br><span class="line">                    System.out.println(bundle.getString(<span class="string">&quot;No&quot;</span>+i));</span><br><span class="line">                    System.out.println(newNo);</span><br><span class="line">                    <span class="keyword">if</span> (newNo.isEmpty()</span><br><span class="line">                            || newPNumber.isEmpty()</span><br><span class="line">                            || newName.isEmpty()) &#123;</span><br><span class="line">                        Toast.makeText(getApplicationContext(), getResources().getString(R.string.msgWarning),Toast.LENGTH_SHORT).show();</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span> <span class="keyword">if</span>(newNo.equals(bundle.getString(<span class="string">&quot;No&quot;</span>+i))&amp;&amp;!newNo.equals(bundle.getString(<span class="string">&quot;oldNo&quot;</span>)))</span><br><span class="line">                    &#123;</span><br><span class="line">                        Toast.makeText(getApplicationContext(), getResources().getString(R.string.msgWarning2),Toast.LENGTH_SHORT).show();</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">int</span> <span class="variable">resultCode</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (addOrNot)   resultCode = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span>            resultCode = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">                DetailActivity.<span class="built_in">this</span>.setResult(resultCode, intent);</span><br><span class="line">                DetailActivity.<span class="built_in">this</span>.finish();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onKeyDown</span><span class="params">(<span class="type">int</span> keyCode, KeyEvent event)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(keyCode == KeyEvent.KEYCODE_BACK) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">resultCode</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            DetailActivity.<span class="built_in">this</span>.setResult(resultCode);</span><br><span class="line">            DetailActivity.<span class="built_in">this</span>.finish();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> &#123;</span><br><span class="line">        <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">        getMenuInflater().inflate(R.menu.menu_detail, menu);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">onOptionsItemSelected</span><span class="params">(MenuItem item)</span> &#123;</span><br><span class="line">        <span class="comment">// Handle action bar item clicks here. The action bar will</span></span><br><span class="line">        <span class="comment">// automatically handle clicks on the Home/Up button, so long</span></span><br><span class="line">        <span class="comment">// as you specify a parent activity in AndroidManifest.xml.</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">id</span> <span class="operator">=</span> item.getItemId();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//noinspection SimplifiableIfStatement</span></span><br><span class="line">        <span class="keyword">if</span> (id == R.id.action_settings) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onOptionsItemSelected(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;resources&gt;</span><br><span class="line">    &lt;string name=<span class="string">&quot;app_name&quot;</span>&gt;Exp7&lt;/string&gt;</span><br><span class="line"></span><br><span class="line">    &lt;string name=<span class="string">&quot;hello_world&quot;</span>&gt;Hello world!&lt;/string&gt;</span><br><span class="line">    &lt;string name=<span class="string">&quot;action_settings&quot;</span>&gt;Settings&lt;/string&gt;</span><br><span class="line">    &lt;string name=<span class="string">&quot;title_activity_detail&quot;</span>&gt;DetailActivity&lt;/string&gt;</span><br><span class="line"></span><br><span class="line">    &lt;string name=<span class="string">&quot;add&quot;</span>&gt;Add&lt;/string&gt;</span><br><span class="line"></span><br><span class="line">    &lt;string name=<span class="string">&quot;no&quot;</span>&gt;学号:&lt;/string&gt;</span><br><span class="line">    &lt;string name=<span class="string">&quot;name&quot;</span>&gt;姓名:&lt;/string&gt;</span><br><span class="line">    &lt;string name=<span class="string">&quot;phone&quot;</span>&gt;手机:&lt;/string&gt;</span><br><span class="line">    &lt;string name=<span class="string">&quot;confirm&quot;</span>&gt;确定&lt;/string&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;string name=<span class="string">&quot;titleAdd&quot;</span>&gt;添加联系人&lt;/string&gt;</span><br><span class="line">    &lt;string name=<span class="string">&quot;titleModify&quot;</span>&gt;修改联系人&lt;/string&gt;</span><br><span class="line"></span><br><span class="line">    &lt;string name=<span class="string">&quot;msgWarning&quot;</span>&gt;您输入的内容为空&lt;/string&gt;</span><br><span class="line">    &lt;string name=<span class="string">&quot;msgWarning2&quot;</span>&gt;你输入的学号重复&lt;/string&gt;</span><br><span class="line">&lt;/resources&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>源码下载：<a href="https://download.csdn.net/download/qq_45808700/19525532">https://download.csdn.net/download/qq_45808700&#x2F;19525532</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Android-数据库编程SQLite&quot;&gt;&lt;a href=&quot;#Android-数据库编程SQLite&quot; class=&quot;headerlink&quot; title=&quot;Android 数据库编程SQLite&quot;&gt;&lt;/a&gt;Android 数据库编程SQLite&lt;/h1&gt;&lt;h2 i</summary>
      
    
    
    
    <category term="软件项目" scheme="https://pistachiout.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="Android项目" scheme="https://pistachiout.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/Android%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8E%E5%BC%82%E6%AD%A5%E6%93%8D%E4%BD%9C%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E8%BD%AE%E6%92%AD/"/>
    <id>https://pistachiout.github.io/wiki/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/Android%E5%A4%9A%E7%BA%BF%E7%A8%8B%E4%B8%8E%E5%BC%82%E6%AD%A5%E6%93%8D%E4%BD%9C%E5%AE%9E%E7%8E%B0%E5%9B%BE%E7%89%87%E8%87%AA%E5%8A%A8%E8%BD%AE%E6%92%AD/</id>
    <published>2023-02-15T02:19:11.860Z</published>
    <updated>2023-02-15T02:19:12.447Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、实验内容"><a href="#一、实验内容" class="headerlink" title="一、实验内容"></a>一、实验内容</h2><p>1.利用Thread和Handler实现异步操作；<br>2.利用AsyncTast实现异步操作；</p><h2 id="1-利用Thread和Handler实现异步操作"><a href="#1-利用Thread和Handler实现异步操作" class="headerlink" title="1. 利用Thread和Handler实现异步操作"></a>1. 利用Thread和Handler实现异步操作</h2><p>（1）新建一个安卓工程，在默认的layout主界面中添加一个按钮(Button)，一个图片显示控件（ImageView）。<br>（2）将实验四资源中的所有图片导入到工程的drawable目录下。<br>（3）参考下面的代码构建图片资源列表和计数器变量。<br><img src="https://img-blog.csdnimg.cn/20210602224713703.png" alt="在这里插入图片描述"><br>（4）为按钮添加点击事件，当点击按钮时，启动一个新线程(传入一个handler)，并每隔100毫秒发送一条空信息，信息的what标识为0x123。<br>（5）定义一个handler用于接受线程的信息，并在handleMessage方法中处理信息，参考下列代码循环更新ImageView中的内容，实现动画效果。<br><img src="https://img-blog.csdnimg.cn/20210602224724248.png" alt="在这里插入图片描述"><br>（6）测试上述功能。<br><img src="https://img-blog.csdnimg.cn/20210602230333272.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210602230337182.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/button&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;200dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;Button&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/imageView1&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:scaleType=<span class="string">&quot;fitXY&quot;</span></span><br><span class="line">        tools:ignore=<span class="string">&quot;MissingConstraints&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/imageView&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;300px&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;300px&quot;</span></span><br><span class="line">       android:scaleType=<span class="string">&quot;fitXY&quot;</span></span><br><span class="line">        tools:ignore=<span class="string">&quot;MissingConstraints&quot;</span> /&gt;</span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">images</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">int</span> imgids[]=<span class="keyword">new</span> <span class="title class_">int</span>[]&#123;<span class="comment">//图片资源列表</span></span><br><span class="line">            R.drawable.p1,R.drawable.p2,R.drawable.p3,R.drawable.p4,</span><br><span class="line">            R.drawable.p5,R.drawable.p6,R.drawable.p7</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.view.LayoutInflater;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.viewpager.widget.PagerAdapter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ViewPagerAdapter</span> <span class="keyword">extends</span> <span class="title class_">PagerAdapter</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line">    <span class="keyword">private</span> LayoutInflater layoutInflater;</span><br><span class="line">    <span class="keyword">private</span>  <span class="type">int</span>[] datas;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ViewPagerAdapter</span><span class="params">(Context context,<span class="type">int</span>[] datas)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">this</span>.context=context;</span><br><span class="line">        <span class="built_in">this</span>.datas=datas;</span><br><span class="line">        layoutInflater=LayoutInflater.from(context);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCount</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> datas.length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isViewFromObject</span><span class="params">(<span class="meta">@NonNull</span> View view, <span class="meta">@NonNull</span> Object object)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> view==object;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">destroyItem</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup container, <span class="type">int</span> position, <span class="meta">@NonNull</span> Object object)</span> &#123;</span><br><span class="line">        container.removeView((View) object);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">instantiateItem</span><span class="params">(<span class="meta">@NonNull</span> ViewGroup container, <span class="type">int</span> position)</span> &#123;</span><br><span class="line">        View layout=layoutInflater.inflate(R.layout.viewpager_item,<span class="literal">null</span>);</span><br><span class="line">        ImageView iv= layout.findViewById(R.id.imageView);</span><br><span class="line">        iv.setImageResource(datas[position]);</span><br><span class="line">        container.addView(layout);</span><br><span class="line">        <span class="keyword">return</span> layout;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.NonNull;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> androidx.viewpager.widget.ViewPager;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.os.Handler;</span><br><span class="line"><span class="keyword">import</span> android.os.Message;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageButton;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.Executors;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ScheduledExecutorService;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] imgids= com.example.myapplication8.images.imgids;</span><br><span class="line">    <span class="keyword">private</span> ImageView imageView;</span><br><span class="line">    <span class="keyword">public</span> Button btn;</span><br><span class="line">    <span class="type">int</span> imgstart=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> ScheduledExecutorService scheduledExecutorService;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Handler</span> <span class="variable">handler</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Handler</span>()</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">handleMessage</span><span class="params">(<span class="meta">@NonNull</span> Message msg)</span> &#123;</span><br><span class="line">            <span class="keyword">switch</span> (msg.what)</span><br><span class="line">            &#123; <span class="keyword">case</span> <span class="number">0x123</span>:</span><br><span class="line">                imageView.setImageResource(imgids[imgstart++%<span class="number">7</span>]);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        imageView=findViewById(R.id.imageView1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onStart</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onStart();</span><br><span class="line">        btn = findViewById(R.id.button);</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                scheduledExecutorService = Executors.newSingleThreadScheduledExecutor();</span><br><span class="line">                scheduledExecutorService.scheduleAtFixedRate(<span class="keyword">new</span> <span class="title class_">Runnable</span>() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span> &#123;</span><br><span class="line">                        handler.sendEmptyMessage(<span class="number">0x123</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, <span class="number">0</span>, <span class="number">100</span>, TimeUnit.MILLISECONDS);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onStop</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onStop();</span><br><span class="line">        <span class="keyword">if</span> (scheduledExecutorService != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            scheduledExecutorService.shutdown();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实现过程即通过 scheduledExecutorService的scheduleAtFixedRate（）来利用hander的sendEmptyMessage（）方法传递what标识符，然后在handleMessage（）中switch判断标识符，并修改imageView的图片。</p><h2 id="2-利用AsyncTast实现异步操作"><a href="#2-利用AsyncTast实现异步操作" class="headerlink" title="2. 利用AsyncTast实现异步操作"></a>2. 利用AsyncTast实现异步操作</h2><p>（1）新建另一个安卓工程，在默认的layout主界面中添加一个按钮(Button)，一个图片显示控件（ImageView）。<br>（2）参考课堂教授的方法，使用AsyncTast实现类似的动画效果。<br>（3）测试上述功能，比较两种方法在代码构造上的优劣。<br><img src="https://img-blog.csdnimg.cn/2021060223034721.png" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20210602230349869.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/button&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;200dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;Button&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/imageView1&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:scaleType=<span class="string">&quot;fitXY&quot;</span></span><br><span class="line">        tools:ignore=<span class="string">&quot;MissingConstraints&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.AsyncTask;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.text.PrecomputedText;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span>[] imgids= &#123;<span class="comment">//图片资源列表</span></span><br><span class="line">            R.drawable.p1,R.drawable.p2,R.drawable.p3,R.drawable.p4,</span><br><span class="line">            R.drawable.p5,R.drawable.p6,R.drawable.p7</span><br><span class="line">    &#125;;;</span><br><span class="line">    <span class="keyword">private</span> ImageView imageView;</span><br><span class="line">    <span class="keyword">public</span> Button btn;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        imageView=findViewById(R.id.imageView1);</span><br><span class="line">        btn=findViewById(R.id.button);</span><br><span class="line">        btn.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">            Task task=<span class="keyword">new</span> <span class="title class_">Task</span>();</span><br><span class="line">            task.execute();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">Task</span> <span class="keyword">extends</span> <span class="title class_">AsyncTask</span>&lt;Void,Integer,Boolean&gt;</span><br><span class="line">   &#123;    <span class="type">int</span> imgstart;</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPreExecute</span><span class="params">()</span> &#123;</span><br><span class="line">           <span class="built_in">super</span>.onPreExecute();</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="keyword">protected</span> Boolean <span class="title function_">doInBackground</span><span class="params">(Void... params)</span>&#123;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">try</span> &#123;</span><br><span class="line">               <span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">               &#123;</span><br><span class="line">                   Thread.sleep(<span class="number">100</span>);</span><br><span class="line">                   imgstart++;</span><br><span class="line">                   imgstart=imgstart%<span class="number">7</span>;</span><br><span class="line">                   publishProgress(imgstart);</span><br><span class="line">                   <span class="keyword">if</span>(imgstart==<span class="number">8</span>)</span><br><span class="line">                   &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">           &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</span><br><span class="line">               e.printStackTrace();</span><br><span class="line">           &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onProgressUpdate</span><span class="params">(Integer... values)</span> &#123;</span><br><span class="line">           <span class="built_in">super</span>.onProgressUpdate(values);</span><br><span class="line">           imageView.setImageResource(imgids[values[<span class="number">0</span>]]);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPostExecute</span><span class="params">(Boolean bollean)</span> &#123;</span><br><span class="line">           <span class="built_in">super</span>.onPostExecute(bollean);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四：-实验总结："><a href="#四：-实验总结：" class="headerlink" title="四： 实验总结："></a>四： 实验总结：</h2><p>在本实验中，我对多线程与异步操作的实现有了基本了解，并知道了2种线程的实现方法，即利用handle与 scheduledExecutorService和继承AsyncTask的方法，我认为这两种方法都比较好用，但AsyncTask虽然结构比较清晰，但要注意参数配置，还必须在onProgressUpdate（）中才能对Android的UI进行更新，容易出错，而handle利用时虽然代码比较复杂，但实验实现时不易出错。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、实验内容&quot;&gt;&lt;a href=&quot;#一、实验内容&quot; class=&quot;headerlink&quot; title=&quot;一、实验内容&quot;&gt;&lt;/a&gt;一、实验内容&lt;/h2&gt;&lt;p&gt;1.利用Thread和Handler实现异步操作；&lt;br&gt;2.利用AsyncTast实现异步操作；&lt;/p&gt;
</summary>
      
    
    
    
    <category term="软件项目" scheme="https://pistachiout.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="Android项目" scheme="https://pistachiout.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/Android%E4%BD%BF%E7%94%A8Service%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    <id>https://pistachiout.github.io/wiki/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/Android%E4%BD%BF%E7%94%A8Service%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/</id>
    <published>2023-02-15T02:19:05.364Z</published>
    <updated>2023-02-15T02:19:05.970Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、实验内容"><a href="#一、实验内容" class="headerlink" title="一、实验内容"></a>一、实验内容</h2><ol><li>构建应用界面布局<br>（1）新建一个安卓工程，在默认的layout界面中添加一个按钮(button)，如下图所示：<br><img src="https://img-blog.csdnimg.cn/20210602222611830.png" alt="在这里插入图片描述"><br>2）构建相应的java代码，添加按钮的响应事件，跳转至另一个界面musicplayer.xml，对应的activity名称为musicPlayer.java，在其界面中添加三个imagebutton，分别对应播放器的播放、退出（后台播放）、退出（停止播放）操作，如下图所示：<br><img src="https://img-blog.csdnimg.cn/20210602222623218.png" alt="在这里插入图片描述"></li><li>构建Service组件<br>（1）新建一个MusicService类继承Service，通过重写onStartCommand()、onDestroy()方法实现对MediaPlayer播放器的控制。</li><li>实现简单的音乐播放器<br>（1）完善musicPlayer.java中的代码，通过startService方法启动MusicService。并实现各个按钮的功能。其中：<br>播放按钮：点击按钮开始播放音乐（播放固定音乐文件for-love.mp3，请事先将文件导入到项目的asset或者raw目录内），再次点击按钮暂停播放。<br>退出（后台播放）：点击按钮退出musicplayer界面（回到初始界面），但此时后台仍在播放音乐。<br>退出（停止播放）：点击按钮退出musicplayer界面（回到初始界面），同时停止播放音乐。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/start&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;19dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;19dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;23dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;打开播放器&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.musicplayer&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ImageButton</span><br><span class="line">        android:id=<span class="string">&quot;@+id/btn_play&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;4dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;4dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;16dp&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:srcCompat=<span class="string">&quot;@android:drawable/ic_media_play&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ImageButton</span><br><span class="line">        android:id=<span class="string">&quot;@+id/btn_return&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        app:layout_constraintStart_toEndOf=<span class="string">&quot;@+id/btn_play&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;@+id/btn_play&quot;</span></span><br><span class="line">        app:srcCompat=<span class="string">&quot;@android:drawable/ic_menu_revert&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ImageButton</span><br><span class="line">        android:id=<span class="string">&quot;@+id/btn_stop&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;10dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;10dp&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toBottomOf=<span class="string">&quot;@+id/btn_return&quot;</span></span><br><span class="line">        app:layout_constraintStart_toEndOf=<span class="string">&quot;@+id/btn_return&quot;</span></span><br><span class="line">        app:srcCompat=<span class="string">&quot;@android:drawable/ic_lock_power_off&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">bt</span> <span class="operator">=</span> findViewById(R.id.start);</span><br><span class="line">        bt.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>,musicplayer.class);</span><br><span class="line">                startActivity(intent);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.ImageButton;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">musicplayer</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.musicplayer);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">Intent</span>(musicplayer.<span class="built_in">this</span>,MusicService.class);</span><br><span class="line">        ImageButton btn_play=(ImageButton) findViewById(R.id.btn_play);</span><br><span class="line">        btn_play.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>( MusicService.isplay==<span class="literal">false</span>)</span><br><span class="line">                &#123;startService(intent);</span><br><span class="line">                    Toast.makeText(getApplicationContext(), <span class="string">&quot;正在播放&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;stopService(intent);</span><br><span class="line">                    Toast.makeText(getApplicationContext(), <span class="string">&quot;暂停播放&quot;</span>, Toast.LENGTH_LONG).show();&#125;</span><br><span class="line">        &#125;&#125;);</span><br><span class="line"></span><br><span class="line">        ImageButton btn_return=(ImageButton) findViewById(R.id.btn_return);</span><br><span class="line">        btn_return.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>( MusicService.isplay==<span class="literal">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="type">Intent</span> <span class="variable">intent2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>( musicplayer.<span class="built_in">this</span>,MainActivity.class);</span><br><span class="line">                    startActivity(intent2);</span><br><span class="line">                    Toast.makeText(getApplicationContext(), <span class="string">&quot;正在播放&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;&#125;);</span><br><span class="line"></span><br><span class="line">        ImageButton btn_stop=(ImageButton) findViewById(R.id.btn_stop);</span><br><span class="line">        btn_stop.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>( MusicService.isplay==<span class="literal">true</span>)</span><br><span class="line">                &#123;stopService(intent);</span><br><span class="line">                <span class="type">Intent</span> <span class="variable">intent1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>( musicplayer.<span class="built_in">this</span>,MainActivity.class);</span><br><span class="line">                    startActivity(intent1);</span><br><span class="line">                    Toast.makeText(getApplicationContext(), <span class="string">&quot;停止播放&quot;</span>, Toast.LENGTH_LONG).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication7;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Service;</span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.media.MediaPlayer;</span><br><span class="line"><span class="keyword">import</span> android.os.IBinder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MusicService</span> <span class="keyword">extends</span> <span class="title class_">Service</span> &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="type">boolean</span> isplay;</span><br><span class="line">    MediaPlayer player;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MusicService</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">()</span> &#123;</span><br><span class="line">        player = MediaPlayer.create(<span class="built_in">this</span>,R.raw.for_love);</span><br><span class="line">        <span class="built_in">super</span>.onCreate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">onStartCommand</span><span class="params">(Intent intent, <span class="type">int</span> flags, <span class="type">int</span> startId)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(!player.isPlaying())</span><br><span class="line">        &#123;player.start();</span><br><span class="line">        isplay=player.isPlaying();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.onStartCommand(intent, flags, startId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">        player.stop();</span><br><span class="line">        isplay=player.isPlaying();</span><br><span class="line">        player.release();</span><br><span class="line">        <span class="built_in">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> IBinder <span class="title function_">onBind</span><span class="params">(Intent intent)</span> &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> Return the communication channel to the service.</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UnsupportedOperationException</span>(<span class="string">&quot;Not yet implemented&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>MusicService：通过重写OnCreate（），onDestroy(),onStartCommand()实现后台service的music播放</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;manifest xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    <span class="keyword">package</span>=<span class="string">&quot;com.example.myapplication7&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;application</span><br><span class="line">        android:allowBackup=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:icon=<span class="string">&quot;@mipmap/ic_launcher&quot;</span></span><br><span class="line">        android:label=<span class="string">&quot;@string/app_name&quot;</span></span><br><span class="line">        android:roundIcon=<span class="string">&quot;@mipmap/ic_launcher_round&quot;</span></span><br><span class="line">        android:supportsRtl=<span class="string">&quot;true&quot;</span></span><br><span class="line">        android:theme=<span class="string">&quot;@style/Theme.MyApplication7&quot;</span>&gt;</span><br><span class="line">        &lt;service</span><br><span class="line">            android:name=<span class="string">&quot;.MusicService&quot;</span></span><br><span class="line">            android:enabled=<span class="string">&quot;true&quot;</span></span><br><span class="line">            android:exported=<span class="string">&quot;true&quot;</span>&gt;&lt;/service&gt;</span><br><span class="line"></span><br><span class="line">        &lt;activity android:name=<span class="string">&quot;.musicplayer&quot;</span> /&gt;</span><br><span class="line">        &lt;activity android:name=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line">            &lt;intent-filter&gt;</span><br><span class="line">                &lt;action android:name=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">                &lt;category android:name=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span><br><span class="line">            &lt;/intent-filter&gt;</span><br><span class="line">        &lt;/activity&gt;</span><br><span class="line">    &lt;/application&gt;</span><br><span class="line"></span><br><span class="line">&lt;/manifest&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、实验内容&quot;&gt;&lt;a href=&quot;#一、实验内容&quot; class=&quot;headerlink&quot; title=&quot;一、实验内容&quot;&gt;&lt;/a&gt;一、实验内容&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;构建应用界面布局&lt;br&gt;（1）新建一个安卓工程，在默认的layout界面中添加一个按钮(butt</summary>
      
    
    
    
    <category term="软件项目" scheme="https://pistachiout.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="Android项目" scheme="https://pistachiout.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/Android%20UI%E6%8E%A7%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://pistachiout.github.io/wiki/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/Android%20UI%E6%8E%A7%E4%BB%B6%E7%9A%84%E4%BD%BF%E7%94%A8/</id>
    <published>2023-02-15T02:18:58.555Z</published>
    <updated>2023-02-15T02:18:59.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-UI控件的使用"><a href="#Android-UI控件的使用" class="headerlink" title="Android UI控件的使用"></a>Android UI控件的使用</h1><h2 id="一、实验目的"><a href="#一、实验目的" class="headerlink" title="一、实验目的"></a>一、实验目的</h2><p>1.掌握Android基本布局的使用方法；<br>2.掌握常用Android UI控件的使用方法；<br>3.创建相应的Android应用程序实现各类控件的功能；</p><h2 id="二、实验要求"><a href="#二、实验要求" class="headerlink" title="二、实验要求"></a>二、实验要求</h2><p>1.掌握线性布局(Linearlayout)和相对布局(Relativelayout)的使用方法；<br>2.掌握文本框（TextView）、按钮（Button）、EditText（可编辑文本）和CheckBox（复选框）控件的使用方法；<br>3.掌握下拉列表（Spinner）控件的使用方法；<br>4.掌握列表（ListView）控件的使用方法；<br>5.掌握进度条（ProgressBar）控件的使用方法；<br>6.掌握缩放按钮（ZoomButton&amp;ZoomControl）控件的使用方法；<br>7.独立完成实验内容，完成实验报告。</p><h2 id="三、实验内容"><a href="#三、实验内容" class="headerlink" title="三、实验内容"></a>三、实验内容</h2><h2 id="1-掌握线性布局-linearlayout-和相对布局-relativelayout-的使用方法"><a href="#1-掌握线性布局-linearlayout-和相对布局-relativelayout-的使用方法" class="headerlink" title="1. 掌握线性布局(linearlayout)和相对布局(relativelayout)的使用方法"></a>1. 掌握线性布局(linearlayout)和相对布局(relativelayout)的使用方法</h2><p>（1）新建一个安卓工程，在默认的layout界面中设置布局为线性布局水平，在布局中添加5个按钮控件和一个线性布局垂直控件，其布局如下图所示：<br><img src="https://img-blog.csdnimg.cn/2021060221280768.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:showDividers=<span class="string">&quot;middle&quot;</span></span><br><span class="line">    android:dividerPadding=<span class="string">&quot;10dp&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;match_parent&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:layout_width=<span class="string">&quot;fill_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">            android:layout_weight=<span class="string">&quot;1&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;Button&quot;</span></span><br><span class="line">            app:backgroundTint=<span class="string">&quot;#757171&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:layout_width=<span class="string">&quot;fill_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">            android:layout_weight=<span class="string">&quot;1&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;Button&quot;</span></span><br><span class="line">            app:backgroundTint=<span class="string">&quot;#757171&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;LinearLayout</span><br><span class="line">            android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">            android:layout_weight=<span class="string">&quot;2&quot;</span></span><br><span class="line">            android:orientation=<span class="string">&quot;horizontal&quot;</span> &gt;</span><br><span class="line"></span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">                android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">                android:layout_weight=<span class="string">&quot;2&quot;</span></span><br><span class="line">                android:text=<span class="string">&quot;Button&quot;</span></span><br><span class="line"></span><br><span class="line">                app:backgroundTint=<span class="string">&quot;#757171&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">                android:layout_height=<span class="string">&quot;fill_parent&quot;</span></span><br><span class="line">                android:layout_weight=<span class="string">&quot;2&quot;</span></span><br><span class="line">                android:text=<span class="string">&quot;Button&quot;</span></span><br><span class="line"></span><br><span class="line">                app:backgroundTint=<span class="string">&quot;#757171&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">            &lt;Button</span><br><span class="line">                android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">                android:layout_height=<span class="string">&quot;fill_parent&quot;</span></span><br><span class="line">                android:layout_weight=<span class="string">&quot;3&quot;</span></span><br><span class="line">                android:text=<span class="string">&quot;Button&quot;</span></span><br><span class="line"></span><br><span class="line">                app:backgroundTint=<span class="string">&quot;#757171&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><p>（2）其中水平线性布局中的两个按钮和垂直线性布局的高度比例为：1:1:2，垂直线性布局内三个按钮的宽度比例为：2:2:3。<br>（3）新建一个相对布局界面，在其中添加5个ImageView控件，使用相对布局属性使其形成如下图所示的梅花型图案（其中中间控件位于界面居中位置），各个控件所使用的图片资源见实验资源文件，需要先导入到工程项目的drawable中再使用。<br><img src="https://img-blog.csdnimg.cn/20210602212817237.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity2&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/imageView&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginEnd=<span class="string">&quot;56dp&quot;</span></span><br><span class="line">        android:layout_marginRight=<span class="string">&quot;56dp&quot;</span></span><br><span class="line">        android:layout_marginBottom=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toBottomOf=<span class="string">&quot;@+id/imageView3&quot;</span></span><br><span class="line">        app:layout_constraintEnd_toEndOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintStart_toEndOf=<span class="string">&quot;@+id/imageView7&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;@+id/imageView2&quot;</span></span><br><span class="line">        app:srcCompat=<span class="string">&quot;@drawable/child&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/imageView2&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;187dp&quot;</span></span><br><span class="line">        android:layout_marginEnd=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginRight=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toTopOf=<span class="string">&quot;@+id/imageView7&quot;</span></span><br><span class="line">        app:layout_constraintEnd_toEndOf=<span class="string">&quot;@+id/imageView&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;@+id/imageView4&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:srcCompat=<span class="string">&quot;@drawable/arancia_fruit&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/imageView3&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginEnd=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginRight=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginBottom=<span class="string">&quot;244dp&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toBottomOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintEnd_toEndOf=<span class="string">&quot;@+id/imageView&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;@+id/imageView4&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/imageView7&quot;</span></span><br><span class="line">        app:srcCompat=<span class="string">&quot;@drawable/dress2&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/imageView4&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;55dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;55dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        android:layout_marginBottom=<span class="string">&quot;100dp&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toBottomOf=<span class="string">&quot;@+id/imageView3&quot;</span></span><br><span class="line">        app:layout_constraintEnd_toStartOf=<span class="string">&quot;@+id/imageView7&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;@+id/imageView2&quot;</span></span><br><span class="line">        app:srcCompat=<span class="string">&quot;@drawable/fitness_ball&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;ImageView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/imageView7&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">        android:layout_centerInParent=<span class="string">&quot;true&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toTopOf=<span class="string">&quot;@+id/imageView3&quot;</span></span><br><span class="line">        app:layout_constraintEnd_toStartOf=<span class="string">&quot;@+id/imageView&quot;</span></span><br><span class="line">        app:layout_constraintStart_toEndOf=<span class="string">&quot;@+id/imageView4&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/imageView2&quot;</span></span><br><span class="line">        app:srcCompat=<span class="string">&quot;@android:mipmap/sym_def_app_icon&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><h2 id="2-掌握文本框（TextView）、按钮（Button）、EditText（可编辑文本）和CheckBox（复选框）控件的使用方法"><a href="#2-掌握文本框（TextView）、按钮（Button）、EditText（可编辑文本）和CheckBox（复选框）控件的使用方法" class="headerlink" title="2. 掌握文本框（TextView）、按钮（Button）、EditText（可编辑文本）和CheckBox（复选框）控件的使用方法"></a>2. 掌握文本框（TextView）、按钮（Button）、EditText（可编辑文本）和CheckBox（复选框）控件的使用方法</h2><p>（1）新建一个安卓工程，在默认的layout界面中分别添加一个文本框（TextView）、按钮（Button）和EditText（可编辑文本）控件。<br>（2）TextView包含了一段提示文字，作为另一个控件的搭配说明，Button则是相应点击事件，可以将Button理解为可以点击的TextView，而EditText则用于接受用户的输入。<br>（3）程序初始化时给TextView设置默认值，在按钮被点击后会出现的响应，使得文本框内容发生改变（改变后的内容将包含在EditText中输入的信息）。<br>（4）请编写代码实现：点击提交按钮后，打开一个新的界面，并在其中显示输入的信息。<br>（5）在新的界面中再添加一个CheckBox（复选框）控件（复选框应有3个以上可选择项，内容不限）和一个Button（按钮）控件。请编写代码实现：当点击按钮时，关闭当前界面并将复选框选择的内容信息返回至第一个界面并显示。</p><p><img src="https://img-blog.csdnimg.cn/20210602214346550.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210602214329283.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210602214358532.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210602214402452.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210602214455607.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/2021060221445987.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210602214502162.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/textView2&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;16dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;16dp&quot;</span></span><br><span class="line">        android:layout_marginBottom=<span class="string">&quot;18dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;选择内容&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toTopOf=<span class="string">&quot;@+id/button&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/button&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;4dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;4dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;93dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;复选框页面&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity2&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Button</span><br><span class="line">        android:id=<span class="string">&quot;@+id/but&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;57dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;57dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;42dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;返回&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toBottomOf=<span class="string">&quot;@+id/checkBox3&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;CheckBox</span><br><span class="line">        android:id=<span class="string">&quot;@+id/checkBox1&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;2dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;2dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;高兴&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toTopOf=<span class="string">&quot;@+id/checkBox2&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;@+id/checkBox2&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;CheckBox</span><br><span class="line">        android:id=<span class="string">&quot;@+id/checkBox2&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;68dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;68dp&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;205dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;伤心&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;CheckBox</span><br><span class="line">        android:id=<span class="string">&quot;@+id/checkBox3&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;46dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;平静&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;@+id/checkBox2&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;@+id/checkBox2&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.annotation.Nullable;</span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/** Called when the activity is first created. */</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">            setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">            <span class="type">Button</span> <span class="variable">button</span> <span class="operator">=</span> (Button) findViewById(R.id.button);</span><br><span class="line">            button.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                    <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Intent</span>(MainActivity.<span class="built_in">this</span>,MainActivity2.class);</span><br><span class="line">                    startActivityForResult(intent,<span class="number">0x11</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onActivityResult</span><span class="params">(<span class="type">int</span> requestCode, <span class="type">int</span> resultCode, <span class="meta">@Nullable</span> Intent data)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onActivityResult(requestCode, resultCode, data);</span><br><span class="line">        TextView textView=(TextView) findViewById(R.id.textView2);</span><br><span class="line">        <span class="keyword">if</span> (requestCode==<span class="number">0x11</span> &amp;&amp; resultCode==<span class="number">0x11</span>)&#123;</span><br><span class="line">            <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span>data.getExtras();</span><br><span class="line">            String string= bundle.getString(<span class="string">&quot;check&quot;</span>);</span><br><span class="line">            textView.setText(string);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.content.Intent;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.CheckBox;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity2</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main2);</span><br><span class="line">        <span class="type">Button</span> <span class="variable">button</span> <span class="operator">=</span> (Button) findViewById(R.id.but);</span><br><span class="line">        <span class="comment">// 初始化控件</span></span><br><span class="line">        CheckBox checkBox1, checkBox2, checkBox3;</span><br><span class="line">        List&lt;CheckBox&gt; checkBoxList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;CheckBox&gt;();</span><br><span class="line">        checkBox1 = (CheckBox) findViewById(R.id.checkBox1);</span><br><span class="line">        checkBox2 = (CheckBox) findViewById(R.id.checkBox2);</span><br><span class="line">        checkBox3 = (CheckBox) findViewById(R.id.checkBox3);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将所有的checkbox放到一个集合中</span></span><br><span class="line">        checkBoxList.add(checkBox1);</span><br><span class="line">        checkBoxList.add(checkBox2);</span><br><span class="line">        checkBoxList.add(checkBox3);</span><br><span class="line"></span><br><span class="line">        button.setOnClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">            <span class="type">Intent</span> <span class="variable">intent</span> <span class="operator">=</span> getIntent();</span><br><span class="line">            <span class="type">Bundle</span> <span class="variable">bundle</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Bundle</span>();</span><br><span class="line">                <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">                <span class="comment">//遍历集合中的checkBox,判断是否选择，获取选中的文本</span></span><br><span class="line">                <span class="keyword">for</span> (CheckBox checkbox : checkBoxList) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (checkbox.isChecked())&#123;</span><br><span class="line">                        sb.append(checkbox.getText().toString() + <span class="string">&quot; &quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> sb.toString();</span><br><span class="line">                <span class="keyword">if</span> (sb!=<span class="literal">null</span> &amp;&amp; <span class="string">&quot;&quot;</span>.equals(sb.toString()))&#123;</span><br><span class="line">                    Toast.makeText(getApplicationContext(), <span class="string">&quot;请至少选择一个&quot;</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(getApplicationContext(), sb.toString(), Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                bundle.putCharSequence(<span class="string">&quot;check&quot;</span>,s);</span><br><span class="line">                intent.putExtras(bundle);</span><br><span class="line">                setResult(<span class="number">0x11</span>,intent);</span><br><span class="line">                finish();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-掌握下拉列表（Spinner）控件的使用方法"><a href="#3-掌握下拉列表（Spinner）控件的使用方法" class="headerlink" title="3. 掌握下拉列表（Spinner）控件的使用方法"></a>3. 掌握下拉列表（Spinner）控件的使用方法</h2><p>（1）ArrayAdapter可称为数组适配器，是Spinner和ListView中最简单的一种适配器，它将一个数组和列表控件之间建立连接，可以将数组里定义的内容一一对应的显示在列表中。<br>（2）新建一个安卓工程，在默认的layout界面中添加两个文本框（TextView）控件，一个用于显示提示信息“请选择：”，另一个用于显示下拉列表选择的结果信息。添加一个下拉列表（Spinner）控件。<br>（3）在工程项目res&#x2F;values下的string.xml中添加一个stringarray,名称为citys，内容为城市列表信息，如下：<br><img src="https://img-blog.csdnimg.cn/20210602213018399.png" alt="在这里插入图片描述"></p><p>（4）使用下列代码实现下拉列表功能。程序初始化时，为下拉列表定义一个适配器ArrayAdapter，为下拉列表赋值，列表选项从citys中获取。下拉列表从适配器中读取值，调用下拉列表赋值、响应函数。<br><img src="https://img-blog.csdnimg.cn/20210602214605949.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210602214611278.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210602214614956.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/textView&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;39dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;TextView&quot;</span></span><br><span class="line">        app:layout_constraintEnd_toEndOf=<span class="string">&quot;@+id/textView2&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;@+id/textView2&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/textView2&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginStart=<span class="string">&quot;61dp&quot;</span></span><br><span class="line">        android:layout_marginLeft=<span class="string">&quot;61dp&quot;</span></span><br><span class="line">        android:layout_marginBottom=<span class="string">&quot;40dp&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;TextView&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toTopOf=<span class="string">&quot;@+id/spinner&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Spinner</span><br><span class="line">        android:id=<span class="string">&quot;@+id/spinner&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;0dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_marginTop=<span class="string">&quot;168dp&quot;</span></span><br><span class="line">        app:layout_constraintEnd_toEndOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;resources&gt;</span><br><span class="line">    &lt;string name=<span class="string">&quot;app_name&quot;</span>&gt;My Application3&lt;/string&gt;</span><br><span class="line">    &lt;string-array name=<span class="string">&quot;cities&quot;</span>&gt;</span><br><span class="line">        &lt;item&gt;--请选择--&lt;/item&gt;</span><br><span class="line">        &lt;item&gt;北京&lt;/item&gt;</span><br><span class="line">        &lt;item&gt;上海&lt;/item&gt;</span><br><span class="line">        &lt;item&gt;成都&lt;/item&gt;</span><br><span class="line">        &lt;item&gt;南京&lt;/item&gt;</span><br><span class="line">        &lt;item&gt;香港&lt;/item&gt;</span><br><span class="line">    &lt;/string-array&gt;</span><br><span class="line">&lt;/resources&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication3;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.AdapterView;</span><br><span class="line"><span class="keyword">import</span> android.widget.ArrayAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.Spinner;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">        TextView tv1;</span><br><span class="line">        TextView tv2;</span><br><span class="line">        Spinner sp;</span><br><span class="line">        View.<span class="type">OnClickListener</span> <span class="variable">ocl</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        ArrayAdapter&lt;CharSequence&gt; adapter;</span><br><span class="line">        <span class="comment">/** Called when the activity is first created. */</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">            <span class="comment">//class</span></span><br><span class="line">            <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">            setContentView(R.layout.activity_main);</span><br><span class="line">            tv1 = (TextView)findViewById(R.id.textView);</span><br><span class="line">            tv2 = (TextView)findViewById(R.id.textView2);</span><br><span class="line">            sp = (Spinner)findViewById(R.id.spinner);</span><br><span class="line">            tv1.setText(<span class="string">&quot;请选择&quot;</span>);</span><br><span class="line">            sp.setPrompt(<span class="string">&quot;选择项&quot;</span>);<span class="comment">//为列表项设置标题</span></span><br><span class="line">            spinner_set();<span class="comment">//调用下拉列表赋值、响应函数</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">spinner_set</span><span class="params">()</span>&#123;</span><br><span class="line">            <span class="comment">//将下拉列表的值先传给适配器</span></span><br><span class="line">            adapter = ArrayAdapter.createFromResource(<span class="built_in">this</span>, R.array.cities, android.R.layout.simple_spinner_item);</span><br><span class="line">            <span class="comment">//适配器获得值</span></span><br><span class="line">            adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);</span><br><span class="line">            <span class="comment">//下拉列表从适配器中读取值</span></span><br><span class="line">            sp.setAdapter(adapter);</span><br><span class="line">            <span class="comment">//下拉列表选定值后响应</span></span><br><span class="line">            sp.setOnItemSelectedListener(<span class="keyword">new</span> <span class="title class_">AdapterView</span>.OnItemSelectedListener() &#123;</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onItemSelected</span><span class="params">(AdapterView&lt;?&gt; arg0, View arg1,</span></span><br><span class="line"><span class="params">                                           <span class="type">int</span> arg2, <span class="type">long</span> arg3)</span> &#123;</span><br><span class="line">                    <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                    <span class="keyword">if</span>(arg2 != <span class="number">0</span>)&#123;</span><br><span class="line">                        tv2.setText(<span class="string">&quot;您选择的是：&quot;</span> + adapter.getItem(arg2));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        tv2.setText(<span class="string">&quot;您还没有选择!&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNothingSelected</span><span class="params">(AdapterView&lt;?&gt; arg0)</span> &#123;</span><br><span class="line">                    <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">                    tv2.setText(<span class="string">&quot;您还没有选择!&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="4-掌握列表（ListView）控件的使用方法"><a href="#4-掌握列表（ListView）控件的使用方法" class="headerlink" title="4.掌握列表（ListView）控件的使用方法"></a>4.掌握列表（ListView）控件的使用方法</h2><p>（1）ListView控件也通过ArrayAdapter建立与数据的连接，可以将数组里定义的内容一一对应的显示在ListView中，每一项一般只有一个TextView，即一行只能显示一个数组Item调用toString()方法生成的一行字符串。<br>（2）新建一个安卓工程项目，实现列表控件的基本功能：<br>（3）删除lv.setOnItemClickListener相关语句内容，再次运行程序，观察其效果有何变化。思考OnItemSelectedListener和OnItemClickListener的区别。<br><img src="https://img-blog.csdnimg.cn/20210602214621137.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210602214631458.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;TextView</span><br><span class="line">        android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">        android:text=<span class="string">&quot;Hello World!&quot;</span></span><br><span class="line">        app:layout_constraintBottom_toBottomOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintLeft_toLeftOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintRight_toRightOf=<span class="string">&quot;parent&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;parent&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.AdapterView;</span><br><span class="line"><span class="keyword">import</span> android.widget.ArrayAdapter;</span><br><span class="line"><span class="keyword">import</span> android.widget.ListView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">            setContentView(R.layout.activity_main);</span><br><span class="line">            <span class="type">ListView</span> <span class="variable">lv</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ListView</span>(<span class="built_in">this</span>);</span><br><span class="line">            lv.setAdapter(<span class="keyword">new</span> <span class="title class_">ArrayAdapter</span>&lt;String&gt;(<span class="built_in">this</span>, android.R.layout.simple_expandable_list_item_1,getData()));</span><br><span class="line">            setContentView(lv);</span><br><span class="line">            lv.setOnItemClickListener(<span class="keyword">new</span> <span class="title class_">AdapterView</span>.OnItemClickListener()&#123;</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onItemClick</span><span class="params">(AdapterView&lt;?&gt; arg0, View arg1, <span class="type">int</span> arg2,</span></span><br><span class="line"><span class="params">                                        <span class="type">long</span> arg3)</span> &#123;</span><br><span class="line">                    setTitle(<span class="string">&quot;您点击的是：&quot;</span> + arg0.getItemAtPosition(arg2).toString());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            lv.setOnItemSelectedListener(<span class="keyword">new</span> <span class="title class_">AdapterView</span>.OnItemSelectedListener()&#123;</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onItemSelected</span><span class="params">(AdapterView&lt;?&gt; arg0, View arg1,</span></span><br><span class="line"><span class="params">                                           <span class="type">int</span> arg2, <span class="type">long</span> arg3)</span> &#123;</span><br><span class="line">                    setTitle(<span class="string">&quot;您选择的是：&quot;</span> + arg0.getItemAtPosition(arg2).toString());</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onNothingSelected</span><span class="params">(AdapterView&lt;?&gt; arg0)</span> &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;String&gt; <span class="title function_">getData</span><span class="params">()</span>&#123;</span><br><span class="line">            List&lt;String&gt; l = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;String&gt;();</span><br><span class="line">            l.add(<span class="string">&quot;北京&quot;</span>);</span><br><span class="line">            l.add(<span class="string">&quot;上海&quot;</span>);</span><br><span class="line">            l.add(<span class="string">&quot;成都&quot;</span>);</span><br><span class="line">            l.add(<span class="string">&quot;香港&quot;</span>);</span><br><span class="line">            l.add(<span class="string">&quot;南京&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> l;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="5-掌握进度条（ProgressBar）控件的使用方法"><a href="#5-掌握进度条（ProgressBar）控件的使用方法" class="headerlink" title="5.掌握进度条（ProgressBar）控件的使用方法"></a>5.掌握进度条（ProgressBar）控件的使用方法</h2><p>（1）进度条可以为用户呈现操作的进度。一般进度条的长度用来显示进度信息，工作完成量的百分比，同时还可以加入次要进度条显示次要进度信息，比如用主要进度条显示流媒体的播放进度，用次要进度条显示缓冲进度。一个进度条也可不确定其进度。在不确定模式下，进度条显示循环动画。这种模式常用于应用程序使用任务的长度是未知的。<br>（2）进度条相关的重要方法包括：<br>getMax()：返回这个进度条的范围的上限<br>getProgress()：返回进度<br>getSecondaryProgress()：返回次要进度<br>incrementProgressBy(int diff)：指定增加的进度<br>isIndeterminate()：指示进度条是否在不确定模式下<br>setIndeterminate(boolean indeterminate)：设置不确定模式下<br>setVisibility(int v)：设置该进度条是否可视<br>（3）新建一个安卓项目工程，将初始界面的布局改为线性布局（水平），添加五个进度条，其中前三个分别为圆形进度条（小、中、大），第四个为静止条形进度条（进度为50%），第五个为动态条形进度条（初始进度为50%，次要进度为80%），并可通过两个按钮对第五个进度条的进度进行增加和减少操作。相关代码如下：<br><img src="https://img-blog.csdnimg.cn/20210602214643883.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">        tools:layout_editor_absoluteX=<span class="string">&quot;192dp&quot;</span></span><br><span class="line">        tools:layout_editor_absoluteY=<span class="string">&quot;308dp&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;ProgressBar</span><br><span class="line">            android:id=<span class="string">&quot;@+id/progressBar1&quot;</span></span><br><span class="line">            style=<span class="string">&quot;?android:attr/progressBarStyleSmallTitle&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;ProgressBar</span><br><span class="line">            android:id=<span class="string">&quot;@+id/progressBar2&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;ProgressBar</span><br><span class="line">            android:id=<span class="string">&quot;@+id/progressBar3&quot;</span></span><br><span class="line">            style=<span class="string">&quot;?android:attr/progressBarStyleLarge&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;ProgressBar</span><br><span class="line">            android:id=<span class="string">&quot;@+id/progressBar4&quot;</span></span><br><span class="line">            style=<span class="string">&quot;?android:attr/progressBarStyleHorizontal&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;250dip&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:max=<span class="string">&quot;100&quot;</span></span><br><span class="line">            android:progress=<span class="string">&quot;50&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;ProgressBar</span><br><span class="line">            android:id=<span class="string">&quot;@+id/progressBar5&quot;</span></span><br><span class="line">            style=<span class="string">&quot;?android:attr/progressBarStyleHorizontal&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;250dip&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:max=<span class="string">&quot;100&quot;</span></span><br><span class="line">            android:progress=<span class="string">&quot;50&quot;</span></span><br><span class="line">            android:secondaryProgress=<span class="string">&quot;80&quot;</span></span><br><span class="line">            android:layout_marginTop=<span class="string">&quot;20dp&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id=<span class="string">&quot;@+id/button&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;增加&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;Button</span><br><span class="line">            android:id=<span class="string">&quot;@+id/button2&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;wrap_content&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;减少&quot;</span> /&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication5;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.view.Window;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.ProgressBar;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">        ProgressBar pb1,pb2,pb3,pb4,pb5;</span><br><span class="line">        View.<span class="type">OnClickListener</span> <span class="variable">ocl1</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        View.<span class="type">OnClickListener</span> <span class="variable">ocl2</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        Button bt1;</span><br><span class="line">        Button bt2;</span><br><span class="line">        <span class="comment">/** Called when the activity is first created. */</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">            <span class="built_in">this</span>.requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS);<span class="comment">//设置应用程序窗体显示状态</span></span><br><span class="line">            setContentView(R.layout.activity_main);</span><br><span class="line">            setProgressBarIndeterminateVisibility(<span class="literal">true</span>);<span class="comment">//设置窗体显示状态为真，表示一个程序正在运行</span></span><br><span class="line">            pb5 = (ProgressBar)findViewById(R.id.progressBar5);</span><br><span class="line">            bt1 = (Button)findViewById(R.id.button);</span><br><span class="line">            bt2 = (Button)findViewById(R.id.button2);</span><br><span class="line">            ocl1 = <span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()&#123;</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span>&#123;</span><br><span class="line">                    pb5.setProgress((<span class="type">int</span>)(pb5.getProgress()*<span class="number">1.2</span>));</span><br><span class="line">                    <span class="comment">//进度条显示为当前长度的1.2倍</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            ocl2 = <span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()&#123;</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span>&#123;</span><br><span class="line">                    pb5.setProgress((<span class="type">int</span>)(pb5.getProgress()*<span class="number">0.8</span>));</span><br><span class="line">                    <span class="comment">//进度条显示为当前长度的0.8倍</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            bt1.setOnClickListener(ocl1);<span class="comment">//按钮绑定响应操作</span></span><br><span class="line">            bt2.setOnClickListener(ocl2);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="6-掌握缩放按钮（ZoomButton-amp-ZoomControl）控件的使用方法"><a href="#6-掌握缩放按钮（ZoomButton-amp-ZoomControl）控件的使用方法" class="headerlink" title="6.掌握缩放按钮（ZoomButton&amp;ZoomControl）控件的使用方法"></a>6.掌握缩放按钮（ZoomButton&amp;ZoomControl）控件的使用方法</h2><p>（1）ZoomControls是一个包含放大、缩小按钮的控件。而ZoomButton是您自己定义的缩放按钮，它允许你定义多个这样的按钮，它显示的只能是图片，没有Text属性。<br>（2）新建一个安卓工程项目，添加一个TextView控件用来显示要进行缩放的文本，添加一个ZoomControls控件用来完成缩放。相关代码如下：<br><img src="https://img-blog.csdnimg.cn/202106022146514.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1ODA4NzAw,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2021060221470362.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210602214706333.png" alt="在这里插入图片描述"></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;utf-8&quot;</span>?&gt;</span><br><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;LinearLayout</span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:orientation=<span class="string">&quot;vertical&quot;</span></span><br><span class="line">        tools:layout_editor_absoluteX=<span class="string">&quot;163dp&quot;</span></span><br><span class="line">        tools:layout_editor_absoluteY=<span class="string">&quot;306dp&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;TextView</span><br><span class="line">            android:id=<span class="string">&quot;@+id/textView&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;979dp&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;207dp&quot;</span></span><br><span class="line">            android:text=<span class="string">&quot;我是放大了还是缩小了&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">        &lt;ZoomControls</span><br><span class="line">            android:id=<span class="string">&quot;@+id/myZoomController&quot;</span></span><br><span class="line">            android:layout_width=<span class="string">&quot;211dp&quot;</span></span><br><span class="line">            android:layout_height=<span class="string">&quot;99dp&quot;</span></span><br><span class="line">            android:gravity=<span class="string">&quot;center_horizontal&quot;</span> /&gt;</span><br><span class="line">    &lt;/LinearLayout&gt;</span><br><span class="line"></span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.myapplication6;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> androidx.appcompat.app.AppCompatActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.ZoomControls;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainActivity</span> <span class="keyword">extends</span> <span class="title class_">AppCompatActivity</span> &#123;</span><br><span class="line"></span><br><span class="line">        TextView tv1;</span><br><span class="line">        <span class="keyword">static</span> <span class="type">float</span> <span class="variable">size1</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="comment">/** Called when the activity is first created. */</span></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">            <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line">            setContentView(R.layout.activity_main);</span><br><span class="line">            tv1 = (TextView)findViewById(R.id.textView);<span class="comment">//定义一个图片视图对象</span></span><br><span class="line">            <span class="type">ZoomControls</span> <span class="variable">zc</span> <span class="operator">=</span> (ZoomControls)findViewById(R.id.myZoomController);</span><br><span class="line">            zc.setOnZoomInClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()&#123;<span class="comment">//设置ZoomControls的放大监听器</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                    size1 += <span class="number">10</span>;</span><br><span class="line">                    tv1.setText(<span class="string">&quot;ZoomControlsLarger&quot;</span>);</span><br><span class="line">                    tv1.setTextSize(size1);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            zc.setOnZoomOutClickListener(<span class="keyword">new</span> <span class="title class_">View</span>.OnClickListener()&#123;<span class="comment">//设置ZoomControls的缩小监听器</span></span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onClick</span><span class="params">(View v)</span> &#123;</span><br><span class="line">                    size1 -= <span class="number">10</span>;</span><br><span class="line">                    tv1.setText(<span class="string">&quot;ZoomControlsSmaller&quot;</span>);</span><br><span class="line">                    tv1.setTextSize(size1);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Android-UI控件的使用&quot;&gt;&lt;a href=&quot;#Android-UI控件的使用&quot; class=&quot;headerlink&quot; title=&quot;Android UI控件的使用&quot;&gt;&lt;/a&gt;Android UI控件的使用&lt;/h1&gt;&lt;h2 id=&quot;一、实验目的&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="软件项目" scheme="https://pistachiout.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/"/>
    
    <category term="Android项目" scheme="https://pistachiout.github.io/categories/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE/Android%E9%A1%B9%E7%9B%AE/"/>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/MyBatis%20Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://pistachiout.github.io/wiki/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/MyBatis%20Plus%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2023-02-15T02:18:41.668Z</published>
    <updated>2023-02-15T02:18:42.277Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MyBatis-Plus"><a href="#MyBatis-Plus" class="headerlink" title="MyBatis Plus"></a>MyBatis Plus</h2><p>国产的开源框架，基于 MyBatis<br>在Mybatis-Plus中，内置了代码生成器，我们可以通过该工具，生成我们需要的代码，例如：entity层，controller层，mapper层，service层。如此一来，我么就可以节省编码的时间，优化开发。</p><h2 id="MyBatis-Plus-快速上手"><a href="#MyBatis-Plus-快速上手" class="headerlink" title="MyBatis Plus 快速上手"></a>MyBatis Plus 快速上手</h2><p>Spring Boot(2.3.0) + MyBatis Plus（国产的开源框架，并没有接入到 Spring 官方孵化器中）</p><p>1、创建 Maven 工程</p><p>2、pom.xml 引入 MyBatis Plus 的依赖mybatis-plus-boot-starter</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1.tmp<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>3、创建实体类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mybatisplus.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4、创建 Mapper 接口，继承 BaseMapper<T>，不用自己写代码</T></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mybatisplus.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.mybatisplus.entity.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5、application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/db?useUnicode=true&amp;characterEncoding=UTF-8</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">mybatis-plus:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br></pre></td></tr></table></figure><p>6、启动类main需要添加 @MapperScan(扫描”mapper所在的包”)，否则无法加载 Mppaer bean。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(&quot;com.southwind.mybatisplus.mapper&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisplusApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(MybatisplusApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7、测试</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UserMapperTest</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper mapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        mapper.selectList(<span class="literal">null</span>).forEach(System.out::println);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="常用注解"><a href="#常用注解" class="headerlink" title="常用注解"></a>常用注解</h2><blockquote><p>@TableName映射数据库的表名</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName(value = &quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>@TableId设置主键映射，value 映射主键字段名</p></blockquote><p>type 设置主键的生成策略，如雪花算法或自增等</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">AUTO(<span class="number">0</span>),</span><br><span class="line">NONE(<span class="number">1</span>),</span><br><span class="line">INPUT(<span class="number">2</span>),</span><br><span class="line">ASSIGN_ID(<span class="number">3</span>),</span><br><span class="line">ASSIGN_UUID(<span class="number">4</span>),</span><br><span class="line"><span class="comment">/** <span class="doctag">@deprecated</span> */</span></span><br><span class="line"><span class="meta">@Deprecated</span></span><br><span class="line">ID_WORKER(<span class="number">3</span>),</span><br><span class="line"><span class="comment">/** <span class="doctag">@deprecated</span> */</span></span><br><span class="line"><span class="meta">@Deprecated</span></span><br><span class="line">ID_WORKER_STR(<span class="number">3</span>),</span><br><span class="line"><span class="comment">/** <span class="doctag">@deprecated</span> */</span></span><br><span class="line"><span class="meta">@Deprecated</span></span><br><span class="line">UUID(<span class="number">4</span>);</span><br></pre></td></tr></table></figure><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>AUTO</td><td>数据库自增</td></tr><tr><td>NONE</td><td>MP set 主键，雪花算法实现</td></tr><tr><td>INPUT</td><td>开发者手动赋值</td></tr><tr><td>ASSIGN_ID</td><td>MP 分配 ID，Long、Integer、String</td></tr><tr><td>ASSIGN_UUID</td><td>分配 UUID，Strinig</td></tr></tbody></table><p>INPUT 如果开发者没有手动赋值，则数据库通过自增的方式给主键赋值，如果开发者手动赋值，则存入该值。</p><p>AUTO 默认就是数据库自增，开发者无需赋值。</p><p>ASSIGN_ID MP 自动赋值，雪花算法。</p><p>ASSIGN_UUID 主键的数据类型必须是 String，自动生成 UUID 进行赋值</p><blockquote><p>@TableField映射非主键字段，value 映射字段名</p></blockquote><p>exist 表示是否为数据库字段 false，如果实体类中的成员变量在数据库中没有对应的字段，则可以使用 exist，VO、DTO</p><p>select 表示是否查询该字段</p><p>fill 表示是否自动填充，将对象存入数据库的时候，由 MyBatis Plus 自动给某些字段赋值，create_time、update_time</p><p>1、给表添加 create_time、update_time 字段</p><p>2、实体类中添加成员变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableField;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableId;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.TableName;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@TableName(value = &quot;user&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> &#123;</span><br><span class="line">    <span class="meta">@TableId</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line">    <span class="meta">@TableField(value = &quot;name&quot;,select = false)</span></span><br><span class="line">    <span class="keyword">private</span> String title;</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@TableField(exist = false)</span></span><br><span class="line">    <span class="keyword">private</span> String gender;<span class="comment">//在数据库中没有该字段</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT)</span></span><br><span class="line">    <span class="keyword">private</span> Date createTime;<span class="comment">//自动导入创建时间</span></span><br><span class="line">    <span class="meta">@TableField(fill = FieldFill.INSERT_UPDATE)</span></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;<span class="comment">//自动导入更新时间</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3、创建自动填充处理器，需要实现MetaObjectHandler ，然后重写insertFill()与updateFill()。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.handler;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.handlers.MetaObjectHandler;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.reflection.MetaObject;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyMetaObjectHandler</span> <span class="keyword">implements</span> <span class="title class_">MetaObjectHandler</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">insertFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;createTime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),metaObject);</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateFill</span><span class="params">(MetaObject metaObject)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.setFieldValByName(<span class="string">&quot;updateTime&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>(),metaObject);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>@Version标记乐观锁</strong></p></blockquote><p>乐观锁：十分乐观，它总是认为不会出现问题，无论干什么都不去上锁！ 如果出现了问题，再去上锁。<br>通过 version 字段来保证数据的安全性，当修改数据的时候，会以 version 作为条件，当条件成立的时候才会修改成功。</p><p><strong>乐观锁实现机制：</strong><br>取出记录时，获取当前 version<br>更新时，带上这个 version<br>执行更新时， set version &#x3D; newVersion where version &#x3D; oldVersion<br>如果 version 不对，就更新失败</p><p><img src="https://img-blog.csdnimg.cn/9b5ec57a3d7f45c3924cf54fde87bf05.png" alt="在这里插入图片描述"></p><p>1、数据库表添加 version 字段，默认值为 1</p><p>2、实体类添加 version 成员变量，并且添加 @Version </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Version</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> version;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、注册乐观锁配置类optimisticLockerInterceptor</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.extension.plugins.OptimisticLockerInterceptor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyBatisPlusConfig</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> OptimisticLockerInterceptor <span class="title function_">optimisticLockerInterceptor</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">OptimisticLockerInterceptor</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>多线程测试乐观锁</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line">   <span class="keyword">void</span> <span class="title function_">testOptimisticLocker2</span><span class="params">()</span>&#123;</span><br><span class="line">       <span class="comment">//多线程操作乐观锁</span></span><br><span class="line">       <span class="comment">//线程1操作，此时 version = 1</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.selectById(<span class="number">4L</span>);</span><br><span class="line">       user.setName(<span class="string">&quot;66666&quot;</span>);</span><br><span class="line">       user.setAge(<span class="number">100</span>);</span><br><span class="line">       <span class="comment">//线程2抢占执行</span></span><br><span class="line">       <span class="type">User</span> <span class="variable">user2</span> <span class="operator">=</span> userMapper.selectById(<span class="number">4L</span>);</span><br><span class="line">       user2.setName(<span class="string">&quot;88888&quot;</span>);</span><br><span class="line">       user2.setAge(<span class="number">200</span>);</span><br><span class="line">       <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> userMapper.updateById(user2);</span><br><span class="line">       <span class="comment">//执行完成后 version 变为 2</span></span><br><span class="line">       System.out.println(i2);</span><br><span class="line">       <span class="comment">//线程1 继续执行，但是此时发现version = 2，无法满足 version = 1 的要求，无法进行覆盖</span></span><br><span class="line">       <span class="comment">//如果没有乐观锁,线程 1 会进行覆盖线程 2 的修改</span></span><br><span class="line">       <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> userMapper.updateById(user);</span><br><span class="line">       System.out.println(i);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>@EnumValue实现枚举</p></blockquote><p>方法1、通用枚举类注解@EnumValue，将数据库字段映射成实体类的枚举类型成员变量</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.EnumValue;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">StatusEnum</span> &#123;</span><br><span class="line">    WORK(<span class="number">1</span>,<span class="string">&quot;上班&quot;</span>),</span><br><span class="line">    REST(<span class="number">0</span>,<span class="string">&quot;休息&quot;</span>);</span><br><span class="line">    StatusEnum(Integer code, String msg) &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@EnumValue</span></span><br><span class="line">    <span class="keyword">private</span> Integer code;</span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> StatusEnum status;</span><br></pre></td></tr></table></figure><p>application.yml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">type-enums-package:</span> </span><br><span class="line">  <span class="string">com.southwind.mybatisplus.enums</span></span><br></pre></td></tr></table></figure><blockquote><p>@TableLogic映射逻辑删除</p></blockquote><p>1、数据表添加 deleted 字段</p><p>2、实体类添加注解与对应字段</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@TableLogic</span></span><br><span class="line"><span class="keyword">private</span> Integer deleted;</span><br></pre></td></tr></table></figure><p>3、application.yml 添加配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">global-config:</span></span><br><span class="line">  <span class="attr">db-config:</span></span><br><span class="line">    <span class="attr">logic-not-delete-value:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">logic-delete-value:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>4.配置类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisPlusConfig</span> &#123;</span><br><span class="line">    <span class="comment">// 逻辑删除注入 3.0.5</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ISqlInjector <span class="title function_">sqlInjector</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LogicSqlInjector</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="MyBatis-Plus查询"><a href="#MyBatis-Plus查询" class="headerlink" title="MyBatis-Plus查询"></a>MyBatis-Plus查询</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">mapper.selectList(<span class="literal">null</span>);<span class="comment">//全部查询</span></span><br><span class="line"><span class="type">QueryWrapper</span> <span class="variable">wrapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>();</span><br><span class="line">       Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">       map.put(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小红&quot;</span>);</span><br><span class="line">       map.put(<span class="string">&quot;age&quot;</span>,<span class="number">3</span>);</span><br><span class="line">       wrapper.allEq(map);<span class="comment">//等于</span></span><br><span class="line">      wrapper.gt(<span class="string">&quot;age&quot;</span>,<span class="number">2</span>);<span class="comment">//大于</span></span><br><span class="line">      wrapper.ne(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小红&quot;</span>);<span class="comment">//不等于</span></span><br><span class="line">      wrapper.ge(<span class="string">&quot;age&quot;</span>,<span class="number">2</span>);<span class="comment">//大于等于</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//like &#x27;%小&#x27;</span></span><br><span class="line">    wrapper.likeLeft(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小&quot;</span>);</span><br><span class="line"><span class="comment">//like &#x27;小%&#x27;</span></span><br><span class="line">        wrapper.likeRight(<span class="string">&quot;name&quot;</span>,<span class="string">&quot;小&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//inSQL   </span></span><br><span class="line">   wrapper.inSql(<span class="string">&quot;id&quot;</span>,<span class="string">&quot;select id from user where id &lt; 10&quot;</span>);</span><br><span class="line">   wrapper.inSql(<span class="string">&quot;age&quot;</span>,<span class="string">&quot;select age from user where age &gt; 3&quot;</span>);</span><br><span class="line"></span><br><span class="line">     wrapper.orderByDesc(<span class="string">&quot;age&quot;</span>);<span class="comment">//排序</span></span><br><span class="line"></span><br><span class="line">     wrapper.orderByAsc(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">     wrapper.having(<span class="string">&quot;id &gt; 8&quot;</span>);</span><br><span class="line"></span><br><span class="line">mapper.selectList(wrapper).forEach(System.out::println);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">       System.out.println(mapper.selectById(<span class="number">7</span>));</span><br><span class="line">       mapper.selectBatchIds(Arrays.asList(<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>)).forEach(System.out::println);</span><br><span class="line"></span><br><span class="line">   <span class="comment">//Map 只能做等值判断，逻辑判断需要使用 Wrapper 来处理</span></span><br><span class="line">       Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;id&quot;</span>,<span class="number">7</span>);</span><br><span class="line">       mapper.selectByMap(map).forEach(System.out::println);</span><br><span class="line"></span><br><span class="line"><span class="type">QueryWrapper</span> <span class="variable">wrapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>();</span><br><span class="line">wrapper.eq(<span class="string">&quot;id&quot;</span>,<span class="number">7</span>);</span><br><span class="line">       System.out.println(mapper.selectCount(wrapper));</span><br><span class="line">     <span class="comment">//将查询的结果集封装到Map中</span></span><br><span class="line">        mapper.selectMaps(wrapper).forEach(System.out::println);</span><br><span class="line">       System.out.println(<span class="string">&quot;-------------------&quot;</span>);</span><br><span class="line">       mapper.selectList(wrapper).forEach(System.out::println);</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="分页查询Page"><a href="#分页查询Page" class="headerlink" title="分页查询Page"></a>分页查询Page</h2><p>1.配置分页插件</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> PaginationInterceptor <span class="title function_">mypaginationInterceptor</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PaginationInterceptor</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 2.直接使用page对象进行查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//参数一 ： 当前页</span></span><br><span class="line">        <span class="comment">//参数二 ： 页面大小</span></span><br><span class="line">       Page&lt;User&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">2</span>,<span class="number">2</span>);</span><br><span class="line">        Page&lt;User&gt; result = mapper.selectPage(page,<span class="literal">null</span>);</span><br><span class="line">       System.out.println(result.getSize());</span><br><span class="line">        System.out.println(result.getTotal());</span><br><span class="line">       result.getRecords().forEach(System.out::println);</span><br><span class="line">       Page&lt;Map&lt;String,Object&gt;&gt; page = <span class="keyword">new</span> <span class="title class_">Page</span>&lt;&gt;(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">        mapper.selectMapsPage(page,<span class="literal">null</span>).getRecords().forEach(System.out::println);</span><br><span class="line">       mapper.selectObjs(<span class="literal">null</span>).forEach(System.out::println);</span><br><span class="line">System.out.println(mapper.selectOne(wrapper));</span><br></pre></td></tr></table></figure><h2 id="自定义-SQL（多表关联查询）"><a href="#自定义-SQL（多表关联查询）" class="headerlink" title="自定义 SQL（多表关联查询）"></a>自定义 SQL（多表关联查询）</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductVO</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer category;</span><br><span class="line">    <span class="keyword">private</span> Integer count;</span><br><span class="line">    <span class="keyword">private</span> String description;</span><br><span class="line">    <span class="keyword">private</span> Integer userId;</span><br><span class="line">    <span class="keyword">private</span> String userName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.southwind.mybatisplus.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.mapper.BaseMapper;</span><br><span class="line"><span class="keyword">import</span> com.southwind.mybatisplus.entity.ProductVO;</span><br><span class="line"><span class="keyword">import</span> com.southwind.mybatisplus.entity.User;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> <span class="keyword">extends</span> <span class="title class_">BaseMapper</span>&lt;User&gt; &#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select p.*,u.name userName from product p,user u where p.user_id = u.id and u.id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    List&lt;ProductVO&gt; <span class="title function_">productList</span><span class="params">(Integer id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="添加"><a href="#添加" class="headerlink" title="添加"></a>添加</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">user.setTitle(<span class="string">&quot;小明&quot;</span>);</span><br><span class="line">user.setAge(<span class="number">22</span>);</span><br><span class="line">mapper.insert(user);</span><br><span class="line">System.out.println(user);</span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mapper.deleteById(<span class="number">1</span>);</span><br><span class="line"> mapper.deleteBatchIds(Arrays.asList(<span class="number">7</span>,<span class="number">8</span>));</span><br><span class="line"> <span class="type">QueryWrapper</span> <span class="variable">wrapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>();</span><br><span class="line"> wrapper.eq(<span class="string">&quot;age&quot;</span>,<span class="number">14</span>);</span><br><span class="line"> mapper.delete(wrapper);</span><br><span class="line">Map&lt;String,Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">map.put(<span class="string">&quot;id&quot;</span>,<span class="number">10</span>);</span><br><span class="line">mapper.deleteByMap(map);</span><br></pre></td></tr></table></figure><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> mapper.selectById(<span class="number">1</span>);</span><br><span class="line">user.setTitle(<span class="string">&quot;小红&quot;</span>);</span><br><span class="line"><span class="type">QueryWrapper</span> <span class="variable">wrapper</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryWrapper</span>();</span><br><span class="line">wrapper.eq(<span class="string">&quot;age&quot;</span>,<span class="number">22</span>);</span><br><span class="line">mapper.update(user,wrapper);</span><br></pre></td></tr></table></figure><h2 id="MyBatisPlus-自动生成"><a href="#MyBatisPlus-自动生成" class="headerlink" title="MyBatisPlus 自动生成"></a>MyBatisPlus 自动生成</h2><p>根据数据表自动生成实体类、Mapper、Service、ServiceImpl、Controller</p><p>1、pom.xml 导入 MyBatis Plus Generator</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.baomidou<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-plus-generator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.3.1.tmp<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.velocity<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>velocity<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>模板引擎依赖，MyBatis-Plus 支持 Velocity（默认）、Freemarker、Beet</p><p>2、代码生成程序（注意：一定不能导错包，要用mybatis-plus中的包）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.janson.generate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.annotation.FieldFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.AutoGenerator;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.DataSourceConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.GlobalConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.PackageConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.StrategyConfig;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.po.TableFill;</span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span> Janson</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Date</span> 2022/3/15 8:33</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CodeGenerate</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 代码生成器</span></span><br><span class="line">        <span class="type">AutoGenerator</span> <span class="variable">mpg</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AutoGenerator</span>();</span><br><span class="line">        <span class="comment">// 全局配置</span></span><br><span class="line">        <span class="type">GlobalConfig</span> <span class="variable">gc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GlobalConfig</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">projectPath</span> <span class="operator">=</span> System.getProperty(<span class="string">&quot;user.dir&quot;</span>);</span><br><span class="line">        gc.setOutputDir(projectPath + <span class="string">&quot;/src/main/java&quot;</span>);</span><br><span class="line">        gc.setAuthor(<span class="string">&quot;Pistachiout&quot;</span>);</span><br><span class="line">        gc.setOpen(<span class="literal">false</span>);</span><br><span class="line">        gc.setFileOverride(<span class="literal">false</span>); <span class="comment">//是否覆盖</span></span><br><span class="line">        gc.setSwagger2(<span class="literal">true</span>); <span class="comment">//实体属性 Swagger2 注解</span></span><br><span class="line">        mpg.setGlobalConfig(gc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 数据源配置</span></span><br><span class="line">        <span class="type">DataSourceConfig</span> <span class="variable">dsc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DataSourceConfig</span>();</span><br><span class="line">        dsc.setUrl(<span class="string">&quot;jdbc:mysql://localhost:3306/mybatisplus?useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">// dsc.setSchemaName(&quot;public&quot;);</span></span><br><span class="line">        dsc.setDriverName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        dsc.setUsername(<span class="string">&quot;root&quot;</span>);</span><br><span class="line">        dsc.setPassword(<span class="string">&quot;11111&quot;</span>);</span><br><span class="line">        mpg.setDataSource(dsc);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 包配置</span></span><br><span class="line">        <span class="type">PackageConfig</span> <span class="variable">pc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PackageConfig</span>();</span><br><span class="line">        pc.setModuleName(<span class="string">&quot;generate&quot;</span>);</span><br><span class="line">        pc.setParent(<span class="string">&quot;com&quot;</span>);</span><br><span class="line">        pc.setEntity(<span class="string">&quot;entity&quot;</span>);</span><br><span class="line">        pc.setMapper(<span class="string">&quot;mapper&quot;</span>);</span><br><span class="line">        pc.setController(<span class="string">&quot;controller&quot;</span>);</span><br><span class="line">        pc.setService(<span class="string">&quot;service&quot;</span>);</span><br><span class="line">        mpg.setPackageInfo(pc);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">        <span class="comment">// 策略配置</span></span><br><span class="line">        <span class="type">StrategyConfig</span> <span class="variable">strategy</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StrategyConfig</span>();</span><br><span class="line">        strategy.setNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        strategy.setColumnNaming(NamingStrategy.underline_to_camel);</span><br><span class="line">        <span class="comment">//strategy.setSuperEntityClass(&quot;你自己的父类实体,没有就不用设置!&quot;);</span></span><br><span class="line">        strategy.setEntityLombokModel(<span class="literal">true</span>);  <span class="comment">//自动加上lombok</span></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">// 公共父类</span></span><br><span class="line">        <span class="comment">//strategy.setSuperControllerClass(&quot;你自己的父类控制器,没有就不用设置!&quot;);</span></span><br><span class="line">        <span class="comment">// 写于父类中的公共字段</span></span><br><span class="line">        strategy.setSuperEntityColumns(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">        <span class="comment">//strategy.setInclude(scanner(&quot;表名，多个英文逗号分割&quot;).split(&quot;,&quot;));</span></span><br><span class="line">        strategy.setInclude(<span class="string">&quot;user&quot;</span>);   <span class="comment">//设置映射表名</span></span><br><span class="line">        strategy.setLogicDeleteFieldName(<span class="string">&quot;deleted&quot;</span>); <span class="comment">// 逻辑删除</span></span><br><span class="line">        <span class="comment">//自动填充</span></span><br><span class="line">        <span class="type">TableFill</span> <span class="variable">createTime</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableFill</span>(<span class="string">&quot;create_time&quot;</span>, FieldFill.INSERT);</span><br><span class="line">        <span class="type">TableFill</span> <span class="variable">updateTime</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TableFill</span>(<span class="string">&quot;update_time&quot;</span>, FieldFill.UPDATE);</span><br><span class="line">        List&lt;TableFill&gt; fillList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>();</span><br><span class="line">        fillList.add(createTime);</span><br><span class="line">        fillList.add(updateTime);</span><br><span class="line">        strategy.setTableFillList(fillList);</span><br><span class="line">        <span class="comment">//乐观锁</span></span><br><span class="line">        strategy.setVersionFieldName(<span class="string">&quot;version&quot;</span>);</span><br><span class="line">        <span class="comment">//restful风格</span></span><br><span class="line">        strategy.setRestControllerStyle(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//localhost:8080/hello_id_1 或者2</span></span><br><span class="line">        strategy.setControllerMappingHyphenStyle(<span class="literal">true</span>);</span><br><span class="line">        <span class="comment">//strategy.setTablePrefix(pc.getModuleName() + &quot;_&quot;);</span></span><br><span class="line">        mpg.setStrategy(strategy);</span><br><span class="line">        <span class="comment">//mpg.setTemplateEngine(new FreemarkerTemplateEngine());</span></span><br><span class="line">        mpg.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Spring-Boot-MyBatis-Plus-打包应用，直接发布-阿里云-上云"><a href="#Spring-Boot-MyBatis-Plus-打包应用，直接发布-阿里云-上云" class="headerlink" title="Spring Boot + MyBatis Plus 打包应用，直接发布 阿里云 上云"></a>Spring Boot + MyBatis Plus 打包应用，直接发布 阿里云 上云</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;MyBatis-Plus&quot;&gt;&lt;a href=&quot;#MyBatis-Plus&quot; class=&quot;headerlink&quot; title=&quot;MyBatis Plus&quot;&gt;&lt;/a&gt;MyBatis Plus&lt;/h2&gt;&lt;p&gt;国产的开源框架，基于 MyBatis&lt;br&gt;在Mybatis</summary>
      
    
    
    
    <category term="计算机基础知识" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    <category term="编程语言" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
    <category term="Java" scheme="https://pistachiout.github.io/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/"/>
    
    
  </entry>
  
</feed>
